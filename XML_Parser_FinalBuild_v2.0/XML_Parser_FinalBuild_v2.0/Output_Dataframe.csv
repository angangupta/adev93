Mapping Index,Target Index,Mapping Name,Source Instance Type,Source Instance,Source Location,Source Field,Target Instance Type,Target Instance,Target Field,Port Type,Expression,Source Override SQL,Pre Post SQL,Joiner Extract,Filter Expression
1,1,SDE_ORA_BOMHeaderDimension,Source Definition,MTL_SYSTEM_ITEMS_B,OLTP,INVENTORY_ITEM_ID,Source Qualifier,SQ_BOM_INVENTORY_COMPONENTS,INVENTORY_ITEM_ID,,,"SELECT 
  M.INVENTORY_ITEM_ID,
  M.ORGANIZATION_ID,
  M.STD_LOT_SIZE,
  M.BOM_ITEM_TYPE,
  M.PRIMARY_UOM_CODE,
  BOM.ALTERNATE_BOM_DESIGNATOR,
  BOM.LAST_UPDATE_DATE,
  BOM.LAST_UPDATED_BY,
  BOM.CREATION_DATE,
  BOM.CREATED_BY,
  BOM.LAST_UPDATE_LOGIN,
  BOM.BILL_SEQUENCE_ID,
  max(INV.LAST_UPDATE_DATE),
  max(INV.EFFECTIVITY_DATE),
  max(Case When INV.DISABLE_DATE > TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS') OR INV.DISABLE_DATE Is Null Then to_date('01/01/1899 00:00:00','MM/DD/YYYY HH24:MI:SS') ELSE to_date(to_char(INV.DISABLE_DATE, 'MM/DD/YYYY HH24:MI:SS'), 'MM/DD/YYYY HH24:MI:SS')  END),
'0' AS X_CUSTOM
FROM 
  BOM_BILL_OF_MATERIALS BOM,
  MTL_SYSTEM_ITEMS_B M,
  BOM_INVENTORY_COMPONENTS INV
WHERE
INV.BOM_ITEM_TYPE = 4 AND
M.BOM_ITEM_TYPE = 4 AND
BOM.BILL_SEQUENCE_ID=INV.BILL_SEQUENCE_ID AND 
BOM.ORGANIZATION_ID = M.ORGANIZATION_ID AND
BOM.ASSEMBLY_ITEM_ID = M.INVENTORY_ITEM_ID AND
  ((
  /* CURRENT valid component changed */ 
  INV.LAST_UPDATE_DATE > TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS') AND (INV.EFFECTIVITY_DATE <= TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS') and (INV.DISABLE_DATE > TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS') OR INV.DISABLE_DATE IS NULL))
  OR
  /* Component that became effecitve after last extract date and before today's extract, for CURRENT Option*/
  INV.EFFECTIVITY_DATE between TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS') and TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS')
  OR
  /* Component that become disabled after last extract date and before today's extract, for CURRENT and CURRENT-FUTURE Option*/
  INV.DISABLE_DATE between TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS') and TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS')
  )
  OR BOM.LAST_UPDATE_DATE > TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS')) 
GROUP BY
  M.INVENTORY_ITEM_ID,
  M.ORGANIZATION_ID,
  M.STD_LOT_SIZE,
  M.BOM_ITEM_TYPE,
  M.PRIMARY_UOM_CODE,
  BOM.ALTERNATE_BOM_DESIGNATOR,
  BOM.LAST_UPDATE_DATE,
  BOM.LAST_UPDATED_BY,
  BOM.CREATION_DATE,
  BOM.CREATED_BY,
  BOM.LAST_UPDATE_LOGIN,
  BOM.BILL_SEQUENCE_ID","SELECT 
  M.INVENTORY_ITEM_ID,
  M.ORGANIZATION_ID,
  M.STD_LOT_SIZE,
  M.BOM_ITEM_TYPE,
  M.PRIMARY_UOM_CODE,
  BOM.ALTERNATE_BOM_DESIGNATOR,
  BOM.LAST_UPDATE_DATE,
  BOM.LAST_UPDATED_BY,
  BOM.CREATION_DATE,
  BOM.CREATED_BY,
  BOM.LAST_UPDATE_LOGIN,
  BOM.BILL_SEQUENCE_ID,
  max(INV.LAST_UPDATE_DATE),
  max(INV.EFFECTIVITY_DATE),
  max(Case When INV.DISABLE_DATE > TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS') OR INV.DISABLE_DATE Is Null Then to_date('01/01/1899 00:00:00','MM/DD/YYYY HH24:MI:SS') ELSE to_date(to_char(INV.DISABLE_DATE, 'MM/DD/YYYY HH24:MI:SS'), 'MM/DD/YYYY HH24:MI:SS')  END),
'0' AS X_CUSTOM
FROM 
  BOM_BILL_OF_MATERIALS BOM,
  MTL_SYSTEM_ITEMS_B M,
  BOM_INVENTORY_COMPONENTS INV
WHERE
INV.BOM_ITEM_TYPE = 4 AND
M.BOM_ITEM_TYPE = 4 AND
BOM.BILL_SEQUENCE_ID=INV.BILL_SEQUENCE_ID AND 
BOM.ORGANIZATION_ID = M.ORGANIZATION_ID AND
BOM.ASSEMBLY_ITEM_ID = M.INVENTORY_ITEM_ID AND
  ((
  /* CURRENT valid component changed */ 
  INV.LAST_UPDATE_DATE > TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS') AND (INV.EFFECTIVITY_DATE <= TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS') and (INV.DISABLE_DATE > TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS') OR INV.DISABLE_DATE IS NULL))
  OR
  /* Component that became effecitve after last extract date and before today's extract, for CURRENT Option*/
  INV.EFFECTIVITY_DATE between TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS') and TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS')
  OR
  /* Component that become disabled after last extract date and before today's extract, for CURRENT and CURRENT-FUTURE Option*/
  INV.DISABLE_DATE between TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS') and TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS')
  )
  OR BOM.LAST_UPDATE_DATE > TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS')) 
GROUP BY
  M.INVENTORY_ITEM_ID,
  M.ORGANIZATION_ID,
  M.STD_LOT_SIZE,
  M.BOM_ITEM_TYPE,
  M.PRIMARY_UOM_CODE,
  BOM.ALTERNATE_BOM_DESIGNATOR,
  BOM.LAST_UPDATE_DATE,
  BOM.LAST_UPDATED_BY,
  BOM.CREATION_DATE,
  BOM.CREATED_BY,
  BOM.LAST_UPDATE_LOGIN,
  BOM.BILL_SEQUENCE_ID",,
1,1,SDE_ORA_BOMHeaderDimension,Source Definition,MTL_SYSTEM_ITEMS_B,OLTP,ORGANIZATION_ID,Source Qualifier,SQ_BOM_INVENTORY_COMPONENTS,ORGANIZATION_ID,,,"SELECT 
  M.INVENTORY_ITEM_ID,
  M.ORGANIZATION_ID,
  M.STD_LOT_SIZE,
  M.BOM_ITEM_TYPE,
  M.PRIMARY_UOM_CODE,
  BOM.ALTERNATE_BOM_DESIGNATOR,
  BOM.LAST_UPDATE_DATE,
  BOM.LAST_UPDATED_BY,
  BOM.CREATION_DATE,
  BOM.CREATED_BY,
  BOM.LAST_UPDATE_LOGIN,
  BOM.BILL_SEQUENCE_ID,
  max(INV.LAST_UPDATE_DATE),
  max(INV.EFFECTIVITY_DATE),
  max(Case When INV.DISABLE_DATE > TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS') OR INV.DISABLE_DATE Is Null Then to_date('01/01/1899 00:00:00','MM/DD/YYYY HH24:MI:SS') ELSE to_date(to_char(INV.DISABLE_DATE, 'MM/DD/YYYY HH24:MI:SS'), 'MM/DD/YYYY HH24:MI:SS')  END),
'0' AS X_CUSTOM
FROM 
  BOM_BILL_OF_MATERIALS BOM,
  MTL_SYSTEM_ITEMS_B M,
  BOM_INVENTORY_COMPONENTS INV
WHERE
INV.BOM_ITEM_TYPE = 4 AND
M.BOM_ITEM_TYPE = 4 AND
BOM.BILL_SEQUENCE_ID=INV.BILL_SEQUENCE_ID AND 
BOM.ORGANIZATION_ID = M.ORGANIZATION_ID AND
BOM.ASSEMBLY_ITEM_ID = M.INVENTORY_ITEM_ID AND
  ((
  /* CURRENT valid component changed */ 
  INV.LAST_UPDATE_DATE > TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS') AND (INV.EFFECTIVITY_DATE <= TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS') and (INV.DISABLE_DATE > TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS') OR INV.DISABLE_DATE IS NULL))
  OR
  /* Component that became effecitve after last extract date and before today's extract, for CURRENT Option*/
  INV.EFFECTIVITY_DATE between TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS') and TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS')
  OR
  /* Component that become disabled after last extract date and before today's extract, for CURRENT and CURRENT-FUTURE Option*/
  INV.DISABLE_DATE between TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS') and TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS')
  )
  OR BOM.LAST_UPDATE_DATE > TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS')) 
GROUP BY
  M.INVENTORY_ITEM_ID,
  M.ORGANIZATION_ID,
  M.STD_LOT_SIZE,
  M.BOM_ITEM_TYPE,
  M.PRIMARY_UOM_CODE,
  BOM.ALTERNATE_BOM_DESIGNATOR,
  BOM.LAST_UPDATE_DATE,
  BOM.LAST_UPDATED_BY,
  BOM.CREATION_DATE,
  BOM.CREATED_BY,
  BOM.LAST_UPDATE_LOGIN,
  BOM.BILL_SEQUENCE_ID","SELECT 
  M.INVENTORY_ITEM_ID,
  M.ORGANIZATION_ID,
  M.STD_LOT_SIZE,
  M.BOM_ITEM_TYPE,
  M.PRIMARY_UOM_CODE,
  BOM.ALTERNATE_BOM_DESIGNATOR,
  BOM.LAST_UPDATE_DATE,
  BOM.LAST_UPDATED_BY,
  BOM.CREATION_DATE,
  BOM.CREATED_BY,
  BOM.LAST_UPDATE_LOGIN,
  BOM.BILL_SEQUENCE_ID,
  max(INV.LAST_UPDATE_DATE),
  max(INV.EFFECTIVITY_DATE),
  max(Case When INV.DISABLE_DATE > TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS') OR INV.DISABLE_DATE Is Null Then to_date('01/01/1899 00:00:00','MM/DD/YYYY HH24:MI:SS') ELSE to_date(to_char(INV.DISABLE_DATE, 'MM/DD/YYYY HH24:MI:SS'), 'MM/DD/YYYY HH24:MI:SS')  END),
'0' AS X_CUSTOM
FROM 
  BOM_BILL_OF_MATERIALS BOM,
  MTL_SYSTEM_ITEMS_B M,
  BOM_INVENTORY_COMPONENTS INV
WHERE
INV.BOM_ITEM_TYPE = 4 AND
M.BOM_ITEM_TYPE = 4 AND
BOM.BILL_SEQUENCE_ID=INV.BILL_SEQUENCE_ID AND 
BOM.ORGANIZATION_ID = M.ORGANIZATION_ID AND
BOM.ASSEMBLY_ITEM_ID = M.INVENTORY_ITEM_ID AND
  ((
  /* CURRENT valid component changed */ 
  INV.LAST_UPDATE_DATE > TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS') AND (INV.EFFECTIVITY_DATE <= TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS') and (INV.DISABLE_DATE > TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS') OR INV.DISABLE_DATE IS NULL))
  OR
  /* Component that became effecitve after last extract date and before today's extract, for CURRENT Option*/
  INV.EFFECTIVITY_DATE between TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS') and TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS')
  OR
  /* Component that become disabled after last extract date and before today's extract, for CURRENT and CURRENT-FUTURE Option*/
  INV.DISABLE_DATE between TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS') and TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS')
  )
  OR BOM.LAST_UPDATE_DATE > TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS')) 
GROUP BY
  M.INVENTORY_ITEM_ID,
  M.ORGANIZATION_ID,
  M.STD_LOT_SIZE,
  M.BOM_ITEM_TYPE,
  M.PRIMARY_UOM_CODE,
  BOM.ALTERNATE_BOM_DESIGNATOR,
  BOM.LAST_UPDATE_DATE,
  BOM.LAST_UPDATED_BY,
  BOM.CREATION_DATE,
  BOM.CREATED_BY,
  BOM.LAST_UPDATE_LOGIN,
  BOM.BILL_SEQUENCE_ID",,
1,1,SDE_ORA_BOMHeaderDimension,Source Definition,MTL_SYSTEM_ITEMS_B,OLTP,BOM_ITEM_TYPE,Source Qualifier,SQ_BOM_INVENTORY_COMPONENTS,BOM_ITEM_TYPE,,,"SELECT 
  M.INVENTORY_ITEM_ID,
  M.ORGANIZATION_ID,
  M.STD_LOT_SIZE,
  M.BOM_ITEM_TYPE,
  M.PRIMARY_UOM_CODE,
  BOM.ALTERNATE_BOM_DESIGNATOR,
  BOM.LAST_UPDATE_DATE,
  BOM.LAST_UPDATED_BY,
  BOM.CREATION_DATE,
  BOM.CREATED_BY,
  BOM.LAST_UPDATE_LOGIN,
  BOM.BILL_SEQUENCE_ID,
  max(INV.LAST_UPDATE_DATE),
  max(INV.EFFECTIVITY_DATE),
  max(Case When INV.DISABLE_DATE > TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS') OR INV.DISABLE_DATE Is Null Then to_date('01/01/1899 00:00:00','MM/DD/YYYY HH24:MI:SS') ELSE to_date(to_char(INV.DISABLE_DATE, 'MM/DD/YYYY HH24:MI:SS'), 'MM/DD/YYYY HH24:MI:SS')  END),
'0' AS X_CUSTOM
FROM 
  BOM_BILL_OF_MATERIALS BOM,
  MTL_SYSTEM_ITEMS_B M,
  BOM_INVENTORY_COMPONENTS INV
WHERE
INV.BOM_ITEM_TYPE = 4 AND
M.BOM_ITEM_TYPE = 4 AND
BOM.BILL_SEQUENCE_ID=INV.BILL_SEQUENCE_ID AND 
BOM.ORGANIZATION_ID = M.ORGANIZATION_ID AND
BOM.ASSEMBLY_ITEM_ID = M.INVENTORY_ITEM_ID AND
  ((
  /* CURRENT valid component changed */ 
  INV.LAST_UPDATE_DATE > TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS') AND (INV.EFFECTIVITY_DATE <= TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS') and (INV.DISABLE_DATE > TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS') OR INV.DISABLE_DATE IS NULL))
  OR
  /* Component that became effecitve after last extract date and before today's extract, for CURRENT Option*/
  INV.EFFECTIVITY_DATE between TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS') and TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS')
  OR
  /* Component that become disabled after last extract date and before today's extract, for CURRENT and CURRENT-FUTURE Option*/
  INV.DISABLE_DATE between TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS') and TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS')
  )
  OR BOM.LAST_UPDATE_DATE > TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS')) 
GROUP BY
  M.INVENTORY_ITEM_ID,
  M.ORGANIZATION_ID,
  M.STD_LOT_SIZE,
  M.BOM_ITEM_TYPE,
  M.PRIMARY_UOM_CODE,
  BOM.ALTERNATE_BOM_DESIGNATOR,
  BOM.LAST_UPDATE_DATE,
  BOM.LAST_UPDATED_BY,
  BOM.CREATION_DATE,
  BOM.CREATED_BY,
  BOM.LAST_UPDATE_LOGIN,
  BOM.BILL_SEQUENCE_ID","SELECT 
  M.INVENTORY_ITEM_ID,
  M.ORGANIZATION_ID,
  M.STD_LOT_SIZE,
  M.BOM_ITEM_TYPE,
  M.PRIMARY_UOM_CODE,
  BOM.ALTERNATE_BOM_DESIGNATOR,
  BOM.LAST_UPDATE_DATE,
  BOM.LAST_UPDATED_BY,
  BOM.CREATION_DATE,
  BOM.CREATED_BY,
  BOM.LAST_UPDATE_LOGIN,
  BOM.BILL_SEQUENCE_ID,
  max(INV.LAST_UPDATE_DATE),
  max(INV.EFFECTIVITY_DATE),
  max(Case When INV.DISABLE_DATE > TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS') OR INV.DISABLE_DATE Is Null Then to_date('01/01/1899 00:00:00','MM/DD/YYYY HH24:MI:SS') ELSE to_date(to_char(INV.DISABLE_DATE, 'MM/DD/YYYY HH24:MI:SS'), 'MM/DD/YYYY HH24:MI:SS')  END),
'0' AS X_CUSTOM
FROM 
  BOM_BILL_OF_MATERIALS BOM,
  MTL_SYSTEM_ITEMS_B M,
  BOM_INVENTORY_COMPONENTS INV
WHERE
INV.BOM_ITEM_TYPE = 4 AND
M.BOM_ITEM_TYPE = 4 AND
BOM.BILL_SEQUENCE_ID=INV.BILL_SEQUENCE_ID AND 
BOM.ORGANIZATION_ID = M.ORGANIZATION_ID AND
BOM.ASSEMBLY_ITEM_ID = M.INVENTORY_ITEM_ID AND
  ((
  /* CURRENT valid component changed */ 
  INV.LAST_UPDATE_DATE > TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS') AND (INV.EFFECTIVITY_DATE <= TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS') and (INV.DISABLE_DATE > TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS') OR INV.DISABLE_DATE IS NULL))
  OR
  /* Component that became effecitve after last extract date and before today's extract, for CURRENT Option*/
  INV.EFFECTIVITY_DATE between TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS') and TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS')
  OR
  /* Component that become disabled after last extract date and before today's extract, for CURRENT and CURRENT-FUTURE Option*/
  INV.DISABLE_DATE between TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS') and TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS')
  )
  OR BOM.LAST_UPDATE_DATE > TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS')) 
GROUP BY
  M.INVENTORY_ITEM_ID,
  M.ORGANIZATION_ID,
  M.STD_LOT_SIZE,
  M.BOM_ITEM_TYPE,
  M.PRIMARY_UOM_CODE,
  BOM.ALTERNATE_BOM_DESIGNATOR,
  BOM.LAST_UPDATE_DATE,
  BOM.LAST_UPDATED_BY,
  BOM.CREATION_DATE,
  BOM.CREATED_BY,
  BOM.LAST_UPDATE_LOGIN,
  BOM.BILL_SEQUENCE_ID",,
1,1,SDE_ORA_BOMHeaderDimension,Source Definition,MTL_SYSTEM_ITEMS_B,OLTP,PRIMARY_UOM_CODE,Source Qualifier,SQ_BOM_INVENTORY_COMPONENTS,PRIMARY_UOM_CODE,,,"SELECT 
  M.INVENTORY_ITEM_ID,
  M.ORGANIZATION_ID,
  M.STD_LOT_SIZE,
  M.BOM_ITEM_TYPE,
  M.PRIMARY_UOM_CODE,
  BOM.ALTERNATE_BOM_DESIGNATOR,
  BOM.LAST_UPDATE_DATE,
  BOM.LAST_UPDATED_BY,
  BOM.CREATION_DATE,
  BOM.CREATED_BY,
  BOM.LAST_UPDATE_LOGIN,
  BOM.BILL_SEQUENCE_ID,
  max(INV.LAST_UPDATE_DATE),
  max(INV.EFFECTIVITY_DATE),
  max(Case When INV.DISABLE_DATE > TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS') OR INV.DISABLE_DATE Is Null Then to_date('01/01/1899 00:00:00','MM/DD/YYYY HH24:MI:SS') ELSE to_date(to_char(INV.DISABLE_DATE, 'MM/DD/YYYY HH24:MI:SS'), 'MM/DD/YYYY HH24:MI:SS')  END),
'0' AS X_CUSTOM
FROM 
  BOM_BILL_OF_MATERIALS BOM,
  MTL_SYSTEM_ITEMS_B M,
  BOM_INVENTORY_COMPONENTS INV
WHERE
INV.BOM_ITEM_TYPE = 4 AND
M.BOM_ITEM_TYPE = 4 AND
BOM.BILL_SEQUENCE_ID=INV.BILL_SEQUENCE_ID AND 
BOM.ORGANIZATION_ID = M.ORGANIZATION_ID AND
BOM.ASSEMBLY_ITEM_ID = M.INVENTORY_ITEM_ID AND
  ((
  /* CURRENT valid component changed */ 
  INV.LAST_UPDATE_DATE > TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS') AND (INV.EFFECTIVITY_DATE <= TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS') and (INV.DISABLE_DATE > TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS') OR INV.DISABLE_DATE IS NULL))
  OR
  /* Component that became effecitve after last extract date and before today's extract, for CURRENT Option*/
  INV.EFFECTIVITY_DATE between TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS') and TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS')
  OR
  /* Component that become disabled after last extract date and before today's extract, for CURRENT and CURRENT-FUTURE Option*/
  INV.DISABLE_DATE between TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS') and TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS')
  )
  OR BOM.LAST_UPDATE_DATE > TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS')) 
GROUP BY
  M.INVENTORY_ITEM_ID,
  M.ORGANIZATION_ID,
  M.STD_LOT_SIZE,
  M.BOM_ITEM_TYPE,
  M.PRIMARY_UOM_CODE,
  BOM.ALTERNATE_BOM_DESIGNATOR,
  BOM.LAST_UPDATE_DATE,
  BOM.LAST_UPDATED_BY,
  BOM.CREATION_DATE,
  BOM.CREATED_BY,
  BOM.LAST_UPDATE_LOGIN,
  BOM.BILL_SEQUENCE_ID","SELECT 
  M.INVENTORY_ITEM_ID,
  M.ORGANIZATION_ID,
  M.STD_LOT_SIZE,
  M.BOM_ITEM_TYPE,
  M.PRIMARY_UOM_CODE,
  BOM.ALTERNATE_BOM_DESIGNATOR,
  BOM.LAST_UPDATE_DATE,
  BOM.LAST_UPDATED_BY,
  BOM.CREATION_DATE,
  BOM.CREATED_BY,
  BOM.LAST_UPDATE_LOGIN,
  BOM.BILL_SEQUENCE_ID,
  max(INV.LAST_UPDATE_DATE),
  max(INV.EFFECTIVITY_DATE),
  max(Case When INV.DISABLE_DATE > TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS') OR INV.DISABLE_DATE Is Null Then to_date('01/01/1899 00:00:00','MM/DD/YYYY HH24:MI:SS') ELSE to_date(to_char(INV.DISABLE_DATE, 'MM/DD/YYYY HH24:MI:SS'), 'MM/DD/YYYY HH24:MI:SS')  END),
'0' AS X_CUSTOM
FROM 
  BOM_BILL_OF_MATERIALS BOM,
  MTL_SYSTEM_ITEMS_B M,
  BOM_INVENTORY_COMPONENTS INV
WHERE
INV.BOM_ITEM_TYPE = 4 AND
M.BOM_ITEM_TYPE = 4 AND
BOM.BILL_SEQUENCE_ID=INV.BILL_SEQUENCE_ID AND 
BOM.ORGANIZATION_ID = M.ORGANIZATION_ID AND
BOM.ASSEMBLY_ITEM_ID = M.INVENTORY_ITEM_ID AND
  ((
  /* CURRENT valid component changed */ 
  INV.LAST_UPDATE_DATE > TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS') AND (INV.EFFECTIVITY_DATE <= TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS') and (INV.DISABLE_DATE > TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS') OR INV.DISABLE_DATE IS NULL))
  OR
  /* Component that became effecitve after last extract date and before today's extract, for CURRENT Option*/
  INV.EFFECTIVITY_DATE between TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS') and TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS')
  OR
  /* Component that become disabled after last extract date and before today's extract, for CURRENT and CURRENT-FUTURE Option*/
  INV.DISABLE_DATE between TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS') and TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS')
  )
  OR BOM.LAST_UPDATE_DATE > TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS')) 
GROUP BY
  M.INVENTORY_ITEM_ID,
  M.ORGANIZATION_ID,
  M.STD_LOT_SIZE,
  M.BOM_ITEM_TYPE,
  M.PRIMARY_UOM_CODE,
  BOM.ALTERNATE_BOM_DESIGNATOR,
  BOM.LAST_UPDATE_DATE,
  BOM.LAST_UPDATED_BY,
  BOM.CREATION_DATE,
  BOM.CREATED_BY,
  BOM.LAST_UPDATE_LOGIN,
  BOM.BILL_SEQUENCE_ID",,
1,1,SDE_ORA_BOMHeaderDimension,Source Definition,MTL_SYSTEM_ITEMS_B,OLTP,STD_LOT_SIZE,Source Qualifier,SQ_BOM_INVENTORY_COMPONENTS,STD_LOT_SIZE,,,"SELECT 
  M.INVENTORY_ITEM_ID,
  M.ORGANIZATION_ID,
  M.STD_LOT_SIZE,
  M.BOM_ITEM_TYPE,
  M.PRIMARY_UOM_CODE,
  BOM.ALTERNATE_BOM_DESIGNATOR,
  BOM.LAST_UPDATE_DATE,
  BOM.LAST_UPDATED_BY,
  BOM.CREATION_DATE,
  BOM.CREATED_BY,
  BOM.LAST_UPDATE_LOGIN,
  BOM.BILL_SEQUENCE_ID,
  max(INV.LAST_UPDATE_DATE),
  max(INV.EFFECTIVITY_DATE),
  max(Case When INV.DISABLE_DATE > TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS') OR INV.DISABLE_DATE Is Null Then to_date('01/01/1899 00:00:00','MM/DD/YYYY HH24:MI:SS') ELSE to_date(to_char(INV.DISABLE_DATE, 'MM/DD/YYYY HH24:MI:SS'), 'MM/DD/YYYY HH24:MI:SS')  END),
'0' AS X_CUSTOM
FROM 
  BOM_BILL_OF_MATERIALS BOM,
  MTL_SYSTEM_ITEMS_B M,
  BOM_INVENTORY_COMPONENTS INV
WHERE
INV.BOM_ITEM_TYPE = 4 AND
M.BOM_ITEM_TYPE = 4 AND
BOM.BILL_SEQUENCE_ID=INV.BILL_SEQUENCE_ID AND 
BOM.ORGANIZATION_ID = M.ORGANIZATION_ID AND
BOM.ASSEMBLY_ITEM_ID = M.INVENTORY_ITEM_ID AND
  ((
  /* CURRENT valid component changed */ 
  INV.LAST_UPDATE_DATE > TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS') AND (INV.EFFECTIVITY_DATE <= TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS') and (INV.DISABLE_DATE > TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS') OR INV.DISABLE_DATE IS NULL))
  OR
  /* Component that became effecitve after last extract date and before today's extract, for CURRENT Option*/
  INV.EFFECTIVITY_DATE between TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS') and TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS')
  OR
  /* Component that become disabled after last extract date and before today's extract, for CURRENT and CURRENT-FUTURE Option*/
  INV.DISABLE_DATE between TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS') and TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS')
  )
  OR BOM.LAST_UPDATE_DATE > TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS')) 
GROUP BY
  M.INVENTORY_ITEM_ID,
  M.ORGANIZATION_ID,
  M.STD_LOT_SIZE,
  M.BOM_ITEM_TYPE,
  M.PRIMARY_UOM_CODE,
  BOM.ALTERNATE_BOM_DESIGNATOR,
  BOM.LAST_UPDATE_DATE,
  BOM.LAST_UPDATED_BY,
  BOM.CREATION_DATE,
  BOM.CREATED_BY,
  BOM.LAST_UPDATE_LOGIN,
  BOM.BILL_SEQUENCE_ID","SELECT 
  M.INVENTORY_ITEM_ID,
  M.ORGANIZATION_ID,
  M.STD_LOT_SIZE,
  M.BOM_ITEM_TYPE,
  M.PRIMARY_UOM_CODE,
  BOM.ALTERNATE_BOM_DESIGNATOR,
  BOM.LAST_UPDATE_DATE,
  BOM.LAST_UPDATED_BY,
  BOM.CREATION_DATE,
  BOM.CREATED_BY,
  BOM.LAST_UPDATE_LOGIN,
  BOM.BILL_SEQUENCE_ID,
  max(INV.LAST_UPDATE_DATE),
  max(INV.EFFECTIVITY_DATE),
  max(Case When INV.DISABLE_DATE > TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS') OR INV.DISABLE_DATE Is Null Then to_date('01/01/1899 00:00:00','MM/DD/YYYY HH24:MI:SS') ELSE to_date(to_char(INV.DISABLE_DATE, 'MM/DD/YYYY HH24:MI:SS'), 'MM/DD/YYYY HH24:MI:SS')  END),
'0' AS X_CUSTOM
FROM 
  BOM_BILL_OF_MATERIALS BOM,
  MTL_SYSTEM_ITEMS_B M,
  BOM_INVENTORY_COMPONENTS INV
WHERE
INV.BOM_ITEM_TYPE = 4 AND
M.BOM_ITEM_TYPE = 4 AND
BOM.BILL_SEQUENCE_ID=INV.BILL_SEQUENCE_ID AND 
BOM.ORGANIZATION_ID = M.ORGANIZATION_ID AND
BOM.ASSEMBLY_ITEM_ID = M.INVENTORY_ITEM_ID AND
  ((
  /* CURRENT valid component changed */ 
  INV.LAST_UPDATE_DATE > TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS') AND (INV.EFFECTIVITY_DATE <= TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS') and (INV.DISABLE_DATE > TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS') OR INV.DISABLE_DATE IS NULL))
  OR
  /* Component that became effecitve after last extract date and before today's extract, for CURRENT Option*/
  INV.EFFECTIVITY_DATE between TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS') and TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS')
  OR
  /* Component that become disabled after last extract date and before today's extract, for CURRENT and CURRENT-FUTURE Option*/
  INV.DISABLE_DATE between TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS') and TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS')
  )
  OR BOM.LAST_UPDATE_DATE > TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS')) 
GROUP BY
  M.INVENTORY_ITEM_ID,
  M.ORGANIZATION_ID,
  M.STD_LOT_SIZE,
  M.BOM_ITEM_TYPE,
  M.PRIMARY_UOM_CODE,
  BOM.ALTERNATE_BOM_DESIGNATOR,
  BOM.LAST_UPDATE_DATE,
  BOM.LAST_UPDATED_BY,
  BOM.CREATION_DATE,
  BOM.CREATED_BY,
  BOM.LAST_UPDATE_LOGIN,
  BOM.BILL_SEQUENCE_ID",,
1,1,SDE_ORA_BOMHeaderDimension,Source Definition,BOM_INVENTORY_COMPONENTS,OLTP,LAST_UPDATE_DATE,Source Qualifier,SQ_BOM_INVENTORY_COMPONENTS,LAST_UPDATE_DATE_ITEM,,,"SELECT 
  M.INVENTORY_ITEM_ID,
  M.ORGANIZATION_ID,
  M.STD_LOT_SIZE,
  M.BOM_ITEM_TYPE,
  M.PRIMARY_UOM_CODE,
  BOM.ALTERNATE_BOM_DESIGNATOR,
  BOM.LAST_UPDATE_DATE,
  BOM.LAST_UPDATED_BY,
  BOM.CREATION_DATE,
  BOM.CREATED_BY,
  BOM.LAST_UPDATE_LOGIN,
  BOM.BILL_SEQUENCE_ID,
  max(INV.LAST_UPDATE_DATE),
  max(INV.EFFECTIVITY_DATE),
  max(Case When INV.DISABLE_DATE > TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS') OR INV.DISABLE_DATE Is Null Then to_date('01/01/1899 00:00:00','MM/DD/YYYY HH24:MI:SS') ELSE to_date(to_char(INV.DISABLE_DATE, 'MM/DD/YYYY HH24:MI:SS'), 'MM/DD/YYYY HH24:MI:SS')  END),
'0' AS X_CUSTOM
FROM 
  BOM_BILL_OF_MATERIALS BOM,
  MTL_SYSTEM_ITEMS_B M,
  BOM_INVENTORY_COMPONENTS INV
WHERE
INV.BOM_ITEM_TYPE = 4 AND
M.BOM_ITEM_TYPE = 4 AND
BOM.BILL_SEQUENCE_ID=INV.BILL_SEQUENCE_ID AND 
BOM.ORGANIZATION_ID = M.ORGANIZATION_ID AND
BOM.ASSEMBLY_ITEM_ID = M.INVENTORY_ITEM_ID AND
  ((
  /* CURRENT valid component changed */ 
  INV.LAST_UPDATE_DATE > TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS') AND (INV.EFFECTIVITY_DATE <= TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS') and (INV.DISABLE_DATE > TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS') OR INV.DISABLE_DATE IS NULL))
  OR
  /* Component that became effecitve after last extract date and before today's extract, for CURRENT Option*/
  INV.EFFECTIVITY_DATE between TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS') and TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS')
  OR
  /* Component that become disabled after last extract date and before today's extract, for CURRENT and CURRENT-FUTURE Option*/
  INV.DISABLE_DATE between TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS') and TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS')
  )
  OR BOM.LAST_UPDATE_DATE > TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS')) 
GROUP BY
  M.INVENTORY_ITEM_ID,
  M.ORGANIZATION_ID,
  M.STD_LOT_SIZE,
  M.BOM_ITEM_TYPE,
  M.PRIMARY_UOM_CODE,
  BOM.ALTERNATE_BOM_DESIGNATOR,
  BOM.LAST_UPDATE_DATE,
  BOM.LAST_UPDATED_BY,
  BOM.CREATION_DATE,
  BOM.CREATED_BY,
  BOM.LAST_UPDATE_LOGIN,
  BOM.BILL_SEQUENCE_ID","SELECT 
  M.INVENTORY_ITEM_ID,
  M.ORGANIZATION_ID,
  M.STD_LOT_SIZE,
  M.BOM_ITEM_TYPE,
  M.PRIMARY_UOM_CODE,
  BOM.ALTERNATE_BOM_DESIGNATOR,
  BOM.LAST_UPDATE_DATE,
  BOM.LAST_UPDATED_BY,
  BOM.CREATION_DATE,
  BOM.CREATED_BY,
  BOM.LAST_UPDATE_LOGIN,
  BOM.BILL_SEQUENCE_ID,
  max(INV.LAST_UPDATE_DATE),
  max(INV.EFFECTIVITY_DATE),
  max(Case When INV.DISABLE_DATE > TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS') OR INV.DISABLE_DATE Is Null Then to_date('01/01/1899 00:00:00','MM/DD/YYYY HH24:MI:SS') ELSE to_date(to_char(INV.DISABLE_DATE, 'MM/DD/YYYY HH24:MI:SS'), 'MM/DD/YYYY HH24:MI:SS')  END),
'0' AS X_CUSTOM
FROM 
  BOM_BILL_OF_MATERIALS BOM,
  MTL_SYSTEM_ITEMS_B M,
  BOM_INVENTORY_COMPONENTS INV
WHERE
INV.BOM_ITEM_TYPE = 4 AND
M.BOM_ITEM_TYPE = 4 AND
BOM.BILL_SEQUENCE_ID=INV.BILL_SEQUENCE_ID AND 
BOM.ORGANIZATION_ID = M.ORGANIZATION_ID AND
BOM.ASSEMBLY_ITEM_ID = M.INVENTORY_ITEM_ID AND
  ((
  /* CURRENT valid component changed */ 
  INV.LAST_UPDATE_DATE > TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS') AND (INV.EFFECTIVITY_DATE <= TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS') and (INV.DISABLE_DATE > TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS') OR INV.DISABLE_DATE IS NULL))
  OR
  /* Component that became effecitve after last extract date and before today's extract, for CURRENT Option*/
  INV.EFFECTIVITY_DATE between TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS') and TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS')
  OR
  /* Component that become disabled after last extract date and before today's extract, for CURRENT and CURRENT-FUTURE Option*/
  INV.DISABLE_DATE between TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS') and TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS')
  )
  OR BOM.LAST_UPDATE_DATE > TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS')) 
GROUP BY
  M.INVENTORY_ITEM_ID,
  M.ORGANIZATION_ID,
  M.STD_LOT_SIZE,
  M.BOM_ITEM_TYPE,
  M.PRIMARY_UOM_CODE,
  BOM.ALTERNATE_BOM_DESIGNATOR,
  BOM.LAST_UPDATE_DATE,
  BOM.LAST_UPDATED_BY,
  BOM.CREATION_DATE,
  BOM.CREATED_BY,
  BOM.LAST_UPDATE_LOGIN,
  BOM.BILL_SEQUENCE_ID",,
1,1,SDE_ORA_BOMHeaderDimension,Source Definition,BOM_INVENTORY_COMPONENTS,OLTP,EFFECTIVITY_DATE,Source Qualifier,SQ_BOM_INVENTORY_COMPONENTS,EFFECTIVITY_DATE,,,"SELECT 
  M.INVENTORY_ITEM_ID,
  M.ORGANIZATION_ID,
  M.STD_LOT_SIZE,
  M.BOM_ITEM_TYPE,
  M.PRIMARY_UOM_CODE,
  BOM.ALTERNATE_BOM_DESIGNATOR,
  BOM.LAST_UPDATE_DATE,
  BOM.LAST_UPDATED_BY,
  BOM.CREATION_DATE,
  BOM.CREATED_BY,
  BOM.LAST_UPDATE_LOGIN,
  BOM.BILL_SEQUENCE_ID,
  max(INV.LAST_UPDATE_DATE),
  max(INV.EFFECTIVITY_DATE),
  max(Case When INV.DISABLE_DATE > TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS') OR INV.DISABLE_DATE Is Null Then to_date('01/01/1899 00:00:00','MM/DD/YYYY HH24:MI:SS') ELSE to_date(to_char(INV.DISABLE_DATE, 'MM/DD/YYYY HH24:MI:SS'), 'MM/DD/YYYY HH24:MI:SS')  END),
'0' AS X_CUSTOM
FROM 
  BOM_BILL_OF_MATERIALS BOM,
  MTL_SYSTEM_ITEMS_B M,
  BOM_INVENTORY_COMPONENTS INV
WHERE
INV.BOM_ITEM_TYPE = 4 AND
M.BOM_ITEM_TYPE = 4 AND
BOM.BILL_SEQUENCE_ID=INV.BILL_SEQUENCE_ID AND 
BOM.ORGANIZATION_ID = M.ORGANIZATION_ID AND
BOM.ASSEMBLY_ITEM_ID = M.INVENTORY_ITEM_ID AND
  ((
  /* CURRENT valid component changed */ 
  INV.LAST_UPDATE_DATE > TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS') AND (INV.EFFECTIVITY_DATE <= TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS') and (INV.DISABLE_DATE > TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS') OR INV.DISABLE_DATE IS NULL))
  OR
  /* Component that became effecitve after last extract date and before today's extract, for CURRENT Option*/
  INV.EFFECTIVITY_DATE between TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS') and TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS')
  OR
  /* Component that become disabled after last extract date and before today's extract, for CURRENT and CURRENT-FUTURE Option*/
  INV.DISABLE_DATE between TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS') and TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS')
  )
  OR BOM.LAST_UPDATE_DATE > TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS')) 
GROUP BY
  M.INVENTORY_ITEM_ID,
  M.ORGANIZATION_ID,
  M.STD_LOT_SIZE,
  M.BOM_ITEM_TYPE,
  M.PRIMARY_UOM_CODE,
  BOM.ALTERNATE_BOM_DESIGNATOR,
  BOM.LAST_UPDATE_DATE,
  BOM.LAST_UPDATED_BY,
  BOM.CREATION_DATE,
  BOM.CREATED_BY,
  BOM.LAST_UPDATE_LOGIN,
  BOM.BILL_SEQUENCE_ID","SELECT 
  M.INVENTORY_ITEM_ID,
  M.ORGANIZATION_ID,
  M.STD_LOT_SIZE,
  M.BOM_ITEM_TYPE,
  M.PRIMARY_UOM_CODE,
  BOM.ALTERNATE_BOM_DESIGNATOR,
  BOM.LAST_UPDATE_DATE,
  BOM.LAST_UPDATED_BY,
  BOM.CREATION_DATE,
  BOM.CREATED_BY,
  BOM.LAST_UPDATE_LOGIN,
  BOM.BILL_SEQUENCE_ID,
  max(INV.LAST_UPDATE_DATE),
  max(INV.EFFECTIVITY_DATE),
  max(Case When INV.DISABLE_DATE > TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS') OR INV.DISABLE_DATE Is Null Then to_date('01/01/1899 00:00:00','MM/DD/YYYY HH24:MI:SS') ELSE to_date(to_char(INV.DISABLE_DATE, 'MM/DD/YYYY HH24:MI:SS'), 'MM/DD/YYYY HH24:MI:SS')  END),
'0' AS X_CUSTOM
FROM 
  BOM_BILL_OF_MATERIALS BOM,
  MTL_SYSTEM_ITEMS_B M,
  BOM_INVENTORY_COMPONENTS INV
WHERE
INV.BOM_ITEM_TYPE = 4 AND
M.BOM_ITEM_TYPE = 4 AND
BOM.BILL_SEQUENCE_ID=INV.BILL_SEQUENCE_ID AND 
BOM.ORGANIZATION_ID = M.ORGANIZATION_ID AND
BOM.ASSEMBLY_ITEM_ID = M.INVENTORY_ITEM_ID AND
  ((
  /* CURRENT valid component changed */ 
  INV.LAST_UPDATE_DATE > TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS') AND (INV.EFFECTIVITY_DATE <= TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS') and (INV.DISABLE_DATE > TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS') OR INV.DISABLE_DATE IS NULL))
  OR
  /* Component that became effecitve after last extract date and before today's extract, for CURRENT Option*/
  INV.EFFECTIVITY_DATE between TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS') and TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS')
  OR
  /* Component that become disabled after last extract date and before today's extract, for CURRENT and CURRENT-FUTURE Option*/
  INV.DISABLE_DATE between TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS') and TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS')
  )
  OR BOM.LAST_UPDATE_DATE > TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS')) 
GROUP BY
  M.INVENTORY_ITEM_ID,
  M.ORGANIZATION_ID,
  M.STD_LOT_SIZE,
  M.BOM_ITEM_TYPE,
  M.PRIMARY_UOM_CODE,
  BOM.ALTERNATE_BOM_DESIGNATOR,
  BOM.LAST_UPDATE_DATE,
  BOM.LAST_UPDATED_BY,
  BOM.CREATION_DATE,
  BOM.CREATED_BY,
  BOM.LAST_UPDATE_LOGIN,
  BOM.BILL_SEQUENCE_ID",,
1,1,SDE_ORA_BOMHeaderDimension,Source Definition,BOM_INVENTORY_COMPONENTS,OLTP,DISABLE_DATE,Source Qualifier,SQ_BOM_INVENTORY_COMPONENTS,DISABLE_DATE,,,"SELECT 
  M.INVENTORY_ITEM_ID,
  M.ORGANIZATION_ID,
  M.STD_LOT_SIZE,
  M.BOM_ITEM_TYPE,
  M.PRIMARY_UOM_CODE,
  BOM.ALTERNATE_BOM_DESIGNATOR,
  BOM.LAST_UPDATE_DATE,
  BOM.LAST_UPDATED_BY,
  BOM.CREATION_DATE,
  BOM.CREATED_BY,
  BOM.LAST_UPDATE_LOGIN,
  BOM.BILL_SEQUENCE_ID,
  max(INV.LAST_UPDATE_DATE),
  max(INV.EFFECTIVITY_DATE),
  max(Case When INV.DISABLE_DATE > TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS') OR INV.DISABLE_DATE Is Null Then to_date('01/01/1899 00:00:00','MM/DD/YYYY HH24:MI:SS') ELSE to_date(to_char(INV.DISABLE_DATE, 'MM/DD/YYYY HH24:MI:SS'), 'MM/DD/YYYY HH24:MI:SS')  END),
'0' AS X_CUSTOM
FROM 
  BOM_BILL_OF_MATERIALS BOM,
  MTL_SYSTEM_ITEMS_B M,
  BOM_INVENTORY_COMPONENTS INV
WHERE
INV.BOM_ITEM_TYPE = 4 AND
M.BOM_ITEM_TYPE = 4 AND
BOM.BILL_SEQUENCE_ID=INV.BILL_SEQUENCE_ID AND 
BOM.ORGANIZATION_ID = M.ORGANIZATION_ID AND
BOM.ASSEMBLY_ITEM_ID = M.INVENTORY_ITEM_ID AND
  ((
  /* CURRENT valid component changed */ 
  INV.LAST_UPDATE_DATE > TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS') AND (INV.EFFECTIVITY_DATE <= TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS') and (INV.DISABLE_DATE > TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS') OR INV.DISABLE_DATE IS NULL))
  OR
  /* Component that became effecitve after last extract date and before today's extract, for CURRENT Option*/
  INV.EFFECTIVITY_DATE between TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS') and TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS')
  OR
  /* Component that become disabled after last extract date and before today's extract, for CURRENT and CURRENT-FUTURE Option*/
  INV.DISABLE_DATE between TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS') and TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS')
  )
  OR BOM.LAST_UPDATE_DATE > TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS')) 
GROUP BY
  M.INVENTORY_ITEM_ID,
  M.ORGANIZATION_ID,
  M.STD_LOT_SIZE,
  M.BOM_ITEM_TYPE,
  M.PRIMARY_UOM_CODE,
  BOM.ALTERNATE_BOM_DESIGNATOR,
  BOM.LAST_UPDATE_DATE,
  BOM.LAST_UPDATED_BY,
  BOM.CREATION_DATE,
  BOM.CREATED_BY,
  BOM.LAST_UPDATE_LOGIN,
  BOM.BILL_SEQUENCE_ID","SELECT 
  M.INVENTORY_ITEM_ID,
  M.ORGANIZATION_ID,
  M.STD_LOT_SIZE,
  M.BOM_ITEM_TYPE,
  M.PRIMARY_UOM_CODE,
  BOM.ALTERNATE_BOM_DESIGNATOR,
  BOM.LAST_UPDATE_DATE,
  BOM.LAST_UPDATED_BY,
  BOM.CREATION_DATE,
  BOM.CREATED_BY,
  BOM.LAST_UPDATE_LOGIN,
  BOM.BILL_SEQUENCE_ID,
  max(INV.LAST_UPDATE_DATE),
  max(INV.EFFECTIVITY_DATE),
  max(Case When INV.DISABLE_DATE > TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS') OR INV.DISABLE_DATE Is Null Then to_date('01/01/1899 00:00:00','MM/DD/YYYY HH24:MI:SS') ELSE to_date(to_char(INV.DISABLE_DATE, 'MM/DD/YYYY HH24:MI:SS'), 'MM/DD/YYYY HH24:MI:SS')  END),
'0' AS X_CUSTOM
FROM 
  BOM_BILL_OF_MATERIALS BOM,
  MTL_SYSTEM_ITEMS_B M,
  BOM_INVENTORY_COMPONENTS INV
WHERE
INV.BOM_ITEM_TYPE = 4 AND
M.BOM_ITEM_TYPE = 4 AND
BOM.BILL_SEQUENCE_ID=INV.BILL_SEQUENCE_ID AND 
BOM.ORGANIZATION_ID = M.ORGANIZATION_ID AND
BOM.ASSEMBLY_ITEM_ID = M.INVENTORY_ITEM_ID AND
  ((
  /* CURRENT valid component changed */ 
  INV.LAST_UPDATE_DATE > TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS') AND (INV.EFFECTIVITY_DATE <= TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS') and (INV.DISABLE_DATE > TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS') OR INV.DISABLE_DATE IS NULL))
  OR
  /* Component that became effecitve after last extract date and before today's extract, for CURRENT Option*/
  INV.EFFECTIVITY_DATE between TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS') and TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS')
  OR
  /* Component that become disabled after last extract date and before today's extract, for CURRENT and CURRENT-FUTURE Option*/
  INV.DISABLE_DATE between TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS') and TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS')
  )
  OR BOM.LAST_UPDATE_DATE > TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS')) 
GROUP BY
  M.INVENTORY_ITEM_ID,
  M.ORGANIZATION_ID,
  M.STD_LOT_SIZE,
  M.BOM_ITEM_TYPE,
  M.PRIMARY_UOM_CODE,
  BOM.ALTERNATE_BOM_DESIGNATOR,
  BOM.LAST_UPDATE_DATE,
  BOM.LAST_UPDATED_BY,
  BOM.CREATION_DATE,
  BOM.CREATED_BY,
  BOM.LAST_UPDATE_LOGIN,
  BOM.BILL_SEQUENCE_ID",,
1,1,SDE_ORA_BOMHeaderDimension,Source Definition,BOM_BILL_OF_MATERIALS,OLTP,ALTERNATE_BOM_DESIGNATOR,Source Qualifier,SQ_BOM_INVENTORY_COMPONENTS,ALTERNATE_BOM_DESIGNATOR,,,"SELECT 
  M.INVENTORY_ITEM_ID,
  M.ORGANIZATION_ID,
  M.STD_LOT_SIZE,
  M.BOM_ITEM_TYPE,
  M.PRIMARY_UOM_CODE,
  BOM.ALTERNATE_BOM_DESIGNATOR,
  BOM.LAST_UPDATE_DATE,
  BOM.LAST_UPDATED_BY,
  BOM.CREATION_DATE,
  BOM.CREATED_BY,
  BOM.LAST_UPDATE_LOGIN,
  BOM.BILL_SEQUENCE_ID,
  max(INV.LAST_UPDATE_DATE),
  max(INV.EFFECTIVITY_DATE),
  max(Case When INV.DISABLE_DATE > TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS') OR INV.DISABLE_DATE Is Null Then to_date('01/01/1899 00:00:00','MM/DD/YYYY HH24:MI:SS') ELSE to_date(to_char(INV.DISABLE_DATE, 'MM/DD/YYYY HH24:MI:SS'), 'MM/DD/YYYY HH24:MI:SS')  END),
'0' AS X_CUSTOM
FROM 
  BOM_BILL_OF_MATERIALS BOM,
  MTL_SYSTEM_ITEMS_B M,
  BOM_INVENTORY_COMPONENTS INV
WHERE
INV.BOM_ITEM_TYPE = 4 AND
M.BOM_ITEM_TYPE = 4 AND
BOM.BILL_SEQUENCE_ID=INV.BILL_SEQUENCE_ID AND 
BOM.ORGANIZATION_ID = M.ORGANIZATION_ID AND
BOM.ASSEMBLY_ITEM_ID = M.INVENTORY_ITEM_ID AND
  ((
  /* CURRENT valid component changed */ 
  INV.LAST_UPDATE_DATE > TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS') AND (INV.EFFECTIVITY_DATE <= TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS') and (INV.DISABLE_DATE > TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS') OR INV.DISABLE_DATE IS NULL))
  OR
  /* Component that became effecitve after last extract date and before today's extract, for CURRENT Option*/
  INV.EFFECTIVITY_DATE between TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS') and TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS')
  OR
  /* Component that become disabled after last extract date and before today's extract, for CURRENT and CURRENT-FUTURE Option*/
  INV.DISABLE_DATE between TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS') and TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS')
  )
  OR BOM.LAST_UPDATE_DATE > TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS')) 
GROUP BY
  M.INVENTORY_ITEM_ID,
  M.ORGANIZATION_ID,
  M.STD_LOT_SIZE,
  M.BOM_ITEM_TYPE,
  M.PRIMARY_UOM_CODE,
  BOM.ALTERNATE_BOM_DESIGNATOR,
  BOM.LAST_UPDATE_DATE,
  BOM.LAST_UPDATED_BY,
  BOM.CREATION_DATE,
  BOM.CREATED_BY,
  BOM.LAST_UPDATE_LOGIN,
  BOM.BILL_SEQUENCE_ID","SELECT 
  M.INVENTORY_ITEM_ID,
  M.ORGANIZATION_ID,
  M.STD_LOT_SIZE,
  M.BOM_ITEM_TYPE,
  M.PRIMARY_UOM_CODE,
  BOM.ALTERNATE_BOM_DESIGNATOR,
  BOM.LAST_UPDATE_DATE,
  BOM.LAST_UPDATED_BY,
  BOM.CREATION_DATE,
  BOM.CREATED_BY,
  BOM.LAST_UPDATE_LOGIN,
  BOM.BILL_SEQUENCE_ID,
  max(INV.LAST_UPDATE_DATE),
  max(INV.EFFECTIVITY_DATE),
  max(Case When INV.DISABLE_DATE > TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS') OR INV.DISABLE_DATE Is Null Then to_date('01/01/1899 00:00:00','MM/DD/YYYY HH24:MI:SS') ELSE to_date(to_char(INV.DISABLE_DATE, 'MM/DD/YYYY HH24:MI:SS'), 'MM/DD/YYYY HH24:MI:SS')  END),
'0' AS X_CUSTOM
FROM 
  BOM_BILL_OF_MATERIALS BOM,
  MTL_SYSTEM_ITEMS_B M,
  BOM_INVENTORY_COMPONENTS INV
WHERE
INV.BOM_ITEM_TYPE = 4 AND
M.BOM_ITEM_TYPE = 4 AND
BOM.BILL_SEQUENCE_ID=INV.BILL_SEQUENCE_ID AND 
BOM.ORGANIZATION_ID = M.ORGANIZATION_ID AND
BOM.ASSEMBLY_ITEM_ID = M.INVENTORY_ITEM_ID AND
  ((
  /* CURRENT valid component changed */ 
  INV.LAST_UPDATE_DATE > TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS') AND (INV.EFFECTIVITY_DATE <= TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS') and (INV.DISABLE_DATE > TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS') OR INV.DISABLE_DATE IS NULL))
  OR
  /* Component that became effecitve after last extract date and before today's extract, for CURRENT Option*/
  INV.EFFECTIVITY_DATE between TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS') and TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS')
  OR
  /* Component that become disabled after last extract date and before today's extract, for CURRENT and CURRENT-FUTURE Option*/
  INV.DISABLE_DATE between TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS') and TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS')
  )
  OR BOM.LAST_UPDATE_DATE > TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS')) 
GROUP BY
  M.INVENTORY_ITEM_ID,
  M.ORGANIZATION_ID,
  M.STD_LOT_SIZE,
  M.BOM_ITEM_TYPE,
  M.PRIMARY_UOM_CODE,
  BOM.ALTERNATE_BOM_DESIGNATOR,
  BOM.LAST_UPDATE_DATE,
  BOM.LAST_UPDATED_BY,
  BOM.CREATION_DATE,
  BOM.CREATED_BY,
  BOM.LAST_UPDATE_LOGIN,
  BOM.BILL_SEQUENCE_ID",,
1,1,SDE_ORA_BOMHeaderDimension,Source Definition,BOM_BILL_OF_MATERIALS,OLTP,LAST_UPDATE_DATE,Source Qualifier,SQ_BOM_INVENTORY_COMPONENTS,LAST_UPDATE_DATE,,,"SELECT 
  M.INVENTORY_ITEM_ID,
  M.ORGANIZATION_ID,
  M.STD_LOT_SIZE,
  M.BOM_ITEM_TYPE,
  M.PRIMARY_UOM_CODE,
  BOM.ALTERNATE_BOM_DESIGNATOR,
  BOM.LAST_UPDATE_DATE,
  BOM.LAST_UPDATED_BY,
  BOM.CREATION_DATE,
  BOM.CREATED_BY,
  BOM.LAST_UPDATE_LOGIN,
  BOM.BILL_SEQUENCE_ID,
  max(INV.LAST_UPDATE_DATE),
  max(INV.EFFECTIVITY_DATE),
  max(Case When INV.DISABLE_DATE > TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS') OR INV.DISABLE_DATE Is Null Then to_date('01/01/1899 00:00:00','MM/DD/YYYY HH24:MI:SS') ELSE to_date(to_char(INV.DISABLE_DATE, 'MM/DD/YYYY HH24:MI:SS'), 'MM/DD/YYYY HH24:MI:SS')  END),
'0' AS X_CUSTOM
FROM 
  BOM_BILL_OF_MATERIALS BOM,
  MTL_SYSTEM_ITEMS_B M,
  BOM_INVENTORY_COMPONENTS INV
WHERE
INV.BOM_ITEM_TYPE = 4 AND
M.BOM_ITEM_TYPE = 4 AND
BOM.BILL_SEQUENCE_ID=INV.BILL_SEQUENCE_ID AND 
BOM.ORGANIZATION_ID = M.ORGANIZATION_ID AND
BOM.ASSEMBLY_ITEM_ID = M.INVENTORY_ITEM_ID AND
  ((
  /* CURRENT valid component changed */ 
  INV.LAST_UPDATE_DATE > TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS') AND (INV.EFFECTIVITY_DATE <= TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS') and (INV.DISABLE_DATE > TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS') OR INV.DISABLE_DATE IS NULL))
  OR
  /* Component that became effecitve after last extract date and before today's extract, for CURRENT Option*/
  INV.EFFECTIVITY_DATE between TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS') and TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS')
  OR
  /* Component that become disabled after last extract date and before today's extract, for CURRENT and CURRENT-FUTURE Option*/
  INV.DISABLE_DATE between TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS') and TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS')
  )
  OR BOM.LAST_UPDATE_DATE > TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS')) 
GROUP BY
  M.INVENTORY_ITEM_ID,
  M.ORGANIZATION_ID,
  M.STD_LOT_SIZE,
  M.BOM_ITEM_TYPE,
  M.PRIMARY_UOM_CODE,
  BOM.ALTERNATE_BOM_DESIGNATOR,
  BOM.LAST_UPDATE_DATE,
  BOM.LAST_UPDATED_BY,
  BOM.CREATION_DATE,
  BOM.CREATED_BY,
  BOM.LAST_UPDATE_LOGIN,
  BOM.BILL_SEQUENCE_ID","SELECT 
  M.INVENTORY_ITEM_ID,
  M.ORGANIZATION_ID,
  M.STD_LOT_SIZE,
  M.BOM_ITEM_TYPE,
  M.PRIMARY_UOM_CODE,
  BOM.ALTERNATE_BOM_DESIGNATOR,
  BOM.LAST_UPDATE_DATE,
  BOM.LAST_UPDATED_BY,
  BOM.CREATION_DATE,
  BOM.CREATED_BY,
  BOM.LAST_UPDATE_LOGIN,
  BOM.BILL_SEQUENCE_ID,
  max(INV.LAST_UPDATE_DATE),
  max(INV.EFFECTIVITY_DATE),
  max(Case When INV.DISABLE_DATE > TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS') OR INV.DISABLE_DATE Is Null Then to_date('01/01/1899 00:00:00','MM/DD/YYYY HH24:MI:SS') ELSE to_date(to_char(INV.DISABLE_DATE, 'MM/DD/YYYY HH24:MI:SS'), 'MM/DD/YYYY HH24:MI:SS')  END),
'0' AS X_CUSTOM
FROM 
  BOM_BILL_OF_MATERIALS BOM,
  MTL_SYSTEM_ITEMS_B M,
  BOM_INVENTORY_COMPONENTS INV
WHERE
INV.BOM_ITEM_TYPE = 4 AND
M.BOM_ITEM_TYPE = 4 AND
BOM.BILL_SEQUENCE_ID=INV.BILL_SEQUENCE_ID AND 
BOM.ORGANIZATION_ID = M.ORGANIZATION_ID AND
BOM.ASSEMBLY_ITEM_ID = M.INVENTORY_ITEM_ID AND
  ((
  /* CURRENT valid component changed */ 
  INV.LAST_UPDATE_DATE > TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS') AND (INV.EFFECTIVITY_DATE <= TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS') and (INV.DISABLE_DATE > TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS') OR INV.DISABLE_DATE IS NULL))
  OR
  /* Component that became effecitve after last extract date and before today's extract, for CURRENT Option*/
  INV.EFFECTIVITY_DATE between TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS') and TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS')
  OR
  /* Component that become disabled after last extract date and before today's extract, for CURRENT and CURRENT-FUTURE Option*/
  INV.DISABLE_DATE between TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS') and TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS')
  )
  OR BOM.LAST_UPDATE_DATE > TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS')) 
GROUP BY
  M.INVENTORY_ITEM_ID,
  M.ORGANIZATION_ID,
  M.STD_LOT_SIZE,
  M.BOM_ITEM_TYPE,
  M.PRIMARY_UOM_CODE,
  BOM.ALTERNATE_BOM_DESIGNATOR,
  BOM.LAST_UPDATE_DATE,
  BOM.LAST_UPDATED_BY,
  BOM.CREATION_DATE,
  BOM.CREATED_BY,
  BOM.LAST_UPDATE_LOGIN,
  BOM.BILL_SEQUENCE_ID",,
1,1,SDE_ORA_BOMHeaderDimension,Source Definition,BOM_BILL_OF_MATERIALS,OLTP,LAST_UPDATED_BY,Source Qualifier,SQ_BOM_INVENTORY_COMPONENTS,LAST_UPDATED_BY,,,"SELECT 
  M.INVENTORY_ITEM_ID,
  M.ORGANIZATION_ID,
  M.STD_LOT_SIZE,
  M.BOM_ITEM_TYPE,
  M.PRIMARY_UOM_CODE,
  BOM.ALTERNATE_BOM_DESIGNATOR,
  BOM.LAST_UPDATE_DATE,
  BOM.LAST_UPDATED_BY,
  BOM.CREATION_DATE,
  BOM.CREATED_BY,
  BOM.LAST_UPDATE_LOGIN,
  BOM.BILL_SEQUENCE_ID,
  max(INV.LAST_UPDATE_DATE),
  max(INV.EFFECTIVITY_DATE),
  max(Case When INV.DISABLE_DATE > TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS') OR INV.DISABLE_DATE Is Null Then to_date('01/01/1899 00:00:00','MM/DD/YYYY HH24:MI:SS') ELSE to_date(to_char(INV.DISABLE_DATE, 'MM/DD/YYYY HH24:MI:SS'), 'MM/DD/YYYY HH24:MI:SS')  END),
'0' AS X_CUSTOM
FROM 
  BOM_BILL_OF_MATERIALS BOM,
  MTL_SYSTEM_ITEMS_B M,
  BOM_INVENTORY_COMPONENTS INV
WHERE
INV.BOM_ITEM_TYPE = 4 AND
M.BOM_ITEM_TYPE = 4 AND
BOM.BILL_SEQUENCE_ID=INV.BILL_SEQUENCE_ID AND 
BOM.ORGANIZATION_ID = M.ORGANIZATION_ID AND
BOM.ASSEMBLY_ITEM_ID = M.INVENTORY_ITEM_ID AND
  ((
  /* CURRENT valid component changed */ 
  INV.LAST_UPDATE_DATE > TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS') AND (INV.EFFECTIVITY_DATE <= TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS') and (INV.DISABLE_DATE > TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS') OR INV.DISABLE_DATE IS NULL))
  OR
  /* Component that became effecitve after last extract date and before today's extract, for CURRENT Option*/
  INV.EFFECTIVITY_DATE between TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS') and TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS')
  OR
  /* Component that become disabled after last extract date and before today's extract, for CURRENT and CURRENT-FUTURE Option*/
  INV.DISABLE_DATE between TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS') and TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS')
  )
  OR BOM.LAST_UPDATE_DATE > TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS')) 
GROUP BY
  M.INVENTORY_ITEM_ID,
  M.ORGANIZATION_ID,
  M.STD_LOT_SIZE,
  M.BOM_ITEM_TYPE,
  M.PRIMARY_UOM_CODE,
  BOM.ALTERNATE_BOM_DESIGNATOR,
  BOM.LAST_UPDATE_DATE,
  BOM.LAST_UPDATED_BY,
  BOM.CREATION_DATE,
  BOM.CREATED_BY,
  BOM.LAST_UPDATE_LOGIN,
  BOM.BILL_SEQUENCE_ID","SELECT 
  M.INVENTORY_ITEM_ID,
  M.ORGANIZATION_ID,
  M.STD_LOT_SIZE,
  M.BOM_ITEM_TYPE,
  M.PRIMARY_UOM_CODE,
  BOM.ALTERNATE_BOM_DESIGNATOR,
  BOM.LAST_UPDATE_DATE,
  BOM.LAST_UPDATED_BY,
  BOM.CREATION_DATE,
  BOM.CREATED_BY,
  BOM.LAST_UPDATE_LOGIN,
  BOM.BILL_SEQUENCE_ID,
  max(INV.LAST_UPDATE_DATE),
  max(INV.EFFECTIVITY_DATE),
  max(Case When INV.DISABLE_DATE > TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS') OR INV.DISABLE_DATE Is Null Then to_date('01/01/1899 00:00:00','MM/DD/YYYY HH24:MI:SS') ELSE to_date(to_char(INV.DISABLE_DATE, 'MM/DD/YYYY HH24:MI:SS'), 'MM/DD/YYYY HH24:MI:SS')  END),
'0' AS X_CUSTOM
FROM 
  BOM_BILL_OF_MATERIALS BOM,
  MTL_SYSTEM_ITEMS_B M,
  BOM_INVENTORY_COMPONENTS INV
WHERE
INV.BOM_ITEM_TYPE = 4 AND
M.BOM_ITEM_TYPE = 4 AND
BOM.BILL_SEQUENCE_ID=INV.BILL_SEQUENCE_ID AND 
BOM.ORGANIZATION_ID = M.ORGANIZATION_ID AND
BOM.ASSEMBLY_ITEM_ID = M.INVENTORY_ITEM_ID AND
  ((
  /* CURRENT valid component changed */ 
  INV.LAST_UPDATE_DATE > TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS') AND (INV.EFFECTIVITY_DATE <= TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS') and (INV.DISABLE_DATE > TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS') OR INV.DISABLE_DATE IS NULL))
  OR
  /* Component that became effecitve after last extract date and before today's extract, for CURRENT Option*/
  INV.EFFECTIVITY_DATE between TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS') and TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS')
  OR
  /* Component that become disabled after last extract date and before today's extract, for CURRENT and CURRENT-FUTURE Option*/
  INV.DISABLE_DATE between TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS') and TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS')
  )
  OR BOM.LAST_UPDATE_DATE > TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS')) 
GROUP BY
  M.INVENTORY_ITEM_ID,
  M.ORGANIZATION_ID,
  M.STD_LOT_SIZE,
  M.BOM_ITEM_TYPE,
  M.PRIMARY_UOM_CODE,
  BOM.ALTERNATE_BOM_DESIGNATOR,
  BOM.LAST_UPDATE_DATE,
  BOM.LAST_UPDATED_BY,
  BOM.CREATION_DATE,
  BOM.CREATED_BY,
  BOM.LAST_UPDATE_LOGIN,
  BOM.BILL_SEQUENCE_ID",,
1,1,SDE_ORA_BOMHeaderDimension,Source Definition,BOM_BILL_OF_MATERIALS,OLTP,CREATION_DATE,Source Qualifier,SQ_BOM_INVENTORY_COMPONENTS,CREATION_DATE,,,"SELECT 
  M.INVENTORY_ITEM_ID,
  M.ORGANIZATION_ID,
  M.STD_LOT_SIZE,
  M.BOM_ITEM_TYPE,
  M.PRIMARY_UOM_CODE,
  BOM.ALTERNATE_BOM_DESIGNATOR,
  BOM.LAST_UPDATE_DATE,
  BOM.LAST_UPDATED_BY,
  BOM.CREATION_DATE,
  BOM.CREATED_BY,
  BOM.LAST_UPDATE_LOGIN,
  BOM.BILL_SEQUENCE_ID,
  max(INV.LAST_UPDATE_DATE),
  max(INV.EFFECTIVITY_DATE),
  max(Case When INV.DISABLE_DATE > TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS') OR INV.DISABLE_DATE Is Null Then to_date('01/01/1899 00:00:00','MM/DD/YYYY HH24:MI:SS') ELSE to_date(to_char(INV.DISABLE_DATE, 'MM/DD/YYYY HH24:MI:SS'), 'MM/DD/YYYY HH24:MI:SS')  END),
'0' AS X_CUSTOM
FROM 
  BOM_BILL_OF_MATERIALS BOM,
  MTL_SYSTEM_ITEMS_B M,
  BOM_INVENTORY_COMPONENTS INV
WHERE
INV.BOM_ITEM_TYPE = 4 AND
M.BOM_ITEM_TYPE = 4 AND
BOM.BILL_SEQUENCE_ID=INV.BILL_SEQUENCE_ID AND 
BOM.ORGANIZATION_ID = M.ORGANIZATION_ID AND
BOM.ASSEMBLY_ITEM_ID = M.INVENTORY_ITEM_ID AND
  ((
  /* CURRENT valid component changed */ 
  INV.LAST_UPDATE_DATE > TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS') AND (INV.EFFECTIVITY_DATE <= TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS') and (INV.DISABLE_DATE > TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS') OR INV.DISABLE_DATE IS NULL))
  OR
  /* Component that became effecitve after last extract date and before today's extract, for CURRENT Option*/
  INV.EFFECTIVITY_DATE between TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS') and TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS')
  OR
  /* Component that become disabled after last extract date and before today's extract, for CURRENT and CURRENT-FUTURE Option*/
  INV.DISABLE_DATE between TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS') and TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS')
  )
  OR BOM.LAST_UPDATE_DATE > TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS')) 
GROUP BY
  M.INVENTORY_ITEM_ID,
  M.ORGANIZATION_ID,
  M.STD_LOT_SIZE,
  M.BOM_ITEM_TYPE,
  M.PRIMARY_UOM_CODE,
  BOM.ALTERNATE_BOM_DESIGNATOR,
  BOM.LAST_UPDATE_DATE,
  BOM.LAST_UPDATED_BY,
  BOM.CREATION_DATE,
  BOM.CREATED_BY,
  BOM.LAST_UPDATE_LOGIN,
  BOM.BILL_SEQUENCE_ID","SELECT 
  M.INVENTORY_ITEM_ID,
  M.ORGANIZATION_ID,
  M.STD_LOT_SIZE,
  M.BOM_ITEM_TYPE,
  M.PRIMARY_UOM_CODE,
  BOM.ALTERNATE_BOM_DESIGNATOR,
  BOM.LAST_UPDATE_DATE,
  BOM.LAST_UPDATED_BY,
  BOM.CREATION_DATE,
  BOM.CREATED_BY,
  BOM.LAST_UPDATE_LOGIN,
  BOM.BILL_SEQUENCE_ID,
  max(INV.LAST_UPDATE_DATE),
  max(INV.EFFECTIVITY_DATE),
  max(Case When INV.DISABLE_DATE > TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS') OR INV.DISABLE_DATE Is Null Then to_date('01/01/1899 00:00:00','MM/DD/YYYY HH24:MI:SS') ELSE to_date(to_char(INV.DISABLE_DATE, 'MM/DD/YYYY HH24:MI:SS'), 'MM/DD/YYYY HH24:MI:SS')  END),
'0' AS X_CUSTOM
FROM 
  BOM_BILL_OF_MATERIALS BOM,
  MTL_SYSTEM_ITEMS_B M,
  BOM_INVENTORY_COMPONENTS INV
WHERE
INV.BOM_ITEM_TYPE = 4 AND
M.BOM_ITEM_TYPE = 4 AND
BOM.BILL_SEQUENCE_ID=INV.BILL_SEQUENCE_ID AND 
BOM.ORGANIZATION_ID = M.ORGANIZATION_ID AND
BOM.ASSEMBLY_ITEM_ID = M.INVENTORY_ITEM_ID AND
  ((
  /* CURRENT valid component changed */ 
  INV.LAST_UPDATE_DATE > TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS') AND (INV.EFFECTIVITY_DATE <= TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS') and (INV.DISABLE_DATE > TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS') OR INV.DISABLE_DATE IS NULL))
  OR
  /* Component that became effecitve after last extract date and before today's extract, for CURRENT Option*/
  INV.EFFECTIVITY_DATE between TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS') and TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS')
  OR
  /* Component that become disabled after last extract date and before today's extract, for CURRENT and CURRENT-FUTURE Option*/
  INV.DISABLE_DATE between TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS') and TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS')
  )
  OR BOM.LAST_UPDATE_DATE > TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS')) 
GROUP BY
  M.INVENTORY_ITEM_ID,
  M.ORGANIZATION_ID,
  M.STD_LOT_SIZE,
  M.BOM_ITEM_TYPE,
  M.PRIMARY_UOM_CODE,
  BOM.ALTERNATE_BOM_DESIGNATOR,
  BOM.LAST_UPDATE_DATE,
  BOM.LAST_UPDATED_BY,
  BOM.CREATION_DATE,
  BOM.CREATED_BY,
  BOM.LAST_UPDATE_LOGIN,
  BOM.BILL_SEQUENCE_ID",,
1,1,SDE_ORA_BOMHeaderDimension,Source Definition,BOM_BILL_OF_MATERIALS,OLTP,CREATED_BY,Source Qualifier,SQ_BOM_INVENTORY_COMPONENTS,CREATED_BY,,,"SELECT 
  M.INVENTORY_ITEM_ID,
  M.ORGANIZATION_ID,
  M.STD_LOT_SIZE,
  M.BOM_ITEM_TYPE,
  M.PRIMARY_UOM_CODE,
  BOM.ALTERNATE_BOM_DESIGNATOR,
  BOM.LAST_UPDATE_DATE,
  BOM.LAST_UPDATED_BY,
  BOM.CREATION_DATE,
  BOM.CREATED_BY,
  BOM.LAST_UPDATE_LOGIN,
  BOM.BILL_SEQUENCE_ID,
  max(INV.LAST_UPDATE_DATE),
  max(INV.EFFECTIVITY_DATE),
  max(Case When INV.DISABLE_DATE > TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS') OR INV.DISABLE_DATE Is Null Then to_date('01/01/1899 00:00:00','MM/DD/YYYY HH24:MI:SS') ELSE to_date(to_char(INV.DISABLE_DATE, 'MM/DD/YYYY HH24:MI:SS'), 'MM/DD/YYYY HH24:MI:SS')  END),
'0' AS X_CUSTOM
FROM 
  BOM_BILL_OF_MATERIALS BOM,
  MTL_SYSTEM_ITEMS_B M,
  BOM_INVENTORY_COMPONENTS INV
WHERE
INV.BOM_ITEM_TYPE = 4 AND
M.BOM_ITEM_TYPE = 4 AND
BOM.BILL_SEQUENCE_ID=INV.BILL_SEQUENCE_ID AND 
BOM.ORGANIZATION_ID = M.ORGANIZATION_ID AND
BOM.ASSEMBLY_ITEM_ID = M.INVENTORY_ITEM_ID AND
  ((
  /* CURRENT valid component changed */ 
  INV.LAST_UPDATE_DATE > TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS') AND (INV.EFFECTIVITY_DATE <= TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS') and (INV.DISABLE_DATE > TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS') OR INV.DISABLE_DATE IS NULL))
  OR
  /* Component that became effecitve after last extract date and before today's extract, for CURRENT Option*/
  INV.EFFECTIVITY_DATE between TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS') and TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS')
  OR
  /* Component that become disabled after last extract date and before today's extract, for CURRENT and CURRENT-FUTURE Option*/
  INV.DISABLE_DATE between TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS') and TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS')
  )
  OR BOM.LAST_UPDATE_DATE > TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS')) 
GROUP BY
  M.INVENTORY_ITEM_ID,
  M.ORGANIZATION_ID,
  M.STD_LOT_SIZE,
  M.BOM_ITEM_TYPE,
  M.PRIMARY_UOM_CODE,
  BOM.ALTERNATE_BOM_DESIGNATOR,
  BOM.LAST_UPDATE_DATE,
  BOM.LAST_UPDATED_BY,
  BOM.CREATION_DATE,
  BOM.CREATED_BY,
  BOM.LAST_UPDATE_LOGIN,
  BOM.BILL_SEQUENCE_ID","SELECT 
  M.INVENTORY_ITEM_ID,
  M.ORGANIZATION_ID,
  M.STD_LOT_SIZE,
  M.BOM_ITEM_TYPE,
  M.PRIMARY_UOM_CODE,
  BOM.ALTERNATE_BOM_DESIGNATOR,
  BOM.LAST_UPDATE_DATE,
  BOM.LAST_UPDATED_BY,
  BOM.CREATION_DATE,
  BOM.CREATED_BY,
  BOM.LAST_UPDATE_LOGIN,
  BOM.BILL_SEQUENCE_ID,
  max(INV.LAST_UPDATE_DATE),
  max(INV.EFFECTIVITY_DATE),
  max(Case When INV.DISABLE_DATE > TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS') OR INV.DISABLE_DATE Is Null Then to_date('01/01/1899 00:00:00','MM/DD/YYYY HH24:MI:SS') ELSE to_date(to_char(INV.DISABLE_DATE, 'MM/DD/YYYY HH24:MI:SS'), 'MM/DD/YYYY HH24:MI:SS')  END),
'0' AS X_CUSTOM
FROM 
  BOM_BILL_OF_MATERIALS BOM,
  MTL_SYSTEM_ITEMS_B M,
  BOM_INVENTORY_COMPONENTS INV
WHERE
INV.BOM_ITEM_TYPE = 4 AND
M.BOM_ITEM_TYPE = 4 AND
BOM.BILL_SEQUENCE_ID=INV.BILL_SEQUENCE_ID AND 
BOM.ORGANIZATION_ID = M.ORGANIZATION_ID AND
BOM.ASSEMBLY_ITEM_ID = M.INVENTORY_ITEM_ID AND
  ((
  /* CURRENT valid component changed */ 
  INV.LAST_UPDATE_DATE > TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS') AND (INV.EFFECTIVITY_DATE <= TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS') and (INV.DISABLE_DATE > TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS') OR INV.DISABLE_DATE IS NULL))
  OR
  /* Component that became effecitve after last extract date and before today's extract, for CURRENT Option*/
  INV.EFFECTIVITY_DATE between TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS') and TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS')
  OR
  /* Component that become disabled after last extract date and before today's extract, for CURRENT and CURRENT-FUTURE Option*/
  INV.DISABLE_DATE between TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS') and TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS')
  )
  OR BOM.LAST_UPDATE_DATE > TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS')) 
GROUP BY
  M.INVENTORY_ITEM_ID,
  M.ORGANIZATION_ID,
  M.STD_LOT_SIZE,
  M.BOM_ITEM_TYPE,
  M.PRIMARY_UOM_CODE,
  BOM.ALTERNATE_BOM_DESIGNATOR,
  BOM.LAST_UPDATE_DATE,
  BOM.LAST_UPDATED_BY,
  BOM.CREATION_DATE,
  BOM.CREATED_BY,
  BOM.LAST_UPDATE_LOGIN,
  BOM.BILL_SEQUENCE_ID",,
1,1,SDE_ORA_BOMHeaderDimension,Source Definition,BOM_BILL_OF_MATERIALS,OLTP,LAST_UPDATE_LOGIN,Source Qualifier,SQ_BOM_INVENTORY_COMPONENTS,LAST_UPDATE_LOGIN,,,"SELECT 
  M.INVENTORY_ITEM_ID,
  M.ORGANIZATION_ID,
  M.STD_LOT_SIZE,
  M.BOM_ITEM_TYPE,
  M.PRIMARY_UOM_CODE,
  BOM.ALTERNATE_BOM_DESIGNATOR,
  BOM.LAST_UPDATE_DATE,
  BOM.LAST_UPDATED_BY,
  BOM.CREATION_DATE,
  BOM.CREATED_BY,
  BOM.LAST_UPDATE_LOGIN,
  BOM.BILL_SEQUENCE_ID,
  max(INV.LAST_UPDATE_DATE),
  max(INV.EFFECTIVITY_DATE),
  max(Case When INV.DISABLE_DATE > TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS') OR INV.DISABLE_DATE Is Null Then to_date('01/01/1899 00:00:00','MM/DD/YYYY HH24:MI:SS') ELSE to_date(to_char(INV.DISABLE_DATE, 'MM/DD/YYYY HH24:MI:SS'), 'MM/DD/YYYY HH24:MI:SS')  END),
'0' AS X_CUSTOM
FROM 
  BOM_BILL_OF_MATERIALS BOM,
  MTL_SYSTEM_ITEMS_B M,
  BOM_INVENTORY_COMPONENTS INV
WHERE
INV.BOM_ITEM_TYPE = 4 AND
M.BOM_ITEM_TYPE = 4 AND
BOM.BILL_SEQUENCE_ID=INV.BILL_SEQUENCE_ID AND 
BOM.ORGANIZATION_ID = M.ORGANIZATION_ID AND
BOM.ASSEMBLY_ITEM_ID = M.INVENTORY_ITEM_ID AND
  ((
  /* CURRENT valid component changed */ 
  INV.LAST_UPDATE_DATE > TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS') AND (INV.EFFECTIVITY_DATE <= TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS') and (INV.DISABLE_DATE > TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS') OR INV.DISABLE_DATE IS NULL))
  OR
  /* Component that became effecitve after last extract date and before today's extract, for CURRENT Option*/
  INV.EFFECTIVITY_DATE between TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS') and TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS')
  OR
  /* Component that become disabled after last extract date and before today's extract, for CURRENT and CURRENT-FUTURE Option*/
  INV.DISABLE_DATE between TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS') and TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS')
  )
  OR BOM.LAST_UPDATE_DATE > TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS')) 
GROUP BY
  M.INVENTORY_ITEM_ID,
  M.ORGANIZATION_ID,
  M.STD_LOT_SIZE,
  M.BOM_ITEM_TYPE,
  M.PRIMARY_UOM_CODE,
  BOM.ALTERNATE_BOM_DESIGNATOR,
  BOM.LAST_UPDATE_DATE,
  BOM.LAST_UPDATED_BY,
  BOM.CREATION_DATE,
  BOM.CREATED_BY,
  BOM.LAST_UPDATE_LOGIN,
  BOM.BILL_SEQUENCE_ID","SELECT 
  M.INVENTORY_ITEM_ID,
  M.ORGANIZATION_ID,
  M.STD_LOT_SIZE,
  M.BOM_ITEM_TYPE,
  M.PRIMARY_UOM_CODE,
  BOM.ALTERNATE_BOM_DESIGNATOR,
  BOM.LAST_UPDATE_DATE,
  BOM.LAST_UPDATED_BY,
  BOM.CREATION_DATE,
  BOM.CREATED_BY,
  BOM.LAST_UPDATE_LOGIN,
  BOM.BILL_SEQUENCE_ID,
  max(INV.LAST_UPDATE_DATE),
  max(INV.EFFECTIVITY_DATE),
  max(Case When INV.DISABLE_DATE > TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS') OR INV.DISABLE_DATE Is Null Then to_date('01/01/1899 00:00:00','MM/DD/YYYY HH24:MI:SS') ELSE to_date(to_char(INV.DISABLE_DATE, 'MM/DD/YYYY HH24:MI:SS'), 'MM/DD/YYYY HH24:MI:SS')  END),
'0' AS X_CUSTOM
FROM 
  BOM_BILL_OF_MATERIALS BOM,
  MTL_SYSTEM_ITEMS_B M,
  BOM_INVENTORY_COMPONENTS INV
WHERE
INV.BOM_ITEM_TYPE = 4 AND
M.BOM_ITEM_TYPE = 4 AND
BOM.BILL_SEQUENCE_ID=INV.BILL_SEQUENCE_ID AND 
BOM.ORGANIZATION_ID = M.ORGANIZATION_ID AND
BOM.ASSEMBLY_ITEM_ID = M.INVENTORY_ITEM_ID AND
  ((
  /* CURRENT valid component changed */ 
  INV.LAST_UPDATE_DATE > TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS') AND (INV.EFFECTIVITY_DATE <= TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS') and (INV.DISABLE_DATE > TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS') OR INV.DISABLE_DATE IS NULL))
  OR
  /* Component that became effecitve after last extract date and before today's extract, for CURRENT Option*/
  INV.EFFECTIVITY_DATE between TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS') and TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS')
  OR
  /* Component that become disabled after last extract date and before today's extract, for CURRENT and CURRENT-FUTURE Option*/
  INV.DISABLE_DATE between TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS') and TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS')
  )
  OR BOM.LAST_UPDATE_DATE > TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS')) 
GROUP BY
  M.INVENTORY_ITEM_ID,
  M.ORGANIZATION_ID,
  M.STD_LOT_SIZE,
  M.BOM_ITEM_TYPE,
  M.PRIMARY_UOM_CODE,
  BOM.ALTERNATE_BOM_DESIGNATOR,
  BOM.LAST_UPDATE_DATE,
  BOM.LAST_UPDATED_BY,
  BOM.CREATION_DATE,
  BOM.CREATED_BY,
  BOM.LAST_UPDATE_LOGIN,
  BOM.BILL_SEQUENCE_ID",,
1,1,SDE_ORA_BOMHeaderDimension,Source Definition,BOM_BILL_OF_MATERIALS,OLTP,BILL_SEQUENCE_ID,Source Qualifier,SQ_BOM_INVENTORY_COMPONENTS,BILL_SEQUENCE_ID,,,"SELECT 
  M.INVENTORY_ITEM_ID,
  M.ORGANIZATION_ID,
  M.STD_LOT_SIZE,
  M.BOM_ITEM_TYPE,
  M.PRIMARY_UOM_CODE,
  BOM.ALTERNATE_BOM_DESIGNATOR,
  BOM.LAST_UPDATE_DATE,
  BOM.LAST_UPDATED_BY,
  BOM.CREATION_DATE,
  BOM.CREATED_BY,
  BOM.LAST_UPDATE_LOGIN,
  BOM.BILL_SEQUENCE_ID,
  max(INV.LAST_UPDATE_DATE),
  max(INV.EFFECTIVITY_DATE),
  max(Case When INV.DISABLE_DATE > TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS') OR INV.DISABLE_DATE Is Null Then to_date('01/01/1899 00:00:00','MM/DD/YYYY HH24:MI:SS') ELSE to_date(to_char(INV.DISABLE_DATE, 'MM/DD/YYYY HH24:MI:SS'), 'MM/DD/YYYY HH24:MI:SS')  END),
'0' AS X_CUSTOM
FROM 
  BOM_BILL_OF_MATERIALS BOM,
  MTL_SYSTEM_ITEMS_B M,
  BOM_INVENTORY_COMPONENTS INV
WHERE
INV.BOM_ITEM_TYPE = 4 AND
M.BOM_ITEM_TYPE = 4 AND
BOM.BILL_SEQUENCE_ID=INV.BILL_SEQUENCE_ID AND 
BOM.ORGANIZATION_ID = M.ORGANIZATION_ID AND
BOM.ASSEMBLY_ITEM_ID = M.INVENTORY_ITEM_ID AND
  ((
  /* CURRENT valid component changed */ 
  INV.LAST_UPDATE_DATE > TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS') AND (INV.EFFECTIVITY_DATE <= TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS') and (INV.DISABLE_DATE > TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS') OR INV.DISABLE_DATE IS NULL))
  OR
  /* Component that became effecitve after last extract date and before today's extract, for CURRENT Option*/
  INV.EFFECTIVITY_DATE between TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS') and TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS')
  OR
  /* Component that become disabled after last extract date and before today's extract, for CURRENT and CURRENT-FUTURE Option*/
  INV.DISABLE_DATE between TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS') and TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS')
  )
  OR BOM.LAST_UPDATE_DATE > TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS')) 
GROUP BY
  M.INVENTORY_ITEM_ID,
  M.ORGANIZATION_ID,
  M.STD_LOT_SIZE,
  M.BOM_ITEM_TYPE,
  M.PRIMARY_UOM_CODE,
  BOM.ALTERNATE_BOM_DESIGNATOR,
  BOM.LAST_UPDATE_DATE,
  BOM.LAST_UPDATED_BY,
  BOM.CREATION_DATE,
  BOM.CREATED_BY,
  BOM.LAST_UPDATE_LOGIN,
  BOM.BILL_SEQUENCE_ID","SELECT 
  M.INVENTORY_ITEM_ID,
  M.ORGANIZATION_ID,
  M.STD_LOT_SIZE,
  M.BOM_ITEM_TYPE,
  M.PRIMARY_UOM_CODE,
  BOM.ALTERNATE_BOM_DESIGNATOR,
  BOM.LAST_UPDATE_DATE,
  BOM.LAST_UPDATED_BY,
  BOM.CREATION_DATE,
  BOM.CREATED_BY,
  BOM.LAST_UPDATE_LOGIN,
  BOM.BILL_SEQUENCE_ID,
  max(INV.LAST_UPDATE_DATE),
  max(INV.EFFECTIVITY_DATE),
  max(Case When INV.DISABLE_DATE > TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS') OR INV.DISABLE_DATE Is Null Then to_date('01/01/1899 00:00:00','MM/DD/YYYY HH24:MI:SS') ELSE to_date(to_char(INV.DISABLE_DATE, 'MM/DD/YYYY HH24:MI:SS'), 'MM/DD/YYYY HH24:MI:SS')  END),
'0' AS X_CUSTOM
FROM 
  BOM_BILL_OF_MATERIALS BOM,
  MTL_SYSTEM_ITEMS_B M,
  BOM_INVENTORY_COMPONENTS INV
WHERE
INV.BOM_ITEM_TYPE = 4 AND
M.BOM_ITEM_TYPE = 4 AND
BOM.BILL_SEQUENCE_ID=INV.BILL_SEQUENCE_ID AND 
BOM.ORGANIZATION_ID = M.ORGANIZATION_ID AND
BOM.ASSEMBLY_ITEM_ID = M.INVENTORY_ITEM_ID AND
  ((
  /* CURRENT valid component changed */ 
  INV.LAST_UPDATE_DATE > TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS') AND (INV.EFFECTIVITY_DATE <= TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS') and (INV.DISABLE_DATE > TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS') OR INV.DISABLE_DATE IS NULL))
  OR
  /* Component that became effecitve after last extract date and before today's extract, for CURRENT Option*/
  INV.EFFECTIVITY_DATE between TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS') and TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS')
  OR
  /* Component that become disabled after last extract date and before today's extract, for CURRENT and CURRENT-FUTURE Option*/
  INV.DISABLE_DATE between TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS') and TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS')
  )
  OR BOM.LAST_UPDATE_DATE > TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS')) 
GROUP BY
  M.INVENTORY_ITEM_ID,
  M.ORGANIZATION_ID,
  M.STD_LOT_SIZE,
  M.BOM_ITEM_TYPE,
  M.PRIMARY_UOM_CODE,
  BOM.ALTERNATE_BOM_DESIGNATOR,
  BOM.LAST_UPDATE_DATE,
  BOM.LAST_UPDATED_BY,
  BOM.CREATION_DATE,
  BOM.CREATED_BY,
  BOM.LAST_UPDATE_LOGIN,
  BOM.BILL_SEQUENCE_ID",,
1,1,SDE_ORA_BOMHeaderDimension,Source Definition,MTL_SYSTEM_ITEMS_B,OLTP,SUMMARY_FLAG,Source Qualifier,SQ_BOM_INVENTORY_COMPONENTS,X_CUSTOM,,,"SELECT 
  M.INVENTORY_ITEM_ID,
  M.ORGANIZATION_ID,
  M.STD_LOT_SIZE,
  M.BOM_ITEM_TYPE,
  M.PRIMARY_UOM_CODE,
  BOM.ALTERNATE_BOM_DESIGNATOR,
  BOM.LAST_UPDATE_DATE,
  BOM.LAST_UPDATED_BY,
  BOM.CREATION_DATE,
  BOM.CREATED_BY,
  BOM.LAST_UPDATE_LOGIN,
  BOM.BILL_SEQUENCE_ID,
  max(INV.LAST_UPDATE_DATE),
  max(INV.EFFECTIVITY_DATE),
  max(Case When INV.DISABLE_DATE > TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS') OR INV.DISABLE_DATE Is Null Then to_date('01/01/1899 00:00:00','MM/DD/YYYY HH24:MI:SS') ELSE to_date(to_char(INV.DISABLE_DATE, 'MM/DD/YYYY HH24:MI:SS'), 'MM/DD/YYYY HH24:MI:SS')  END),
'0' AS X_CUSTOM
FROM 
  BOM_BILL_OF_MATERIALS BOM,
  MTL_SYSTEM_ITEMS_B M,
  BOM_INVENTORY_COMPONENTS INV
WHERE
INV.BOM_ITEM_TYPE = 4 AND
M.BOM_ITEM_TYPE = 4 AND
BOM.BILL_SEQUENCE_ID=INV.BILL_SEQUENCE_ID AND 
BOM.ORGANIZATION_ID = M.ORGANIZATION_ID AND
BOM.ASSEMBLY_ITEM_ID = M.INVENTORY_ITEM_ID AND
  ((
  /* CURRENT valid component changed */ 
  INV.LAST_UPDATE_DATE > TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS') AND (INV.EFFECTIVITY_DATE <= TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS') and (INV.DISABLE_DATE > TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS') OR INV.DISABLE_DATE IS NULL))
  OR
  /* Component that became effecitve after last extract date and before today's extract, for CURRENT Option*/
  INV.EFFECTIVITY_DATE between TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS') and TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS')
  OR
  /* Component that become disabled after last extract date and before today's extract, for CURRENT and CURRENT-FUTURE Option*/
  INV.DISABLE_DATE between TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS') and TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS')
  )
  OR BOM.LAST_UPDATE_DATE > TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS')) 
GROUP BY
  M.INVENTORY_ITEM_ID,
  M.ORGANIZATION_ID,
  M.STD_LOT_SIZE,
  M.BOM_ITEM_TYPE,
  M.PRIMARY_UOM_CODE,
  BOM.ALTERNATE_BOM_DESIGNATOR,
  BOM.LAST_UPDATE_DATE,
  BOM.LAST_UPDATED_BY,
  BOM.CREATION_DATE,
  BOM.CREATED_BY,
  BOM.LAST_UPDATE_LOGIN,
  BOM.BILL_SEQUENCE_ID","SELECT 
  M.INVENTORY_ITEM_ID,
  M.ORGANIZATION_ID,
  M.STD_LOT_SIZE,
  M.BOM_ITEM_TYPE,
  M.PRIMARY_UOM_CODE,
  BOM.ALTERNATE_BOM_DESIGNATOR,
  BOM.LAST_UPDATE_DATE,
  BOM.LAST_UPDATED_BY,
  BOM.CREATION_DATE,
  BOM.CREATED_BY,
  BOM.LAST_UPDATE_LOGIN,
  BOM.BILL_SEQUENCE_ID,
  max(INV.LAST_UPDATE_DATE),
  max(INV.EFFECTIVITY_DATE),
  max(Case When INV.DISABLE_DATE > TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS') OR INV.DISABLE_DATE Is Null Then to_date('01/01/1899 00:00:00','MM/DD/YYYY HH24:MI:SS') ELSE to_date(to_char(INV.DISABLE_DATE, 'MM/DD/YYYY HH24:MI:SS'), 'MM/DD/YYYY HH24:MI:SS')  END),
'0' AS X_CUSTOM
FROM 
  BOM_BILL_OF_MATERIALS BOM,
  MTL_SYSTEM_ITEMS_B M,
  BOM_INVENTORY_COMPONENTS INV
WHERE
INV.BOM_ITEM_TYPE = 4 AND
M.BOM_ITEM_TYPE = 4 AND
BOM.BILL_SEQUENCE_ID=INV.BILL_SEQUENCE_ID AND 
BOM.ORGANIZATION_ID = M.ORGANIZATION_ID AND
BOM.ASSEMBLY_ITEM_ID = M.INVENTORY_ITEM_ID AND
  ((
  /* CURRENT valid component changed */ 
  INV.LAST_UPDATE_DATE > TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS') AND (INV.EFFECTIVITY_DATE <= TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS') and (INV.DISABLE_DATE > TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS') OR INV.DISABLE_DATE IS NULL))
  OR
  /* Component that became effecitve after last extract date and before today's extract, for CURRENT Option*/
  INV.EFFECTIVITY_DATE between TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS') and TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS')
  OR
  /* Component that become disabled after last extract date and before today's extract, for CURRENT and CURRENT-FUTURE Option*/
  INV.DISABLE_DATE between TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS') and TO_DATE('$$CURRENT_DATE','MM/DD/YYYY HH24:MI:SS')
  )
  OR BOM.LAST_UPDATE_DATE > TO_DATE('$$LAST_EXTRACT_DATE','MM/DD/YYYY HH24:MI:SS')) 
GROUP BY
  M.INVENTORY_ITEM_ID,
  M.ORGANIZATION_ID,
  M.STD_LOT_SIZE,
  M.BOM_ITEM_TYPE,
  M.PRIMARY_UOM_CODE,
  BOM.ALTERNATE_BOM_DESIGNATOR,
  BOM.LAST_UPDATE_DATE,
  BOM.LAST_UPDATED_BY,
  BOM.CREATION_DATE,
  BOM.CREATED_BY,
  BOM.LAST_UPDATE_LOGIN,
  BOM.BILL_SEQUENCE_ID",,
1,1,SDE_ORA_BOMHeaderDimension,Source Qualifier,SQ_BOM_INVENTORY_COMPONENTS,,INVENTORY_ITEM_ID,Expression,EXPTRANS,INVENTORY_ITEM_ID,,,,,,
1,1,SDE_ORA_BOMHeaderDimension,Source Qualifier,SQ_BOM_INVENTORY_COMPONENTS,,X_CUSTOM,Expression,X_CUSTOM,X_CUSTOM,,,,,,
1,1,SDE_ORA_BOMHeaderDimension,Mapplet,mplt_SA_ORA_BOMHeaderDimension_Primary,,EXT_PRODUCT_ID,Target Definition,W_BOM_HEADER_DS,PRODUCT_ID,,,,,,
1,1,SDE_ORA_BOMHeaderDimension,Mapplet,mplt_SA_ORA_BOMHeaderDimension_Primary,,EXT_MANUF_ORG_ID,Target Definition,W_BOM_HEADER_DS,INVENTORY_ORG_ID,,,,,,
1,1,SDE_ORA_BOMHeaderDimension,Mapplet,mplt_SA_ORA_BOMHeaderDimension_Primary,,EXT_PLANT_LOC_ID,Target Definition,W_BOM_HEADER_DS,PLANT_LOC_ID,,,,,,
1,1,SDE_ORA_BOMHeaderDimension,Mapplet,mplt_SA_ORA_BOMHeaderDimension_Primary,,EXT_CREATED_BY_ID,Target Definition,W_BOM_HEADER_DS,CREATED_BY_ID,,,,,,
1,1,SDE_ORA_BOMHeaderDimension,Mapplet,mplt_SA_ORA_BOMHeaderDimension_Primary,,EXT_CHANGED_BY_ID,Target Definition,W_BOM_HEADER_DS,CHANGED_BY_ID,,,,,,
1,1,SDE_ORA_BOMHeaderDimension,Mapplet,mplt_SA_ORA_BOMHeaderDimension_Primary,,EXT_CREATED_ON_DT,Target Definition,W_BOM_HEADER_DS,CREATED_ON_DT,,,,,,
1,1,SDE_ORA_BOMHeaderDimension,Mapplet,mplt_SA_ORA_BOMHeaderDimension_Primary,,EXT_CHANGED_ON_DT,Target Definition,W_BOM_HEADER_DS,CHANGED_ON_DT,,,,,,
1,1,SDE_ORA_BOMHeaderDimension,Mapplet,mplt_SA_ORA_BOMHeaderDimension_Primary,,EXT_BOM_NUMBER,Target Definition,W_BOM_HEADER_DS,BOM_NUMBER,,,,,,
1,1,SDE_ORA_BOMHeaderDimension,Mapplet,mplt_SA_ORA_BOMHeaderDimension_Primary,,EXT_BOM_TYPE_CODE,Target Definition,W_BOM_HEADER_DS,BOM_TYPE_CODE,,,,,,
1,1,SDE_ORA_BOMHeaderDimension,Mapplet,mplt_SA_ORA_BOMHeaderDimension_Primary,,EXT_BOM_TYPE_DESC,Target Definition,W_BOM_HEADER_DS,BOM_TYPE_NAME,,,,,,
1,1,SDE_ORA_BOMHeaderDimension,Mapplet,mplt_SA_ORA_BOMHeaderDimension_Primary,,EXT_BOM_CATEGORY_DESC,Target Definition,W_BOM_HEADER_DS,BOM_CATEGORY_NAME,,,,,,
1,1,SDE_ORA_BOMHeaderDimension,Mapplet,mplt_SA_ORA_BOMHeaderDimension_Primary,,EXT_BOM_VERSION,Target Definition,W_BOM_HEADER_DS,BOM_VERSION,,,,,,
1,1,SDE_ORA_BOMHeaderDimension,Mapplet,mplt_SA_ORA_BOMHeaderDimension_Primary,,EXT_BASE_UOM,Target Definition,W_BOM_HEADER_DS,BASE_UOM_CODE,,,,,,
1,1,SDE_ORA_BOMHeaderDimension,Mapplet,mplt_SA_ORA_BOMHeaderDimension_Primary,,EXT_BASE_QTY,Target Definition,W_BOM_HEADER_DS,BASE_QTY,,,,,,
1,1,SDE_ORA_BOMHeaderDimension,Mapplet,mplt_SA_ORA_BOMHeaderDimension_Primary,,EXT_DELETE_FLAG,Target Definition,W_BOM_HEADER_DS,DELETE_FLG,,,,,,
1,1,SDE_ORA_BOMHeaderDimension,Mapplet,mplt_SA_ORA_BOMHeaderDimension_Primary,,EXT_INTEGRATION_ID,Target Definition,W_BOM_HEADER_DS,INTEGRATION_ID,,,,,,
1,1,SDE_ORA_BOMHeaderDimension,Mapplet,mplt_SA_ORA_BOMHeaderDimension_Primary,,EXT_DATASOURCE_NUM_ID,Target Definition,W_BOM_HEADER_DS,DATASOURCE_NUM_ID,,,,,,
1,1,SDE_ORA_BOMHeaderDimension,Mapplet,mplt_SA_ORA_BOMHeaderDimension_Primary,,EXT_AUX1_CHANGED_ON_DT,Target Definition,W_BOM_HEADER_DS,AUX1_CHANGED_ON_DT,,,,,,
1,1,SDE_ORA_BOMHeaderDimension,Mapplet,mplt_SA_ORA_BOMHeaderDimension_Primary,,EXT_AUX2_CHANGED_ON_DT,Target Definition,W_BOM_HEADER_DS,AUX2_CHANGED_ON_DT,,,,,,
1,1,SDE_ORA_BOMHeaderDimension,Mapplet,mplt_SA_ORA_BOMHeaderDimension_Primary,,EXT_AUX3_CHANGED_ON_DT,Target Definition,W_BOM_HEADER_DS,AUX3_CHANGED_ON_DT,,,,,,
1,1,SDE_ORA_BOMHeaderDimension,Mapplet,mplt_SA_ORA_BOMHeaderDimension_Primary,,EXT_AUX4_CHANGED_ON_DT,Target Definition,W_BOM_HEADER_DS,AUX4_CHANGED_ON_DT,,,,,,
1,1,SDE_ORA_BOMHeaderDimension,Mapplet,mplt_SA_ORA_BOMHeaderDimension_Primary,,EXT_TENANT_ID,Target Definition,W_BOM_HEADER_DS,TENANT_ID,,,,,,
1,1,SDE_ORA_BOMHeaderDimension,Mapplet,mplt_SA_ORA_BOMHeaderDimension_Primary,,EXT_EFF_FROM_DT,Target Definition,W_BOM_HEADER_DS,SRC_EFF_FROM_DT,,,,,,
1,1,SDE_ORA_BOMHeaderDimension,Mapplet,mplt_SA_ORA_BOMHeaderDimension_Primary,,EXT_EFF_TO_DT,Target Definition,W_BOM_HEADER_DS,SRC_EFF_TO_DT,,,,,,
1,1,SDE_ORA_BOMHeaderDimension,Mapplet,mplt_SA_ORA_BOMHeaderDimension_Primary,,EXT_BOM_CATETORY_CODE,Target Definition,W_BOM_HEADER_DS,BOM_CATEGORY_CODE,,,,,,
1,1,SDE_ORA_BOMHeaderDimension,Mapplet,mplt_SA_ORA_BOMHeaderDimension_Primary,,EXT_ACTIVE_FLAG,Target Definition,W_BOM_HEADER_DS,ACTIVE_FLG,,,,,,
1,1,SDE_ORA_BOMHeaderDimension,Mapplet,mplt_SA_ORA_BOMHeaderDimension_Primary,,EXT_ALTERNATE_BOM_DESIGNATOR,Target Definition,W_BOM_HEADER_DS,ALTERNATE_BOM_DESIGNATOR,,,,,,
1,1,SDE_ORA_BOMHeaderDimension,Mapplet,mplt_SA_ORA_BOMHeaderDimension_Primary,,EXT_EXPLOSION_DT,Target Definition,W_BOM_HEADER_DS,EXPLOSION_DT,,,,,,
1,1,SDE_ORA_BOMHeaderDimension,Mapplet,mplt_SA_ORA_BOMHeaderDimension_Primary,,EXT_PARTITION_ID,Target Definition,W_BOM_HEADER_DS,PARTITION_ID,,,,,,
1,1,SDE_ORA_BOMHeaderDimension,Expression,X_CUSTOM,,X_CUSTOM,Target Definition,W_BOM_HEADER_DS,X_CUSTOM,INPUT/OUTPUT,DIRECT MAP,,,,
1,1,SDE_ORA_BOMHeaderDimension,Mapplet,mplt_BC_ORA_BOMHeaderDimension_Primary,,PRIMARY_UOM_CODE,Expression,Exp_W_BOM_HEADER_DS_Integration_Id,PRIMARY_UOM_CODE,,,,,,
1,1,SDE_ORA_BOMHeaderDimension,Mapplet,mplt_BC_ORA_BOMHeaderDimension_Primary,,LAST_UPDATED_BY,Expression,Exp_W_BOM_HEADER_DS_Integration_Id,LAST_UPDATED_BY,,,,,,
1,1,SDE_ORA_BOMHeaderDimension,Mapplet,mplt_BC_ORA_BOMHeaderDimension_Primary,,CREATED_BY,Expression,Exp_W_BOM_HEADER_DS_Integration_Id,CREATED_BY,,,,,,
1,1,SDE_ORA_BOMHeaderDimension,Mapplet,mplt_BC_ORA_BOMHeaderDimension_Primary,,LAST_UPDATE_LOGIN,Expression,Exp_W_BOM_HEADER_DS_Integration_Id,LAST_UPDATE_LOGIN,,,,,,
1,1,SDE_ORA_BOMHeaderDimension,Mapplet,mplt_BC_ORA_BOMHeaderDimension_Primary,,LAST_UPDATE_DATE_ITEM,Expression,Exp_W_BOM_HEADER_DS_Integration_Id,LAST_UPDATE_DATE_ITEM,,,,,,
1,1,SDE_ORA_BOMHeaderDimension,Mapplet,mplt_BC_ORA_BOMHeaderDimension_Primary,,EFFECTIVITY_DATE,Expression,Exp_W_BOM_HEADER_DS_Integration_Id,EFFECTIVITY_DATE,,,,,,
1,1,SDE_ORA_BOMHeaderDimension,Mapplet,mplt_BC_ORA_BOMHeaderDimension_Primary,,DISABLE_DATE,Expression,Exp_W_BOM_HEADER_DS_Integration_Id,DISABLE_DATE,,,,,,
1,1,SDE_ORA_BOMHeaderDimension,Mapplet,mplt_BC_ORA_BOMHeaderDimension_Primary,,LAST_UPDATE_DATE,Expression,Exp_W_BOM_HEADER_DS_Integration_Id,LAST_UPDATE_DATE,,,,,,
1,1,SDE_ORA_BOMHeaderDimension,Mapplet,mplt_BC_ORA_BOMHeaderDimension_Primary,,CREATION_DATE,Expression,Exp_W_BOM_HEADER_DS_Integration_Id,CREATION_DATE,,,,,,
1,1,SDE_ORA_BOMHeaderDimension,Mapplet,mplt_BC_ORA_BOMHeaderDimension_Primary,,ALTERNATE_BOM_DESIGNATOR,Expression,Exp_W_BOM_HEADER_DS_Integration_Id,ALTERNATE_BOM_DESIGNATOR,,,,,,
1,1,SDE_ORA_BOMHeaderDimension,Mapplet,mplt_BC_ORA_BOMHeaderDimension_Primary,,BILL_SEQUENCE_ID,Expression,Exp_W_BOM_HEADER_DS_Integration_Id,BILL_SEQUENCE_ID,,,,,,
1,1,SDE_ORA_BOMHeaderDimension,Mapplet,mplt_BC_ORA_BOMHeaderDimension_Primary,,ASSEMBLY_ITEM_ID,Expression,Exp_W_BOM_HEADER_DS_Integration_Id,ASSEMBLY_ITEM_ID,,,,,,
1,1,SDE_ORA_BOMHeaderDimension,Mapplet,mplt_BC_ORA_BOMHeaderDimension_Primary,,ORGANIZATION_ID,Expression,Exp_W_BOM_HEADER_DS_Integration_Id,ORGANIZATION_ID,,,,,,
1,1,SDE_ORA_BOMHeaderDimension,Mapplet,mplt_BC_ORA_BOMHeaderDimension_Primary,,BOM_ITEM_TYPE,Expression,Exp_W_BOM_HEADER_DS_Integration_Id,BOM_ITEM_TYPE,,,,,,
1,1,SDE_ORA_BOMHeaderDimension,Mapplet,mplt_BC_ORA_BOMHeaderDimension_Primary,,STD_LOT_SIZE,Expression,Exp_W_BOM_HEADER_DS_Integration_Id,STD_LOT_SIZE_IN,,,,,,
1,1,SDE_ORA_BOMHeaderDimension,Mapplet,mplt_BC_ORA_BOMHeaderDimension_Primary,,TENANT_ID,Expression,Exp_W_BOM_HEADER_DS_Integration_Id,INP_TENANT_ID,,,,,,
1,1,SDE_ORA_BOMHeaderDimension,Expression,Exp_W_BOM_HEADER_DS_Integration_Id,,EFFECTIVE_TO_DT_OUT,Mapplet,mplt_SA_ORA_BOMHeaderDimension_Primary,INP_EFF_TO_DT,OUTPUT,,,,,
1,1,SDE_ORA_BOMHeaderDimension,Expression,Exp_W_BOM_HEADER_DS_Integration_Id,,DELETE_FLAG,Mapplet,mplt_SA_ORA_BOMHeaderDimension_Primary,INP_DELETE_FLAG,OUTPUT,,,,,
1,1,SDE_ORA_BOMHeaderDimension,Expression,Exp_W_BOM_HEADER_DS_Integration_Id,,INTEGRATION_ID,Mapplet,mplt_SA_ORA_BOMHeaderDimension_Primary,INP_INTEGRATION_ID,OUTPUT,TO_CHAR(ROUND(BILL_SEQUENCE_ID)),,,,
1,1,SDE_ORA_BOMHeaderDimension,Expression,Exp_W_BOM_HEADER_DS_Integration_Id,,DATASOURCE_NUM_ID,Mapplet,mplt_SA_ORA_BOMHeaderDimension_Primary,INP_DATASOURCE_NUM_ID,OUTPUT,$$DATASOURCE_NUM_ID,,,,
1,1,SDE_ORA_BOMHeaderDimension,Expression,Exp_W_BOM_HEADER_DS_Integration_Id,,CREATION_DATE,Mapplet,mplt_SA_ORA_BOMHeaderDimension_Primary,INP_CREATION_DATE,INPUT/OUTPUT,DIRECT MAP,,,,
1,1,SDE_ORA_BOMHeaderDimension,Expression,Exp_W_BOM_HEADER_DS_Integration_Id,,STD_LOT_SIZE_OUT,Mapplet,mplt_SA_ORA_BOMHeaderDimension_Primary,INP_STD_LOT_SIZE,OUTPUT,"IIF(ISNULL(STD_LOT_SIZE_IN), 1, STD_LOT_SIZE_IN)",,,,
1,1,SDE_ORA_BOMHeaderDimension,Expression,Exp_W_BOM_HEADER_DS_Integration_Id,,ALTERNATE_BOM_DESIGNATOR,Mapplet,mplt_SA_ORA_BOMHeaderDimension_Primary,INP_ALTERNATE_BOM_DESIGNATOR,INPUT/OUTPUT,DIRECT MAP,,,,
1,1,SDE_ORA_BOMHeaderDimension,Expression,Exp_W_BOM_HEADER_DS_Integration_Id,,PARTITION_ID,Mapplet,mplt_SA_ORA_BOMHeaderDimension_Primary,INP_PARTITION_ID,OUTPUT,"MOD(PARTITION_ID_VAR, 4)",,,,
1,1,SDE_ORA_BOMHeaderDimension,Expression,Exp_W_BOM_HEADER_DS_Integration_Id,,EXPLOSION_DT,Mapplet,mplt_SA_ORA_BOMHeaderDimension_Primary,INP_EXPLOSION_DT,OUTPUT,SESSSTARTTIME,,,,
1,1,SDE_ORA_BOMHeaderDimension,Expression,Exp_W_BOM_HEADER_DS_Integration_Id,,ACTIVE_FLAG,Mapplet,mplt_SA_ORA_BOMHeaderDimension_Primary,INP_ACTIVE_FLAG,OUTPUT,'Y',,,,
1,1,SDE_ORA_BOMHeaderDimension,Expression,Exp_W_BOM_HEADER_DS_Integration_Id,,BILL_SEQUENCE_ID,Mapplet,mplt_SA_ORA_BOMHeaderDimension_Primary,INP_BIL_SEQUENCE_ID,INPUT/OUTPUT,DIRECT MAP,,,,
1,1,SDE_ORA_BOMHeaderDimension,Expression,Exp_W_BOM_HEADER_DS_Integration_Id,,ASSEMBLY_ITEM_ID,Mapplet,mplt_SA_ORA_BOMHeaderDimension_Primary,INP_ASSEMBLY_ITEM_ID,INPUT/OUTPUT,DIRECT MAP,,,,
1,1,SDE_ORA_BOMHeaderDimension,Expression,Exp_W_BOM_HEADER_DS_Integration_Id,,ORGANIZATION_ID,Mapplet,mplt_SA_ORA_BOMHeaderDimension_Primary,INP_ORGANIZATION_ID,INPUT/OUTPUT,DIRECT MAP,,,,
1,1,SDE_ORA_BOMHeaderDimension,Expression,Exp_W_BOM_HEADER_DS_Integration_Id,,BOM_ITEM_TYPE_OUT,Mapplet,mplt_SA_ORA_BOMHeaderDimension_Primary,INP_BOM_ITEM_TYPE,OUTPUT,TO_CHAR(BOM_ITEM_TYPE),,,,
1,1,SDE_ORA_BOMHeaderDimension,Expression,Exp_W_BOM_HEADER_DS_Integration_Id,,PRIMARY_UOM_CODE,Mapplet,mplt_SA_ORA_BOMHeaderDimension_Primary,INP_PRIMARY_UOM_CODE,INPUT/OUTPUT,DIRECT MAP,,,,
1,1,SDE_ORA_BOMHeaderDimension,Expression,Exp_W_BOM_HEADER_DS_Integration_Id,,LAST_UPDATE_DATE_OUT,Mapplet,mplt_SA_ORA_BOMHeaderDimension_Primary,INP_LAST_UPDATE_DATE,OUTPUT,V3_CHANGE_DATE,,,,
1,1,SDE_ORA_BOMHeaderDimension,Expression,Exp_W_BOM_HEADER_DS_Integration_Id,,LAST_UPDATED_BY,Mapplet,mplt_SA_ORA_BOMHeaderDimension_Primary,INP_LAST_UPDATED_BY,INPUT/OUTPUT,DIRECT MAP,,,,
1,1,SDE_ORA_BOMHeaderDimension,Expression,Exp_W_BOM_HEADER_DS_Integration_Id,,CREATED_BY,Mapplet,mplt_SA_ORA_BOMHeaderDimension_Primary,INP_CREATED_BY,INPUT/OUTPUT,DIRECT MAP,,,,
1,1,SDE_ORA_BOMHeaderDimension,Expression,Exp_W_BOM_HEADER_DS_Integration_Id,,LAST_UPDATE_LOGIN,Mapplet,mplt_SA_ORA_BOMHeaderDimension_Primary,INP_LAST_UPDATE_LOGIN,INPUT/OUTPUT,DIRECT MAP,,,,
1,1,SDE_ORA_BOMHeaderDimension,Expression,Exp_W_BOM_HEADER_DS_Integration_Id,,EXTRACT_STAGE,Mapplet,mplt_SA_ORA_BOMHeaderDimension_Primary,INP_EXTRACT_STAGE,OUTPUT,'PRIMARY',,,,
1,1,SDE_ORA_BOMHeaderDimension,Expression,Exp_W_BOM_HEADER_DS_Integration_Id,,EFFECTIVE_FROM_DT_OUT,Mapplet,mplt_SA_ORA_BOMHeaderDimension_Primary,INP_EFF_FROM_DT,OUTPUT,"IIF(ISNULL(EFFECTIVE_FROM_DT),TO_DATE('01/01/1899 00:00:00','MM/DD/YYYY HH24:MI:SS' ), EFFECTIVE_FROM_DT)",,,,
1,1,SDE_ORA_BOMHeaderDimension,Expression,Exp_W_BOM_HEADER_DS_Integration_Id,,TENANT_ID,Mapplet,mplt_SA_ORA_BOMHeaderDimension_Primary,INP_TENANT_ID,OUTPUT,"IIF(ISNULL(INP_TENANT_ID),$$TENANT_ID,INP_TENANT_ID)",,,,
1,1,SDE_ORA_BOMHeaderDimension,Mapplet,mplt_SA_ORA_BOMHeaderDimension_Primary,,EXT_PRODUCT_ID,Target Definition,W_BOM_HEADER_DS,PRODUCT_ID,,,,,,
1,1,SDE_ORA_BOMHeaderDimension,Mapplet,mplt_SA_ORA_BOMHeaderDimension_Primary,,EXT_MANUF_ORG_ID,Target Definition,W_BOM_HEADER_DS,INVENTORY_ORG_ID,,,,,,
1,1,SDE_ORA_BOMHeaderDimension,Mapplet,mplt_SA_ORA_BOMHeaderDimension_Primary,,EXT_PLANT_LOC_ID,Target Definition,W_BOM_HEADER_DS,PLANT_LOC_ID,,,,,,
1,1,SDE_ORA_BOMHeaderDimension,Mapplet,mplt_SA_ORA_BOMHeaderDimension_Primary,,EXT_CREATED_BY_ID,Target Definition,W_BOM_HEADER_DS,CREATED_BY_ID,,,,,,
1,1,SDE_ORA_BOMHeaderDimension,Mapplet,mplt_SA_ORA_BOMHeaderDimension_Primary,,EXT_CHANGED_BY_ID,Target Definition,W_BOM_HEADER_DS,CHANGED_BY_ID,,,,,,
1,1,SDE_ORA_BOMHeaderDimension,Mapplet,mplt_SA_ORA_BOMHeaderDimension_Primary,,EXT_CREATED_ON_DT,Target Definition,W_BOM_HEADER_DS,CREATED_ON_DT,,,,,,
1,1,SDE_ORA_BOMHeaderDimension,Mapplet,mplt_SA_ORA_BOMHeaderDimension_Primary,,EXT_CHANGED_ON_DT,Target Definition,W_BOM_HEADER_DS,CHANGED_ON_DT,,,,,,
1,1,SDE_ORA_BOMHeaderDimension,Mapplet,mplt_SA_ORA_BOMHeaderDimension_Primary,,EXT_BOM_NUMBER,Target Definition,W_BOM_HEADER_DS,BOM_NUMBER,,,,,,
1,1,SDE_ORA_BOMHeaderDimension,Mapplet,mplt_SA_ORA_BOMHeaderDimension_Primary,,EXT_BOM_TYPE_CODE,Target Definition,W_BOM_HEADER_DS,BOM_TYPE_CODE,,,,,,
1,1,SDE_ORA_BOMHeaderDimension,Mapplet,mplt_SA_ORA_BOMHeaderDimension_Primary,,EXT_BOM_TYPE_DESC,Target Definition,W_BOM_HEADER_DS,BOM_TYPE_NAME,,,,,,
1,1,SDE_ORA_BOMHeaderDimension,Mapplet,mplt_SA_ORA_BOMHeaderDimension_Primary,,EXT_BOM_CATEGORY_DESC,Target Definition,W_BOM_HEADER_DS,BOM_CATEGORY_NAME,,,,,,
1,1,SDE_ORA_BOMHeaderDimension,Mapplet,mplt_SA_ORA_BOMHeaderDimension_Primary,,EXT_BOM_VERSION,Target Definition,W_BOM_HEADER_DS,BOM_VERSION,,,,,,
1,1,SDE_ORA_BOMHeaderDimension,Mapplet,mplt_SA_ORA_BOMHeaderDimension_Primary,,EXT_BASE_UOM,Target Definition,W_BOM_HEADER_DS,BASE_UOM_CODE,,,,,,
1,1,SDE_ORA_BOMHeaderDimension,Mapplet,mplt_SA_ORA_BOMHeaderDimension_Primary,,EXT_BASE_QTY,Target Definition,W_BOM_HEADER_DS,BASE_QTY,,,,,,
1,1,SDE_ORA_BOMHeaderDimension,Mapplet,mplt_SA_ORA_BOMHeaderDimension_Primary,,EXT_DELETE_FLAG,Target Definition,W_BOM_HEADER_DS,DELETE_FLG,,,,,,
1,1,SDE_ORA_BOMHeaderDimension,Mapplet,mplt_SA_ORA_BOMHeaderDimension_Primary,,EXT_INTEGRATION_ID,Target Definition,W_BOM_HEADER_DS,INTEGRATION_ID,,,,,,
1,1,SDE_ORA_BOMHeaderDimension,Mapplet,mplt_SA_ORA_BOMHeaderDimension_Primary,,EXT_DATASOURCE_NUM_ID,Target Definition,W_BOM_HEADER_DS,DATASOURCE_NUM_ID,,,,,,
1,1,SDE_ORA_BOMHeaderDimension,Mapplet,mplt_SA_ORA_BOMHeaderDimension_Primary,,EXT_AUX1_CHANGED_ON_DT,Target Definition,W_BOM_HEADER_DS,AUX1_CHANGED_ON_DT,,,,,,
1,1,SDE_ORA_BOMHeaderDimension,Mapplet,mplt_SA_ORA_BOMHeaderDimension_Primary,,EXT_AUX2_CHANGED_ON_DT,Target Definition,W_BOM_HEADER_DS,AUX2_CHANGED_ON_DT,,,,,,
1,1,SDE_ORA_BOMHeaderDimension,Mapplet,mplt_SA_ORA_BOMHeaderDimension_Primary,,EXT_AUX3_CHANGED_ON_DT,Target Definition,W_BOM_HEADER_DS,AUX3_CHANGED_ON_DT,,,,,,
1,1,SDE_ORA_BOMHeaderDimension,Mapplet,mplt_SA_ORA_BOMHeaderDimension_Primary,,EXT_AUX4_CHANGED_ON_DT,Target Definition,W_BOM_HEADER_DS,AUX4_CHANGED_ON_DT,,,,,,
1,1,SDE_ORA_BOMHeaderDimension,Mapplet,mplt_SA_ORA_BOMHeaderDimension_Primary,,EXT_TENANT_ID,Target Definition,W_BOM_HEADER_DS,TENANT_ID,,,,,,
1,1,SDE_ORA_BOMHeaderDimension,Mapplet,mplt_SA_ORA_BOMHeaderDimension_Primary,,EXT_EFF_FROM_DT,Target Definition,W_BOM_HEADER_DS,SRC_EFF_FROM_DT,,,,,,
1,1,SDE_ORA_BOMHeaderDimension,Mapplet,mplt_SA_ORA_BOMHeaderDimension_Primary,,EXT_EFF_TO_DT,Target Definition,W_BOM_HEADER_DS,SRC_EFF_TO_DT,,,,,,
1,1,SDE_ORA_BOMHeaderDimension,Mapplet,mplt_SA_ORA_BOMHeaderDimension_Primary,,EXT_BOM_CATETORY_CODE,Target Definition,W_BOM_HEADER_DS,BOM_CATEGORY_CODE,,,,,,
1,1,SDE_ORA_BOMHeaderDimension,Mapplet,mplt_SA_ORA_BOMHeaderDimension_Primary,,EXT_ACTIVE_FLAG,Target Definition,W_BOM_HEADER_DS,ACTIVE_FLG,,,,,,
1,1,SDE_ORA_BOMHeaderDimension,Mapplet,mplt_SA_ORA_BOMHeaderDimension_Primary,,EXT_ALTERNATE_BOM_DESIGNATOR,Target Definition,W_BOM_HEADER_DS,ALTERNATE_BOM_DESIGNATOR,,,,,,
1,1,SDE_ORA_BOMHeaderDimension,Mapplet,mplt_SA_ORA_BOMHeaderDimension_Primary,,EXT_EXPLOSION_DT,Target Definition,W_BOM_HEADER_DS,EXPLOSION_DT,,,,,,
1,1,SDE_ORA_BOMHeaderDimension,Mapplet,mplt_SA_ORA_BOMHeaderDimension_Primary,,EXT_PARTITION_ID,Target Definition,W_BOM_HEADER_DS,PARTITION_ID,,,,,,
1,1,SDE_ORA_BOMHeaderDimension,Expression,X_CUSTOM,,X_CUSTOM,Target Definition,W_BOM_HEADER_DS,X_CUSTOM,INPUT/OUTPUT,DIRECT MAP,,,,
2,1,SIL_APTermsDimension,Source Definition,W_AP_TERMS_DS,OLAP,CREATED_ON_DT,Source Qualifier,Sq_W_AP_TERMS_DS,CREATED_ON_DT,,,,,,
2,1,SIL_APTermsDimension,Source Definition,W_AP_TERMS_DS,OLAP,CHANGED_ON_DT,Source Qualifier,Sq_W_AP_TERMS_DS,CHANGED_ON_DT,,,,,,
2,1,SIL_APTermsDimension,Source Definition,W_AP_TERMS_DS,OLAP,AUX1_CHANGED_ON_DT,Source Qualifier,Sq_W_AP_TERMS_DS,AUX1_CHANGED_ON_DT,,,,,,
2,1,SIL_APTermsDimension,Source Definition,W_AP_TERMS_DS,OLAP,DELETE_FLG,Source Qualifier,Sq_W_AP_TERMS_DS,DELETE_FLG,,,,,,
2,1,SIL_APTermsDimension,Source Definition,W_AP_TERMS_DS,OLAP,INTEGRATION_ID,Source Qualifier,Sq_W_AP_TERMS_DS,INTEGRATION_ID,,,,,,
2,1,SIL_APTermsDimension,Source Definition,W_AP_TERMS_DS,OLAP,DATASOURCE_NUM_ID,Source Qualifier,Sq_W_AP_TERMS_DS,DATASOURCE_NUM_ID,,,,,,
2,1,SIL_APTermsDimension,Source Definition,W_AP_TERMS_DS,OLAP,SRC_EFF_FROM_DT,Source Qualifier,Sq_W_AP_TERMS_DS,SRC_EFF_FROM_DT,,,,,,
2,1,SIL_APTermsDimension,Source Definition,W_AP_TERMS_DS,OLAP,SRC_EFF_TO_DT,Source Qualifier,Sq_W_AP_TERMS_DS,SRC_EFF_TO_DT,,,,,,
2,1,SIL_APTermsDimension,Source Definition,W_AP_TERMS_DS,OLAP,X_CUSTOM,Source Qualifier,Sq_W_AP_TERMS_DS,X_CUSTOM,,,,,,
2,1,SIL_APTermsDimension,Source Definition,W_AP_TERMS_DS,OLAP,AUX2_CHANGED_ON_DT,Source Qualifier,Sq_W_AP_TERMS_DS,AUX2_CHANGED_ON_DT,,,,,,
2,1,SIL_APTermsDimension,Source Definition,W_AP_TERMS_DS,OLAP,AUX3_CHANGED_ON_DT,Source Qualifier,Sq_W_AP_TERMS_DS,AUX3_CHANGED_ON_DT,,,,,,
2,1,SIL_APTermsDimension,Source Definition,W_AP_TERMS_DS,OLAP,AUX4_CHANGED_ON_DT,Source Qualifier,Sq_W_AP_TERMS_DS,AUX4_CHANGED_ON_DT,,,,,,
2,1,SIL_APTermsDimension,Source Definition,W_AP_TERMS_DS,OLAP,CREATED_BY_ID,Source Qualifier,Sq_W_AP_TERMS_DS,CREATED_BY_ID,,,,,,
2,1,SIL_APTermsDimension,Source Definition,W_AP_TERMS_DS,OLAP,CHANGED_BY_ID,Source Qualifier,Sq_W_AP_TERMS_DS,CHANGED_BY_ID,,,,,,
2,1,SIL_APTermsDimension,Source Definition,W_AP_TERMS_DS,OLAP,TENANT_ID,Source Qualifier,Sq_W_AP_TERMS_DS,TENANT_ID,,,,,,
2,1,SIL_APTermsDimension,Source Definition,W_AP_TERMS_DS,OLAP,AP_TERM_CODE,Source Qualifier,Sq_W_AP_TERMS_DS,AP_TERM_CODE,,,,,,
2,1,SIL_APTermsDimension,Source Definition,W_AP_TERMS_DS,OLAP,AP_TERM_NAME,Source Qualifier,Sq_W_AP_TERMS_DS,AP_TERM_NAME,,,,,,
2,1,SIL_APTermsDimension,Source Definition,W_AP_TERMS_DS,OLAP,AP_TERM_DESC,Source Qualifier,Sq_W_AP_TERMS_DS,AP_TERM_DESC,,,,,,
2,1,SIL_APTermsDimension,Source Definition,W_AP_TERMS_DS,OLAP,AP_TERM_DURATION,Source Qualifier,Sq_W_AP_TERMS_DS,AP_TERM_DURATION,,,,,,
2,1,SIL_APTermsDimension,Source Definition,W_AP_TERMS_DS,OLAP,DAY_LIMIT,Source Qualifier,Sq_W_AP_TERMS_DS,DAY_LIMIT,,,,,,
2,1,SIL_APTermsDimension,Source Definition,W_AP_TERMS_DS,OLAP,CONDITION_1_TEXT,Source Qualifier,Sq_W_AP_TERMS_DS,CONDITION_1_TEXT,,,,,,
2,1,SIL_APTermsDimension,Source Definition,W_AP_TERMS_DS,OLAP,CONDITION_2_TEXT,Source Qualifier,Sq_W_AP_TERMS_DS,CONDITION_2_TEXT,,,,,,
2,1,SIL_APTermsDimension,Source Definition,W_AP_TERMS_DS,OLAP,CONDITION_3_TEXT,Source Qualifier,Sq_W_AP_TERMS_DS,CONDITION_3_TEXT,,,,,,
2,1,SIL_APTermsDimension,Source Definition,W_AP_TERMS_DS,OLAP,CONDITION_4_TEXT,Source Qualifier,Sq_W_AP_TERMS_DS,CONDITION_4_TEXT,,,,,,
2,1,SIL_APTermsDimension,Source Definition,W_AP_TERMS_DS,OLAP,CONDITION_5_TEXT,Source Qualifier,Sq_W_AP_TERMS_DS,CONDITION_5_TEXT,,,,,,
2,1,SIL_APTermsDimension,Source Definition,W_AP_TERMS_DS,OLAP,CONDITION_6_TEXT,Source Qualifier,Sq_W_AP_TERMS_DS,CONDITION_6_TEXT,,,,,,
2,1,SIL_APTermsDimension,Source Definition,W_AP_TERMS_DS,OLAP,CONDITION_7_TEXT,Source Qualifier,Sq_W_AP_TERMS_DS,CONDITION_7_TEXT,,,,,,
2,1,SIL_APTermsDimension,Source Definition,W_AP_TERMS_DS,OLAP,CONDITION_8_TEXT,Source Qualifier,Sq_W_AP_TERMS_DS,CONDITION_8_TEXT,,,,,,
2,1,SIL_APTermsDimension,Source Definition,W_AP_TERMS_DS,OLAP,CONDITION_9_TEXT,Source Qualifier,Sq_W_AP_TERMS_DS,CONDITION_9_TEXT,,,,,,
2,1,SIL_APTermsDimension,Source Definition,W_AP_TERMS_DS,OLAP,CONDITION_10_TEXT,Source Qualifier,Sq_W_AP_TERMS_DS,CONDITION_10_TEXT,,,,,,
2,1,SIL_APTermsDimension,Source Definition,W_AP_TERMS_DS,OLAP,ACTIVE_FLG,Source Qualifier,Sq_W_AP_TERMS_DS,ACTIVE_FLG,,,,,,
2,1,SIL_APTermsDimension,Source Definition,W_AP_TERMS_DS,OLAP,SET_ID,Source Qualifier,Sq_W_AP_TERMS_DS,SET_ID,,,,,,
2,1,SIL_APTermsDimension,Source Qualifier,Sq_W_AP_TERMS_DS,,INTEGRATION_ID,Mapplet,mplt_Get_Etl_Proc_Wid,INTEGRATION_ID,,,,,,
2,1,SIL_APTermsDimension,Source Qualifier,Sq_W_AP_TERMS_DS,,INTEGRATION_ID,Lookup Procedure,Lkp_W_AP_TERMS_D,IN_INTEGRATION_ID,,,"SELECT 
TARGET_TABLE.ROW_WID as ROW_WID, 
TARGET_TABLE.CHANGED_ON_DT as CHANGED_ON_DT, 
TARGET_TABLE.AUX1_CHANGED_ON_DT as AUX1_CHANGED_ON_DT, 
TARGET_TABLE.AUX2_CHANGED_ON_DT as AUX2_CHANGED_ON_DT, 
TARGET_TABLE.AUX3_CHANGED_ON_DT as AUX3_CHANGED_ON_DT, 
TARGET_TABLE.AUX4_CHANGED_ON_DT as AUX4_CHANGED_ON_DT, 
TARGET_TABLE.ACTIVE_FLG as ACTIVE_FLG, 
TARGET_TABLE.ETL_PROC_WID as ETL_PROC_WID, 
TARGET_TABLE.W_INSERT_DT as W_INSERT_DT, 
TARGET_TABLE.EFFECTIVE_FROM_DT as EFFECTIVE_FROM_DT, 
TARGET_TABLE.EFFECTIVE_TO_DT as EFFECTIVE_TO_DT, 
TARGET_TABLE.DELETE_FLG as DELETE_FLG,
TARGET_TABLE.CURRENT_FLG as CURRENT_FLG, 
TARGET_TABLE.DATASOURCE_NUM_ID as DATASOURCE_NUM_ID, 
TARGET_TABLE.INTEGRATION_ID as INTEGRATION_ID, 
TARGET_TABLE.SRC_EFF_FROM_DT as SRC_EFF_FROM_DT 
FROM 
W_AP_TERMS_DS STAGE_TABLE, W_AP_TERMS_D TARGET_TABLE 
WHERE(
CASE
WHEN TARGET_TABLE.SRC_EFF_FROM_DT = $$LOW_DATE
THEN 'Y'
ELSE TARGET_TABLE.CURRENT_FLG
END) = TARGET_TABLE.CURRENT_FLG AND
STAGE_TABLE.DATASOURCE_NUM_ID = TARGET_TABLE.DATASOURCE_NUM_ID AND
STAGE_TABLE.INTEGRATION_ID = TARGET_TABLE.INTEGRATION_ID AND
STAGE_TABLE.SRC_EFF_FROM_DT = TARGET_TABLE.SRC_EFF_FROM_DT
ORDER BY
TARGET_TABLE.DATASOURCE_NUM_ID, 
TARGET_TABLE.INTEGRATION_ID, 
TARGET_TABLE.SRC_EFF_FROM_DT --",,,
2,1,SIL_APTermsDimension,Source Qualifier,Sq_W_AP_TERMS_DS,,DATASOURCE_NUM_ID,Lookup Procedure,Lkp_W_AP_TERMS_D,IN_DATASOURCE_NUM_ID,,,"SELECT 
TARGET_TABLE.ROW_WID as ROW_WID, 
TARGET_TABLE.CHANGED_ON_DT as CHANGED_ON_DT, 
TARGET_TABLE.AUX1_CHANGED_ON_DT as AUX1_CHANGED_ON_DT, 
TARGET_TABLE.AUX2_CHANGED_ON_DT as AUX2_CHANGED_ON_DT, 
TARGET_TABLE.AUX3_CHANGED_ON_DT as AUX3_CHANGED_ON_DT, 
TARGET_TABLE.AUX4_CHANGED_ON_DT as AUX4_CHANGED_ON_DT, 
TARGET_TABLE.ACTIVE_FLG as ACTIVE_FLG, 
TARGET_TABLE.ETL_PROC_WID as ETL_PROC_WID, 
TARGET_TABLE.W_INSERT_DT as W_INSERT_DT, 
TARGET_TABLE.EFFECTIVE_FROM_DT as EFFECTIVE_FROM_DT, 
TARGET_TABLE.EFFECTIVE_TO_DT as EFFECTIVE_TO_DT, 
TARGET_TABLE.DELETE_FLG as DELETE_FLG,
TARGET_TABLE.CURRENT_FLG as CURRENT_FLG, 
TARGET_TABLE.DATASOURCE_NUM_ID as DATASOURCE_NUM_ID, 
TARGET_TABLE.INTEGRATION_ID as INTEGRATION_ID, 
TARGET_TABLE.SRC_EFF_FROM_DT as SRC_EFF_FROM_DT 
FROM 
W_AP_TERMS_DS STAGE_TABLE, W_AP_TERMS_D TARGET_TABLE 
WHERE(
CASE
WHEN TARGET_TABLE.SRC_EFF_FROM_DT = $$LOW_DATE
THEN 'Y'
ELSE TARGET_TABLE.CURRENT_FLG
END) = TARGET_TABLE.CURRENT_FLG AND
STAGE_TABLE.DATASOURCE_NUM_ID = TARGET_TABLE.DATASOURCE_NUM_ID AND
STAGE_TABLE.INTEGRATION_ID = TARGET_TABLE.INTEGRATION_ID AND
STAGE_TABLE.SRC_EFF_FROM_DT = TARGET_TABLE.SRC_EFF_FROM_DT
ORDER BY
TARGET_TABLE.DATASOURCE_NUM_ID, 
TARGET_TABLE.INTEGRATION_ID, 
TARGET_TABLE.SRC_EFF_FROM_DT --",,,
2,1,SIL_APTermsDimension,Source Qualifier,Sq_W_AP_TERMS_DS,,SRC_EFF_FROM_DT,Lookup Procedure,Lkp_W_AP_TERMS_D,IN_SRC_EFF_FROM_DT,,,"SELECT 
TARGET_TABLE.ROW_WID as ROW_WID, 
TARGET_TABLE.CHANGED_ON_DT as CHANGED_ON_DT, 
TARGET_TABLE.AUX1_CHANGED_ON_DT as AUX1_CHANGED_ON_DT, 
TARGET_TABLE.AUX2_CHANGED_ON_DT as AUX2_CHANGED_ON_DT, 
TARGET_TABLE.AUX3_CHANGED_ON_DT as AUX3_CHANGED_ON_DT, 
TARGET_TABLE.AUX4_CHANGED_ON_DT as AUX4_CHANGED_ON_DT, 
TARGET_TABLE.ACTIVE_FLG as ACTIVE_FLG, 
TARGET_TABLE.ETL_PROC_WID as ETL_PROC_WID, 
TARGET_TABLE.W_INSERT_DT as W_INSERT_DT, 
TARGET_TABLE.EFFECTIVE_FROM_DT as EFFECTIVE_FROM_DT, 
TARGET_TABLE.EFFECTIVE_TO_DT as EFFECTIVE_TO_DT, 
TARGET_TABLE.DELETE_FLG as DELETE_FLG,
TARGET_TABLE.CURRENT_FLG as CURRENT_FLG, 
TARGET_TABLE.DATASOURCE_NUM_ID as DATASOURCE_NUM_ID, 
TARGET_TABLE.INTEGRATION_ID as INTEGRATION_ID, 
TARGET_TABLE.SRC_EFF_FROM_DT as SRC_EFF_FROM_DT 
FROM 
W_AP_TERMS_DS STAGE_TABLE, W_AP_TERMS_D TARGET_TABLE 
WHERE(
CASE
WHEN TARGET_TABLE.SRC_EFF_FROM_DT = $$LOW_DATE
THEN 'Y'
ELSE TARGET_TABLE.CURRENT_FLG
END) = TARGET_TABLE.CURRENT_FLG AND
STAGE_TABLE.DATASOURCE_NUM_ID = TARGET_TABLE.DATASOURCE_NUM_ID AND
STAGE_TABLE.INTEGRATION_ID = TARGET_TABLE.INTEGRATION_ID AND
STAGE_TABLE.SRC_EFF_FROM_DT = TARGET_TABLE.SRC_EFF_FROM_DT
ORDER BY
TARGET_TABLE.DATASOURCE_NUM_ID, 
TARGET_TABLE.INTEGRATION_ID, 
TARGET_TABLE.SRC_EFF_FROM_DT --",,,
2,1,SIL_APTermsDimension,Source Qualifier,Sq_W_AP_TERMS_DS,,DATASOURCE_NUM_ID,Mapplet,mplt_SIL_APTermsDimension_CodeLookup,DATASOURCE_NUM_ID,,,,,,
2,1,SIL_APTermsDimension,Source Qualifier,Sq_W_AP_TERMS_DS,,AP_TERM_CODE,Mapplet,mplt_SIL_APTermsDimension_CodeLookup,AP_TERM_CODE,,,,,,
2,1,SIL_APTermsDimension,Source Qualifier,Sq_W_AP_TERMS_DS,,AP_TERM_NAME,Mapplet,mplt_SIL_APTermsDimension_CodeLookup,AP_TERM_NAME,,,,,,
2,1,SIL_APTermsDimension,Mapplet,mplt_Get_Etl_Proc_Wid,,ETL_PROC_WID,Expression,Exp_W_AP_TERMS_D_Update_Flg,ETL_PROC_WID,,,,,,
2,1,SIL_APTermsDimension,Mapplet,mplt_SIL_APTermsDimension_CodeLookup,,EXT_AP_TERM_CODE,Expression,Exp_W_AP_TERMS_D_Update_Flg,AP_TERM_CODE,,,,,,
2,1,SIL_APTermsDimension,Mapplet,mplt_SIL_APTermsDimension_CodeLookup,,EXT_AP_TERM_NAME,Expression,Exp_W_AP_TERMS_D_Update_Flg,AP_TERM_NAME,,,,,,
2,1,SIL_APTermsDimension,Source Qualifier,Sq_W_AP_TERMS_DS,,CREATED_BY_ID,Expression,Exp_W_AP_TERMS_D_Update_Flg,CREATED_BY_ID,,,,,,
2,1,SIL_APTermsDimension,Source Qualifier,Sq_W_AP_TERMS_DS,,CHANGED_BY_ID,Expression,Exp_W_AP_TERMS_D_Update_Flg,CHANGED_BY_ID,,,,,,
2,1,SIL_APTermsDimension,Source Qualifier,Sq_W_AP_TERMS_DS,,CREATED_ON_DT,Expression,Exp_W_AP_TERMS_D_Update_Flg,CREATED_ON_DT,,,,,,
2,1,SIL_APTermsDimension,Source Qualifier,Sq_W_AP_TERMS_DS,,CHANGED_ON_DT,Expression,Exp_W_AP_TERMS_D_Update_Flg,CHANGED_ON_DT,,,,,,
2,1,SIL_APTermsDimension,Source Qualifier,Sq_W_AP_TERMS_DS,,AUX1_CHANGED_ON_DT,Expression,Exp_W_AP_TERMS_D_Update_Flg,AUX1_CHANGED_ON_DT,,,,,,
2,1,SIL_APTermsDimension,Source Qualifier,Sq_W_AP_TERMS_DS,,AUX2_CHANGED_ON_DT,Expression,Exp_W_AP_TERMS_D_Update_Flg,AUX2_CHANGED_ON_DT,,,,,,
2,1,SIL_APTermsDimension,Source Qualifier,Sq_W_AP_TERMS_DS,,AUX3_CHANGED_ON_DT,Expression,Exp_W_AP_TERMS_D_Update_Flg,AUX3_CHANGED_ON_DT,,,,,,
2,1,SIL_APTermsDimension,Source Qualifier,Sq_W_AP_TERMS_DS,,AUX4_CHANGED_ON_DT,Expression,Exp_W_AP_TERMS_D_Update_Flg,AUX4_CHANGED_ON_DT,,,,,,
2,1,SIL_APTermsDimension,Source Qualifier,Sq_W_AP_TERMS_DS,,DELETE_FLG,Expression,Exp_W_AP_TERMS_D_Update_Flg,DELETE_FLG,,,,,,
2,1,SIL_APTermsDimension,Source Qualifier,Sq_W_AP_TERMS_DS,,INTEGRATION_ID,Expression,Exp_W_AP_TERMS_D_Update_Flg,INTEGRATION_ID,,,,,,
2,1,SIL_APTermsDimension,Source Qualifier,Sq_W_AP_TERMS_DS,,DATASOURCE_NUM_ID,Expression,Exp_W_AP_TERMS_D_Update_Flg,DATASOURCE_NUM_ID,,,,,,
2,1,SIL_APTermsDimension,Source Qualifier,Sq_W_AP_TERMS_DS,,SRC_EFF_FROM_DT,Expression,Exp_W_AP_TERMS_D_Update_Flg,SRC_EFF_FROM_DT,,,,,,
2,1,SIL_APTermsDimension,Source Qualifier,Sq_W_AP_TERMS_DS,,SRC_EFF_TO_DT,Expression,Exp_W_AP_TERMS_D_Update_Flg,SRC_EFF_TO_DT,,,,,,
2,1,SIL_APTermsDimension,Source Qualifier,Sq_W_AP_TERMS_DS,,TENANT_ID,Expression,Exp_W_AP_TERMS_D_Update_Flg,TENANT_ID,,,,,,
2,1,SIL_APTermsDimension,Source Qualifier,Sq_W_AP_TERMS_DS,,AP_TERM_DESC,Expression,Exp_W_AP_TERMS_D_Update_Flg,AP_TERM_DESC,,,,,,
2,1,SIL_APTermsDimension,Source Qualifier,Sq_W_AP_TERMS_DS,,AP_TERM_DURATION,Expression,Exp_W_AP_TERMS_D_Update_Flg,AP_TERM_DURATION,,,,,,
2,1,SIL_APTermsDimension,Source Qualifier,Sq_W_AP_TERMS_DS,,DAY_LIMIT,Expression,Exp_W_AP_TERMS_D_Update_Flg,DAY_LIMIT,,,,,,
2,1,SIL_APTermsDimension,Source Qualifier,Sq_W_AP_TERMS_DS,,CONDITION_1_TEXT,Expression,Exp_W_AP_TERMS_D_Update_Flg,CONDITION_1_TEXT,,,,,,
2,1,SIL_APTermsDimension,Source Qualifier,Sq_W_AP_TERMS_DS,,CONDITION_2_TEXT,Expression,Exp_W_AP_TERMS_D_Update_Flg,CONDITION_2_TEXT,,,,,,
2,1,SIL_APTermsDimension,Source Qualifier,Sq_W_AP_TERMS_DS,,CONDITION_3_TEXT,Expression,Exp_W_AP_TERMS_D_Update_Flg,CONDITION_3_TEXT,,,,,,
2,1,SIL_APTermsDimension,Source Qualifier,Sq_W_AP_TERMS_DS,,CONDITION_4_TEXT,Expression,Exp_W_AP_TERMS_D_Update_Flg,CONDITION_4_TEXT,,,,,,
2,1,SIL_APTermsDimension,Source Qualifier,Sq_W_AP_TERMS_DS,,CONDITION_5_TEXT,Expression,Exp_W_AP_TERMS_D_Update_Flg,CONDITION_5_TEXT,,,,,,
2,1,SIL_APTermsDimension,Source Qualifier,Sq_W_AP_TERMS_DS,,CONDITION_6_TEXT,Expression,Exp_W_AP_TERMS_D_Update_Flg,CONDITION_6_TEXT,,,,,,
2,1,SIL_APTermsDimension,Source Qualifier,Sq_W_AP_TERMS_DS,,CONDITION_7_TEXT,Expression,Exp_W_AP_TERMS_D_Update_Flg,CONDITION_7_TEXT,,,,,,
2,1,SIL_APTermsDimension,Source Qualifier,Sq_W_AP_TERMS_DS,,CONDITION_8_TEXT,Expression,Exp_W_AP_TERMS_D_Update_Flg,CONDITION_8_TEXT,,,,,,
2,1,SIL_APTermsDimension,Source Qualifier,Sq_W_AP_TERMS_DS,,CONDITION_9_TEXT,Expression,Exp_W_AP_TERMS_D_Update_Flg,CONDITION_9_TEXT,,,,,,
2,1,SIL_APTermsDimension,Source Qualifier,Sq_W_AP_TERMS_DS,,CONDITION_10_TEXT,Expression,Exp_W_AP_TERMS_D_Update_Flg,CONDITION_10_TEXT,,,,,,
2,1,SIL_APTermsDimension,Source Qualifier,Sq_W_AP_TERMS_DS,,ACTIVE_FLG,Expression,Exp_W_AP_TERMS_D_Update_Flg,ACTIVE_FLG,,,,,,
2,1,SIL_APTermsDimension,Source Qualifier,Sq_W_AP_TERMS_DS,,SET_ID,Expression,Exp_W_AP_TERMS_D_Update_Flg,SET_ID,,,,,,
2,1,SIL_APTermsDimension,Lookup Procedure,Lkp_W_AP_TERMS_D,,CURRENT_FLG,Expression,Exp_W_AP_TERMS_D_Update_Flg,LKP_CURRENT_FLG,,,"SELECT 
TARGET_TABLE.ROW_WID as ROW_WID, 
TARGET_TABLE.CHANGED_ON_DT as CHANGED_ON_DT, 
TARGET_TABLE.AUX1_CHANGED_ON_DT as AUX1_CHANGED_ON_DT, 
TARGET_TABLE.AUX2_CHANGED_ON_DT as AUX2_CHANGED_ON_DT, 
TARGET_TABLE.AUX3_CHANGED_ON_DT as AUX3_CHANGED_ON_DT, 
TARGET_TABLE.AUX4_CHANGED_ON_DT as AUX4_CHANGED_ON_DT, 
TARGET_TABLE.ACTIVE_FLG as ACTIVE_FLG, 
TARGET_TABLE.ETL_PROC_WID as ETL_PROC_WID, 
TARGET_TABLE.W_INSERT_DT as W_INSERT_DT, 
TARGET_TABLE.EFFECTIVE_FROM_DT as EFFECTIVE_FROM_DT, 
TARGET_TABLE.EFFECTIVE_TO_DT as EFFECTIVE_TO_DT, 
TARGET_TABLE.DELETE_FLG as DELETE_FLG,
TARGET_TABLE.CURRENT_FLG as CURRENT_FLG, 
TARGET_TABLE.DATASOURCE_NUM_ID as DATASOURCE_NUM_ID, 
TARGET_TABLE.INTEGRATION_ID as INTEGRATION_ID, 
TARGET_TABLE.SRC_EFF_FROM_DT as SRC_EFF_FROM_DT 
FROM 
W_AP_TERMS_DS STAGE_TABLE, W_AP_TERMS_D TARGET_TABLE 
WHERE(
CASE
WHEN TARGET_TABLE.SRC_EFF_FROM_DT = $$LOW_DATE
THEN 'Y'
ELSE TARGET_TABLE.CURRENT_FLG
END) = TARGET_TABLE.CURRENT_FLG AND
STAGE_TABLE.DATASOURCE_NUM_ID = TARGET_TABLE.DATASOURCE_NUM_ID AND
STAGE_TABLE.INTEGRATION_ID = TARGET_TABLE.INTEGRATION_ID AND
STAGE_TABLE.SRC_EFF_FROM_DT = TARGET_TABLE.SRC_EFF_FROM_DT
ORDER BY
TARGET_TABLE.DATASOURCE_NUM_ID, 
TARGET_TABLE.INTEGRATION_ID, 
TARGET_TABLE.SRC_EFF_FROM_DT --",,DATASOURCE_NUM_ID = IN_DATASOURCE_NUM_ID AND INTEGRATION_ID = IN_INTEGRATION_ID AND SRC_EFF_FROM_DT = IN_SRC_EFF_FROM_DT,
2,1,SIL_APTermsDimension,Lookup Procedure,Lkp_W_AP_TERMS_D,,ROW_WID,Expression,Exp_W_AP_TERMS_D_Update_Flg,LKP_ROW_WID,,,"SELECT 
TARGET_TABLE.ROW_WID as ROW_WID, 
TARGET_TABLE.CHANGED_ON_DT as CHANGED_ON_DT, 
TARGET_TABLE.AUX1_CHANGED_ON_DT as AUX1_CHANGED_ON_DT, 
TARGET_TABLE.AUX2_CHANGED_ON_DT as AUX2_CHANGED_ON_DT, 
TARGET_TABLE.AUX3_CHANGED_ON_DT as AUX3_CHANGED_ON_DT, 
TARGET_TABLE.AUX4_CHANGED_ON_DT as AUX4_CHANGED_ON_DT, 
TARGET_TABLE.ACTIVE_FLG as ACTIVE_FLG, 
TARGET_TABLE.ETL_PROC_WID as ETL_PROC_WID, 
TARGET_TABLE.W_INSERT_DT as W_INSERT_DT, 
TARGET_TABLE.EFFECTIVE_FROM_DT as EFFECTIVE_FROM_DT, 
TARGET_TABLE.EFFECTIVE_TO_DT as EFFECTIVE_TO_DT, 
TARGET_TABLE.DELETE_FLG as DELETE_FLG,
TARGET_TABLE.CURRENT_FLG as CURRENT_FLG, 
TARGET_TABLE.DATASOURCE_NUM_ID as DATASOURCE_NUM_ID, 
TARGET_TABLE.INTEGRATION_ID as INTEGRATION_ID, 
TARGET_TABLE.SRC_EFF_FROM_DT as SRC_EFF_FROM_DT 
FROM 
W_AP_TERMS_DS STAGE_TABLE, W_AP_TERMS_D TARGET_TABLE 
WHERE(
CASE
WHEN TARGET_TABLE.SRC_EFF_FROM_DT = $$LOW_DATE
THEN 'Y'
ELSE TARGET_TABLE.CURRENT_FLG
END) = TARGET_TABLE.CURRENT_FLG AND
STAGE_TABLE.DATASOURCE_NUM_ID = TARGET_TABLE.DATASOURCE_NUM_ID AND
STAGE_TABLE.INTEGRATION_ID = TARGET_TABLE.INTEGRATION_ID AND
STAGE_TABLE.SRC_EFF_FROM_DT = TARGET_TABLE.SRC_EFF_FROM_DT
ORDER BY
TARGET_TABLE.DATASOURCE_NUM_ID, 
TARGET_TABLE.INTEGRATION_ID, 
TARGET_TABLE.SRC_EFF_FROM_DT --",,DATASOURCE_NUM_ID = IN_DATASOURCE_NUM_ID AND INTEGRATION_ID = IN_INTEGRATION_ID AND SRC_EFF_FROM_DT = IN_SRC_EFF_FROM_DT,
2,1,SIL_APTermsDimension,Lookup Procedure,Lkp_W_AP_TERMS_D,,CHANGED_ON_DT,Expression,Exp_W_AP_TERMS_D_Update_Flg,LKP_CHANGED_ON_DT,,,"SELECT 
TARGET_TABLE.ROW_WID as ROW_WID, 
TARGET_TABLE.CHANGED_ON_DT as CHANGED_ON_DT, 
TARGET_TABLE.AUX1_CHANGED_ON_DT as AUX1_CHANGED_ON_DT, 
TARGET_TABLE.AUX2_CHANGED_ON_DT as AUX2_CHANGED_ON_DT, 
TARGET_TABLE.AUX3_CHANGED_ON_DT as AUX3_CHANGED_ON_DT, 
TARGET_TABLE.AUX4_CHANGED_ON_DT as AUX4_CHANGED_ON_DT, 
TARGET_TABLE.ACTIVE_FLG as ACTIVE_FLG, 
TARGET_TABLE.ETL_PROC_WID as ETL_PROC_WID, 
TARGET_TABLE.W_INSERT_DT as W_INSERT_DT, 
TARGET_TABLE.EFFECTIVE_FROM_DT as EFFECTIVE_FROM_DT, 
TARGET_TABLE.EFFECTIVE_TO_DT as EFFECTIVE_TO_DT, 
TARGET_TABLE.DELETE_FLG as DELETE_FLG,
TARGET_TABLE.CURRENT_FLG as CURRENT_FLG, 
TARGET_TABLE.DATASOURCE_NUM_ID as DATASOURCE_NUM_ID, 
TARGET_TABLE.INTEGRATION_ID as INTEGRATION_ID, 
TARGET_TABLE.SRC_EFF_FROM_DT as SRC_EFF_FROM_DT 
FROM 
W_AP_TERMS_DS STAGE_TABLE, W_AP_TERMS_D TARGET_TABLE 
WHERE(
CASE
WHEN TARGET_TABLE.SRC_EFF_FROM_DT = $$LOW_DATE
THEN 'Y'
ELSE TARGET_TABLE.CURRENT_FLG
END) = TARGET_TABLE.CURRENT_FLG AND
STAGE_TABLE.DATASOURCE_NUM_ID = TARGET_TABLE.DATASOURCE_NUM_ID AND
STAGE_TABLE.INTEGRATION_ID = TARGET_TABLE.INTEGRATION_ID AND
STAGE_TABLE.SRC_EFF_FROM_DT = TARGET_TABLE.SRC_EFF_FROM_DT
ORDER BY
TARGET_TABLE.DATASOURCE_NUM_ID, 
TARGET_TABLE.INTEGRATION_ID, 
TARGET_TABLE.SRC_EFF_FROM_DT --",,DATASOURCE_NUM_ID = IN_DATASOURCE_NUM_ID AND INTEGRATION_ID = IN_INTEGRATION_ID AND SRC_EFF_FROM_DT = IN_SRC_EFF_FROM_DT,
2,1,SIL_APTermsDimension,Lookup Procedure,Lkp_W_AP_TERMS_D,,AUX1_CHANGED_ON_DT,Expression,Exp_W_AP_TERMS_D_Update_Flg,LKP_AUX1_CHANGED_ON_DT,,,"SELECT 
TARGET_TABLE.ROW_WID as ROW_WID, 
TARGET_TABLE.CHANGED_ON_DT as CHANGED_ON_DT, 
TARGET_TABLE.AUX1_CHANGED_ON_DT as AUX1_CHANGED_ON_DT, 
TARGET_TABLE.AUX2_CHANGED_ON_DT as AUX2_CHANGED_ON_DT, 
TARGET_TABLE.AUX3_CHANGED_ON_DT as AUX3_CHANGED_ON_DT, 
TARGET_TABLE.AUX4_CHANGED_ON_DT as AUX4_CHANGED_ON_DT, 
TARGET_TABLE.ACTIVE_FLG as ACTIVE_FLG, 
TARGET_TABLE.ETL_PROC_WID as ETL_PROC_WID, 
TARGET_TABLE.W_INSERT_DT as W_INSERT_DT, 
TARGET_TABLE.EFFECTIVE_FROM_DT as EFFECTIVE_FROM_DT, 
TARGET_TABLE.EFFECTIVE_TO_DT as EFFECTIVE_TO_DT, 
TARGET_TABLE.DELETE_FLG as DELETE_FLG,
TARGET_TABLE.CURRENT_FLG as CURRENT_FLG, 
TARGET_TABLE.DATASOURCE_NUM_ID as DATASOURCE_NUM_ID, 
TARGET_TABLE.INTEGRATION_ID as INTEGRATION_ID, 
TARGET_TABLE.SRC_EFF_FROM_DT as SRC_EFF_FROM_DT 
FROM 
W_AP_TERMS_DS STAGE_TABLE, W_AP_TERMS_D TARGET_TABLE 
WHERE(
CASE
WHEN TARGET_TABLE.SRC_EFF_FROM_DT = $$LOW_DATE
THEN 'Y'
ELSE TARGET_TABLE.CURRENT_FLG
END) = TARGET_TABLE.CURRENT_FLG AND
STAGE_TABLE.DATASOURCE_NUM_ID = TARGET_TABLE.DATASOURCE_NUM_ID AND
STAGE_TABLE.INTEGRATION_ID = TARGET_TABLE.INTEGRATION_ID AND
STAGE_TABLE.SRC_EFF_FROM_DT = TARGET_TABLE.SRC_EFF_FROM_DT
ORDER BY
TARGET_TABLE.DATASOURCE_NUM_ID, 
TARGET_TABLE.INTEGRATION_ID, 
TARGET_TABLE.SRC_EFF_FROM_DT --",,DATASOURCE_NUM_ID = IN_DATASOURCE_NUM_ID AND INTEGRATION_ID = IN_INTEGRATION_ID AND SRC_EFF_FROM_DT = IN_SRC_EFF_FROM_DT,
2,1,SIL_APTermsDimension,Lookup Procedure,Lkp_W_AP_TERMS_D,,AUX2_CHANGED_ON_DT,Expression,Exp_W_AP_TERMS_D_Update_Flg,LKP_AUX2_CHANGED_ON_DT,,,"SELECT 
TARGET_TABLE.ROW_WID as ROW_WID, 
TARGET_TABLE.CHANGED_ON_DT as CHANGED_ON_DT, 
TARGET_TABLE.AUX1_CHANGED_ON_DT as AUX1_CHANGED_ON_DT, 
TARGET_TABLE.AUX2_CHANGED_ON_DT as AUX2_CHANGED_ON_DT, 
TARGET_TABLE.AUX3_CHANGED_ON_DT as AUX3_CHANGED_ON_DT, 
TARGET_TABLE.AUX4_CHANGED_ON_DT as AUX4_CHANGED_ON_DT, 
TARGET_TABLE.ACTIVE_FLG as ACTIVE_FLG, 
TARGET_TABLE.ETL_PROC_WID as ETL_PROC_WID, 
TARGET_TABLE.W_INSERT_DT as W_INSERT_DT, 
TARGET_TABLE.EFFECTIVE_FROM_DT as EFFECTIVE_FROM_DT, 
TARGET_TABLE.EFFECTIVE_TO_DT as EFFECTIVE_TO_DT, 
TARGET_TABLE.DELETE_FLG as DELETE_FLG,
TARGET_TABLE.CURRENT_FLG as CURRENT_FLG, 
TARGET_TABLE.DATASOURCE_NUM_ID as DATASOURCE_NUM_ID, 
TARGET_TABLE.INTEGRATION_ID as INTEGRATION_ID, 
TARGET_TABLE.SRC_EFF_FROM_DT as SRC_EFF_FROM_DT 
FROM 
W_AP_TERMS_DS STAGE_TABLE, W_AP_TERMS_D TARGET_TABLE 
WHERE(
CASE
WHEN TARGET_TABLE.SRC_EFF_FROM_DT = $$LOW_DATE
THEN 'Y'
ELSE TARGET_TABLE.CURRENT_FLG
END) = TARGET_TABLE.CURRENT_FLG AND
STAGE_TABLE.DATASOURCE_NUM_ID = TARGET_TABLE.DATASOURCE_NUM_ID AND
STAGE_TABLE.INTEGRATION_ID = TARGET_TABLE.INTEGRATION_ID AND
STAGE_TABLE.SRC_EFF_FROM_DT = TARGET_TABLE.SRC_EFF_FROM_DT
ORDER BY
TARGET_TABLE.DATASOURCE_NUM_ID, 
TARGET_TABLE.INTEGRATION_ID, 
TARGET_TABLE.SRC_EFF_FROM_DT --",,DATASOURCE_NUM_ID = IN_DATASOURCE_NUM_ID AND INTEGRATION_ID = IN_INTEGRATION_ID AND SRC_EFF_FROM_DT = IN_SRC_EFF_FROM_DT,
2,1,SIL_APTermsDimension,Lookup Procedure,Lkp_W_AP_TERMS_D,,AUX3_CHANGED_ON_DT,Expression,Exp_W_AP_TERMS_D_Update_Flg,LKP_AUX3_CHANGED_ON_DT,,,"SELECT 
TARGET_TABLE.ROW_WID as ROW_WID, 
TARGET_TABLE.CHANGED_ON_DT as CHANGED_ON_DT, 
TARGET_TABLE.AUX1_CHANGED_ON_DT as AUX1_CHANGED_ON_DT, 
TARGET_TABLE.AUX2_CHANGED_ON_DT as AUX2_CHANGED_ON_DT, 
TARGET_TABLE.AUX3_CHANGED_ON_DT as AUX3_CHANGED_ON_DT, 
TARGET_TABLE.AUX4_CHANGED_ON_DT as AUX4_CHANGED_ON_DT, 
TARGET_TABLE.ACTIVE_FLG as ACTIVE_FLG, 
TARGET_TABLE.ETL_PROC_WID as ETL_PROC_WID, 
TARGET_TABLE.W_INSERT_DT as W_INSERT_DT, 
TARGET_TABLE.EFFECTIVE_FROM_DT as EFFECTIVE_FROM_DT, 
TARGET_TABLE.EFFECTIVE_TO_DT as EFFECTIVE_TO_DT, 
TARGET_TABLE.DELETE_FLG as DELETE_FLG,
TARGET_TABLE.CURRENT_FLG as CURRENT_FLG, 
TARGET_TABLE.DATASOURCE_NUM_ID as DATASOURCE_NUM_ID, 
TARGET_TABLE.INTEGRATION_ID as INTEGRATION_ID, 
TARGET_TABLE.SRC_EFF_FROM_DT as SRC_EFF_FROM_DT 
FROM 
W_AP_TERMS_DS STAGE_TABLE, W_AP_TERMS_D TARGET_TABLE 
WHERE(
CASE
WHEN TARGET_TABLE.SRC_EFF_FROM_DT = $$LOW_DATE
THEN 'Y'
ELSE TARGET_TABLE.CURRENT_FLG
END) = TARGET_TABLE.CURRENT_FLG AND
STAGE_TABLE.DATASOURCE_NUM_ID = TARGET_TABLE.DATASOURCE_NUM_ID AND
STAGE_TABLE.INTEGRATION_ID = TARGET_TABLE.INTEGRATION_ID AND
STAGE_TABLE.SRC_EFF_FROM_DT = TARGET_TABLE.SRC_EFF_FROM_DT
ORDER BY
TARGET_TABLE.DATASOURCE_NUM_ID, 
TARGET_TABLE.INTEGRATION_ID, 
TARGET_TABLE.SRC_EFF_FROM_DT --",,DATASOURCE_NUM_ID = IN_DATASOURCE_NUM_ID AND INTEGRATION_ID = IN_INTEGRATION_ID AND SRC_EFF_FROM_DT = IN_SRC_EFF_FROM_DT,
2,1,SIL_APTermsDimension,Lookup Procedure,Lkp_W_AP_TERMS_D,,AUX4_CHANGED_ON_DT,Expression,Exp_W_AP_TERMS_D_Update_Flg,LKP_AUX4_CHANGED_ON_DT,,,"SELECT 
TARGET_TABLE.ROW_WID as ROW_WID, 
TARGET_TABLE.CHANGED_ON_DT as CHANGED_ON_DT, 
TARGET_TABLE.AUX1_CHANGED_ON_DT as AUX1_CHANGED_ON_DT, 
TARGET_TABLE.AUX2_CHANGED_ON_DT as AUX2_CHANGED_ON_DT, 
TARGET_TABLE.AUX3_CHANGED_ON_DT as AUX3_CHANGED_ON_DT, 
TARGET_TABLE.AUX4_CHANGED_ON_DT as AUX4_CHANGED_ON_DT, 
TARGET_TABLE.ACTIVE_FLG as ACTIVE_FLG, 
TARGET_TABLE.ETL_PROC_WID as ETL_PROC_WID, 
TARGET_TABLE.W_INSERT_DT as W_INSERT_DT, 
TARGET_TABLE.EFFECTIVE_FROM_DT as EFFECTIVE_FROM_DT, 
TARGET_TABLE.EFFECTIVE_TO_DT as EFFECTIVE_TO_DT, 
TARGET_TABLE.DELETE_FLG as DELETE_FLG,
TARGET_TABLE.CURRENT_FLG as CURRENT_FLG, 
TARGET_TABLE.DATASOURCE_NUM_ID as DATASOURCE_NUM_ID, 
TARGET_TABLE.INTEGRATION_ID as INTEGRATION_ID, 
TARGET_TABLE.SRC_EFF_FROM_DT as SRC_EFF_FROM_DT 
FROM 
W_AP_TERMS_DS STAGE_TABLE, W_AP_TERMS_D TARGET_TABLE 
WHERE(
CASE
WHEN TARGET_TABLE.SRC_EFF_FROM_DT = $$LOW_DATE
THEN 'Y'
ELSE TARGET_TABLE.CURRENT_FLG
END) = TARGET_TABLE.CURRENT_FLG AND
STAGE_TABLE.DATASOURCE_NUM_ID = TARGET_TABLE.DATASOURCE_NUM_ID AND
STAGE_TABLE.INTEGRATION_ID = TARGET_TABLE.INTEGRATION_ID AND
STAGE_TABLE.SRC_EFF_FROM_DT = TARGET_TABLE.SRC_EFF_FROM_DT
ORDER BY
TARGET_TABLE.DATASOURCE_NUM_ID, 
TARGET_TABLE.INTEGRATION_ID, 
TARGET_TABLE.SRC_EFF_FROM_DT --",,DATASOURCE_NUM_ID = IN_DATASOURCE_NUM_ID AND INTEGRATION_ID = IN_INTEGRATION_ID AND SRC_EFF_FROM_DT = IN_SRC_EFF_FROM_DT,
2,1,SIL_APTermsDimension,Lookup Procedure,Lkp_W_AP_TERMS_D,,ETL_PROC_WID,Expression,Exp_W_AP_TERMS_D_Update_Flg,LKP_ETL_PROC_WID,,,"SELECT 
TARGET_TABLE.ROW_WID as ROW_WID, 
TARGET_TABLE.CHANGED_ON_DT as CHANGED_ON_DT, 
TARGET_TABLE.AUX1_CHANGED_ON_DT as AUX1_CHANGED_ON_DT, 
TARGET_TABLE.AUX2_CHANGED_ON_DT as AUX2_CHANGED_ON_DT, 
TARGET_TABLE.AUX3_CHANGED_ON_DT as AUX3_CHANGED_ON_DT, 
TARGET_TABLE.AUX4_CHANGED_ON_DT as AUX4_CHANGED_ON_DT, 
TARGET_TABLE.ACTIVE_FLG as ACTIVE_FLG, 
TARGET_TABLE.ETL_PROC_WID as ETL_PROC_WID, 
TARGET_TABLE.W_INSERT_DT as W_INSERT_DT, 
TARGET_TABLE.EFFECTIVE_FROM_DT as EFFECTIVE_FROM_DT, 
TARGET_TABLE.EFFECTIVE_TO_DT as EFFECTIVE_TO_DT, 
TARGET_TABLE.DELETE_FLG as DELETE_FLG,
TARGET_TABLE.CURRENT_FLG as CURRENT_FLG, 
TARGET_TABLE.DATASOURCE_NUM_ID as DATASOURCE_NUM_ID, 
TARGET_TABLE.INTEGRATION_ID as INTEGRATION_ID, 
TARGET_TABLE.SRC_EFF_FROM_DT as SRC_EFF_FROM_DT 
FROM 
W_AP_TERMS_DS STAGE_TABLE, W_AP_TERMS_D TARGET_TABLE 
WHERE(
CASE
WHEN TARGET_TABLE.SRC_EFF_FROM_DT = $$LOW_DATE
THEN 'Y'
ELSE TARGET_TABLE.CURRENT_FLG
END) = TARGET_TABLE.CURRENT_FLG AND
STAGE_TABLE.DATASOURCE_NUM_ID = TARGET_TABLE.DATASOURCE_NUM_ID AND
STAGE_TABLE.INTEGRATION_ID = TARGET_TABLE.INTEGRATION_ID AND
STAGE_TABLE.SRC_EFF_FROM_DT = TARGET_TABLE.SRC_EFF_FROM_DT
ORDER BY
TARGET_TABLE.DATASOURCE_NUM_ID, 
TARGET_TABLE.INTEGRATION_ID, 
TARGET_TABLE.SRC_EFF_FROM_DT --",,DATASOURCE_NUM_ID = IN_DATASOURCE_NUM_ID AND INTEGRATION_ID = IN_INTEGRATION_ID AND SRC_EFF_FROM_DT = IN_SRC_EFF_FROM_DT,
2,1,SIL_APTermsDimension,Lookup Procedure,Lkp_W_AP_TERMS_D,,W_INSERT_DT,Expression,Exp_W_AP_TERMS_D_Update_Flg,LKP_W_INSERT_DT,,,"SELECT 
TARGET_TABLE.ROW_WID as ROW_WID, 
TARGET_TABLE.CHANGED_ON_DT as CHANGED_ON_DT, 
TARGET_TABLE.AUX1_CHANGED_ON_DT as AUX1_CHANGED_ON_DT, 
TARGET_TABLE.AUX2_CHANGED_ON_DT as AUX2_CHANGED_ON_DT, 
TARGET_TABLE.AUX3_CHANGED_ON_DT as AUX3_CHANGED_ON_DT, 
TARGET_TABLE.AUX4_CHANGED_ON_DT as AUX4_CHANGED_ON_DT, 
TARGET_TABLE.ACTIVE_FLG as ACTIVE_FLG, 
TARGET_TABLE.ETL_PROC_WID as ETL_PROC_WID, 
TARGET_TABLE.W_INSERT_DT as W_INSERT_DT, 
TARGET_TABLE.EFFECTIVE_FROM_DT as EFFECTIVE_FROM_DT, 
TARGET_TABLE.EFFECTIVE_TO_DT as EFFECTIVE_TO_DT, 
TARGET_TABLE.DELETE_FLG as DELETE_FLG,
TARGET_TABLE.CURRENT_FLG as CURRENT_FLG, 
TARGET_TABLE.DATASOURCE_NUM_ID as DATASOURCE_NUM_ID, 
TARGET_TABLE.INTEGRATION_ID as INTEGRATION_ID, 
TARGET_TABLE.SRC_EFF_FROM_DT as SRC_EFF_FROM_DT 
FROM 
W_AP_TERMS_DS STAGE_TABLE, W_AP_TERMS_D TARGET_TABLE 
WHERE(
CASE
WHEN TARGET_TABLE.SRC_EFF_FROM_DT = $$LOW_DATE
THEN 'Y'
ELSE TARGET_TABLE.CURRENT_FLG
END) = TARGET_TABLE.CURRENT_FLG AND
STAGE_TABLE.DATASOURCE_NUM_ID = TARGET_TABLE.DATASOURCE_NUM_ID AND
STAGE_TABLE.INTEGRATION_ID = TARGET_TABLE.INTEGRATION_ID AND
STAGE_TABLE.SRC_EFF_FROM_DT = TARGET_TABLE.SRC_EFF_FROM_DT
ORDER BY
TARGET_TABLE.DATASOURCE_NUM_ID, 
TARGET_TABLE.INTEGRATION_ID, 
TARGET_TABLE.SRC_EFF_FROM_DT --",,DATASOURCE_NUM_ID = IN_DATASOURCE_NUM_ID AND INTEGRATION_ID = IN_INTEGRATION_ID AND SRC_EFF_FROM_DT = IN_SRC_EFF_FROM_DT,
2,1,SIL_APTermsDimension,Lookup Procedure,Lkp_W_AP_TERMS_D,,EFFECTIVE_FROM_DT,Expression,Exp_W_AP_TERMS_D_Update_Flg,LKP_EFFECTIVE_FROM_DT,,,"SELECT 
TARGET_TABLE.ROW_WID as ROW_WID, 
TARGET_TABLE.CHANGED_ON_DT as CHANGED_ON_DT, 
TARGET_TABLE.AUX1_CHANGED_ON_DT as AUX1_CHANGED_ON_DT, 
TARGET_TABLE.AUX2_CHANGED_ON_DT as AUX2_CHANGED_ON_DT, 
TARGET_TABLE.AUX3_CHANGED_ON_DT as AUX3_CHANGED_ON_DT, 
TARGET_TABLE.AUX4_CHANGED_ON_DT as AUX4_CHANGED_ON_DT, 
TARGET_TABLE.ACTIVE_FLG as ACTIVE_FLG, 
TARGET_TABLE.ETL_PROC_WID as ETL_PROC_WID, 
TARGET_TABLE.W_INSERT_DT as W_INSERT_DT, 
TARGET_TABLE.EFFECTIVE_FROM_DT as EFFECTIVE_FROM_DT, 
TARGET_TABLE.EFFECTIVE_TO_DT as EFFECTIVE_TO_DT, 
TARGET_TABLE.DELETE_FLG as DELETE_FLG,
TARGET_TABLE.CURRENT_FLG as CURRENT_FLG, 
TARGET_TABLE.DATASOURCE_NUM_ID as DATASOURCE_NUM_ID, 
TARGET_TABLE.INTEGRATION_ID as INTEGRATION_ID, 
TARGET_TABLE.SRC_EFF_FROM_DT as SRC_EFF_FROM_DT 
FROM 
W_AP_TERMS_DS STAGE_TABLE, W_AP_TERMS_D TARGET_TABLE 
WHERE(
CASE
WHEN TARGET_TABLE.SRC_EFF_FROM_DT = $$LOW_DATE
THEN 'Y'
ELSE TARGET_TABLE.CURRENT_FLG
END) = TARGET_TABLE.CURRENT_FLG AND
STAGE_TABLE.DATASOURCE_NUM_ID = TARGET_TABLE.DATASOURCE_NUM_ID AND
STAGE_TABLE.INTEGRATION_ID = TARGET_TABLE.INTEGRATION_ID AND
STAGE_TABLE.SRC_EFF_FROM_DT = TARGET_TABLE.SRC_EFF_FROM_DT
ORDER BY
TARGET_TABLE.DATASOURCE_NUM_ID, 
TARGET_TABLE.INTEGRATION_ID, 
TARGET_TABLE.SRC_EFF_FROM_DT --",,DATASOURCE_NUM_ID = IN_DATASOURCE_NUM_ID AND INTEGRATION_ID = IN_INTEGRATION_ID AND SRC_EFF_FROM_DT = IN_SRC_EFF_FROM_DT,
2,1,SIL_APTermsDimension,Lookup Procedure,Lkp_W_AP_TERMS_D,,EFFECTIVE_TO_DT,Expression,Exp_W_AP_TERMS_D_Update_Flg,LKP_EFFECTIVE_TO_DT,,,"SELECT 
TARGET_TABLE.ROW_WID as ROW_WID, 
TARGET_TABLE.CHANGED_ON_DT as CHANGED_ON_DT, 
TARGET_TABLE.AUX1_CHANGED_ON_DT as AUX1_CHANGED_ON_DT, 
TARGET_TABLE.AUX2_CHANGED_ON_DT as AUX2_CHANGED_ON_DT, 
TARGET_TABLE.AUX3_CHANGED_ON_DT as AUX3_CHANGED_ON_DT, 
TARGET_TABLE.AUX4_CHANGED_ON_DT as AUX4_CHANGED_ON_DT, 
TARGET_TABLE.ACTIVE_FLG as ACTIVE_FLG, 
TARGET_TABLE.ETL_PROC_WID as ETL_PROC_WID, 
TARGET_TABLE.W_INSERT_DT as W_INSERT_DT, 
TARGET_TABLE.EFFECTIVE_FROM_DT as EFFECTIVE_FROM_DT, 
TARGET_TABLE.EFFECTIVE_TO_DT as EFFECTIVE_TO_DT, 
TARGET_TABLE.DELETE_FLG as DELETE_FLG,
TARGET_TABLE.CURRENT_FLG as CURRENT_FLG, 
TARGET_TABLE.DATASOURCE_NUM_ID as DATASOURCE_NUM_ID, 
TARGET_TABLE.INTEGRATION_ID as INTEGRATION_ID, 
TARGET_TABLE.SRC_EFF_FROM_DT as SRC_EFF_FROM_DT 
FROM 
W_AP_TERMS_DS STAGE_TABLE, W_AP_TERMS_D TARGET_TABLE 
WHERE(
CASE
WHEN TARGET_TABLE.SRC_EFF_FROM_DT = $$LOW_DATE
THEN 'Y'
ELSE TARGET_TABLE.CURRENT_FLG
END) = TARGET_TABLE.CURRENT_FLG AND
STAGE_TABLE.DATASOURCE_NUM_ID = TARGET_TABLE.DATASOURCE_NUM_ID AND
STAGE_TABLE.INTEGRATION_ID = TARGET_TABLE.INTEGRATION_ID AND
STAGE_TABLE.SRC_EFF_FROM_DT = TARGET_TABLE.SRC_EFF_FROM_DT
ORDER BY
TARGET_TABLE.DATASOURCE_NUM_ID, 
TARGET_TABLE.INTEGRATION_ID, 
TARGET_TABLE.SRC_EFF_FROM_DT --",,DATASOURCE_NUM_ID = IN_DATASOURCE_NUM_ID AND INTEGRATION_ID = IN_INTEGRATION_ID AND SRC_EFF_FROM_DT = IN_SRC_EFF_FROM_DT,
2,1,SIL_APTermsDimension,Lookup Procedure,Lkp_W_AP_TERMS_D,,DELETE_FLG,Expression,Exp_W_AP_TERMS_D_Update_Flg,LKP_DELETE_FLG,,,"SELECT 
TARGET_TABLE.ROW_WID as ROW_WID, 
TARGET_TABLE.CHANGED_ON_DT as CHANGED_ON_DT, 
TARGET_TABLE.AUX1_CHANGED_ON_DT as AUX1_CHANGED_ON_DT, 
TARGET_TABLE.AUX2_CHANGED_ON_DT as AUX2_CHANGED_ON_DT, 
TARGET_TABLE.AUX3_CHANGED_ON_DT as AUX3_CHANGED_ON_DT, 
TARGET_TABLE.AUX4_CHANGED_ON_DT as AUX4_CHANGED_ON_DT, 
TARGET_TABLE.ACTIVE_FLG as ACTIVE_FLG, 
TARGET_TABLE.ETL_PROC_WID as ETL_PROC_WID, 
TARGET_TABLE.W_INSERT_DT as W_INSERT_DT, 
TARGET_TABLE.EFFECTIVE_FROM_DT as EFFECTIVE_FROM_DT, 
TARGET_TABLE.EFFECTIVE_TO_DT as EFFECTIVE_TO_DT, 
TARGET_TABLE.DELETE_FLG as DELETE_FLG,
TARGET_TABLE.CURRENT_FLG as CURRENT_FLG, 
TARGET_TABLE.DATASOURCE_NUM_ID as DATASOURCE_NUM_ID, 
TARGET_TABLE.INTEGRATION_ID as INTEGRATION_ID, 
TARGET_TABLE.SRC_EFF_FROM_DT as SRC_EFF_FROM_DT 
FROM 
W_AP_TERMS_DS STAGE_TABLE, W_AP_TERMS_D TARGET_TABLE 
WHERE(
CASE
WHEN TARGET_TABLE.SRC_EFF_FROM_DT = $$LOW_DATE
THEN 'Y'
ELSE TARGET_TABLE.CURRENT_FLG
END) = TARGET_TABLE.CURRENT_FLG AND
STAGE_TABLE.DATASOURCE_NUM_ID = TARGET_TABLE.DATASOURCE_NUM_ID AND
STAGE_TABLE.INTEGRATION_ID = TARGET_TABLE.INTEGRATION_ID AND
STAGE_TABLE.SRC_EFF_FROM_DT = TARGET_TABLE.SRC_EFF_FROM_DT
ORDER BY
TARGET_TABLE.DATASOURCE_NUM_ID, 
TARGET_TABLE.INTEGRATION_ID, 
TARGET_TABLE.SRC_EFF_FROM_DT --",,DATASOURCE_NUM_ID = IN_DATASOURCE_NUM_ID AND INTEGRATION_ID = IN_INTEGRATION_ID AND SRC_EFF_FROM_DT = IN_SRC_EFF_FROM_DT,
2,1,SIL_APTermsDimension,Lookup Procedure,Lkp_W_AP_TERMS_D,,ACTIVE_FLG,Expression,Exp_W_AP_TERMS_D_Update_Flg,LKP_ACTIVE_FLG,,,"SELECT 
TARGET_TABLE.ROW_WID as ROW_WID, 
TARGET_TABLE.CHANGED_ON_DT as CHANGED_ON_DT, 
TARGET_TABLE.AUX1_CHANGED_ON_DT as AUX1_CHANGED_ON_DT, 
TARGET_TABLE.AUX2_CHANGED_ON_DT as AUX2_CHANGED_ON_DT, 
TARGET_TABLE.AUX3_CHANGED_ON_DT as AUX3_CHANGED_ON_DT, 
TARGET_TABLE.AUX4_CHANGED_ON_DT as AUX4_CHANGED_ON_DT, 
TARGET_TABLE.ACTIVE_FLG as ACTIVE_FLG, 
TARGET_TABLE.ETL_PROC_WID as ETL_PROC_WID, 
TARGET_TABLE.W_INSERT_DT as W_INSERT_DT, 
TARGET_TABLE.EFFECTIVE_FROM_DT as EFFECTIVE_FROM_DT, 
TARGET_TABLE.EFFECTIVE_TO_DT as EFFECTIVE_TO_DT, 
TARGET_TABLE.DELETE_FLG as DELETE_FLG,
TARGET_TABLE.CURRENT_FLG as CURRENT_FLG, 
TARGET_TABLE.DATASOURCE_NUM_ID as DATASOURCE_NUM_ID, 
TARGET_TABLE.INTEGRATION_ID as INTEGRATION_ID, 
TARGET_TABLE.SRC_EFF_FROM_DT as SRC_EFF_FROM_DT 
FROM 
W_AP_TERMS_DS STAGE_TABLE, W_AP_TERMS_D TARGET_TABLE 
WHERE(
CASE
WHEN TARGET_TABLE.SRC_EFF_FROM_DT = $$LOW_DATE
THEN 'Y'
ELSE TARGET_TABLE.CURRENT_FLG
END) = TARGET_TABLE.CURRENT_FLG AND
STAGE_TABLE.DATASOURCE_NUM_ID = TARGET_TABLE.DATASOURCE_NUM_ID AND
STAGE_TABLE.INTEGRATION_ID = TARGET_TABLE.INTEGRATION_ID AND
STAGE_TABLE.SRC_EFF_FROM_DT = TARGET_TABLE.SRC_EFF_FROM_DT
ORDER BY
TARGET_TABLE.DATASOURCE_NUM_ID, 
TARGET_TABLE.INTEGRATION_ID, 
TARGET_TABLE.SRC_EFF_FROM_DT --",,DATASOURCE_NUM_ID = IN_DATASOURCE_NUM_ID AND INTEGRATION_ID = IN_INTEGRATION_ID AND SRC_EFF_FROM_DT = IN_SRC_EFF_FROM_DT,
2,1,SIL_APTermsDimension,Lookup Procedure,Lkp_W_AP_TERMS_D,,SRC_EFF_FROM_DT,Expression,Exp_W_AP_TERMS_D_Update_Flg,LKP_SRC_EFF_FROM_DT,,,"SELECT 
TARGET_TABLE.ROW_WID as ROW_WID, 
TARGET_TABLE.CHANGED_ON_DT as CHANGED_ON_DT, 
TARGET_TABLE.AUX1_CHANGED_ON_DT as AUX1_CHANGED_ON_DT, 
TARGET_TABLE.AUX2_CHANGED_ON_DT as AUX2_CHANGED_ON_DT, 
TARGET_TABLE.AUX3_CHANGED_ON_DT as AUX3_CHANGED_ON_DT, 
TARGET_TABLE.AUX4_CHANGED_ON_DT as AUX4_CHANGED_ON_DT, 
TARGET_TABLE.ACTIVE_FLG as ACTIVE_FLG, 
TARGET_TABLE.ETL_PROC_WID as ETL_PROC_WID, 
TARGET_TABLE.W_INSERT_DT as W_INSERT_DT, 
TARGET_TABLE.EFFECTIVE_FROM_DT as EFFECTIVE_FROM_DT, 
TARGET_TABLE.EFFECTIVE_TO_DT as EFFECTIVE_TO_DT, 
TARGET_TABLE.DELETE_FLG as DELETE_FLG,
TARGET_TABLE.CURRENT_FLG as CURRENT_FLG, 
TARGET_TABLE.DATASOURCE_NUM_ID as DATASOURCE_NUM_ID, 
TARGET_TABLE.INTEGRATION_ID as INTEGRATION_ID, 
TARGET_TABLE.SRC_EFF_FROM_DT as SRC_EFF_FROM_DT 
FROM 
W_AP_TERMS_DS STAGE_TABLE, W_AP_TERMS_D TARGET_TABLE 
WHERE(
CASE
WHEN TARGET_TABLE.SRC_EFF_FROM_DT = $$LOW_DATE
THEN 'Y'
ELSE TARGET_TABLE.CURRENT_FLG
END) = TARGET_TABLE.CURRENT_FLG AND
STAGE_TABLE.DATASOURCE_NUM_ID = TARGET_TABLE.DATASOURCE_NUM_ID AND
STAGE_TABLE.INTEGRATION_ID = TARGET_TABLE.INTEGRATION_ID AND
STAGE_TABLE.SRC_EFF_FROM_DT = TARGET_TABLE.SRC_EFF_FROM_DT
ORDER BY
TARGET_TABLE.DATASOURCE_NUM_ID, 
TARGET_TABLE.INTEGRATION_ID, 
TARGET_TABLE.SRC_EFF_FROM_DT --",,DATASOURCE_NUM_ID = IN_DATASOURCE_NUM_ID AND INTEGRATION_ID = IN_INTEGRATION_ID AND SRC_EFF_FROM_DT = IN_SRC_EFF_FROM_DT,
2,1,SIL_APTermsDimension,Source Qualifier,Sq_W_AP_TERMS_DS,,X_CUSTOM,Filter,Fil_W_AP_TERMS_D,X_CUSTOM,,,,,,
2,1,SIL_APTermsDimension,Expression,Exp_W_AP_TERMS_D_Update_Flg,,DELETE_FLG,Filter,Fil_W_AP_TERMS_D,DELETE_FLG,INPUT/OUTPUT,DIRECT MAP,,,,
2,1,SIL_APTermsDimension,Expression,Exp_W_AP_TERMS_D_Update_Flg,,INTEGRATION_ID,Filter,Fil_W_AP_TERMS_D,INTEGRATION_ID,INPUT/OUTPUT,DIRECT MAP,,,,
2,1,SIL_APTermsDimension,Expression,Exp_W_AP_TERMS_D_Update_Flg,,DATASOURCE_NUM_ID,Filter,Fil_W_AP_TERMS_D,DATASOURCE_NUM_ID,INPUT/OUTPUT,DIRECT MAP,,,,
2,1,SIL_APTermsDimension,Expression,Exp_W_AP_TERMS_D_Update_Flg,,SRC_EFF_FROM_DT,Filter,Fil_W_AP_TERMS_D,SRC_EFF_FROM_DT,INPUT/OUTPUT,DIRECT MAP,,,,
2,1,SIL_APTermsDimension,Expression,Exp_W_AP_TERMS_D_Update_Flg,,SRC_EFF_TO_DT,Filter,Fil_W_AP_TERMS_D,SRC_EFF_TO_DT,INPUT/OUTPUT,DIRECT MAP,,,,
2,1,SIL_APTermsDimension,Expression,Exp_W_AP_TERMS_D_Update_Flg,,LKP_ROW_WID,Filter,Fil_W_AP_TERMS_D,LKP_ROW_WID,INPUT/OUTPUT,DIRECT MAP,,,,
2,1,SIL_APTermsDimension,Expression,Exp_W_AP_TERMS_D_Update_Flg,,LKP_W_INSERT_DT,Filter,Fil_W_AP_TERMS_D,LKP_W_INSERT_DT,INPUT/OUTPUT,DIRECT MAP,,,,
2,1,SIL_APTermsDimension,Expression,Exp_W_AP_TERMS_D_Update_Flg,,LKP_EFFECTIVE_FROM_DT,Filter,Fil_W_AP_TERMS_D,LKP_EFFECTIVE_FROM_DT,INPUT/OUTPUT,DIRECT MAP,,,,
2,1,SIL_APTermsDimension,Expression,Exp_W_AP_TERMS_D_Update_Flg,,LKP_EFFECTIVE_TO_DT,Filter,Fil_W_AP_TERMS_D,LKP_EFFECTIVE_TO_DT,INPUT/OUTPUT,DIRECT MAP,,,,
2,1,SIL_APTermsDimension,Expression,Exp_W_AP_TERMS_D_Update_Flg,,LKP_DELETE_FLG,Filter,Fil_W_AP_TERMS_D,LKP_DELETE_FLG,INPUT/OUTPUT,DIRECT MAP,,,,
2,1,SIL_APTermsDimension,Expression,Exp_W_AP_TERMS_D_Update_Flg,,UPDATE_FLG,Filter,Fil_W_AP_TERMS_D,UPDATE_FLG,OUTPUT,"IIF(ETL_PROC_WID = LKP_ETL_PROC_WID, 'X', 
IIF(ISNULL(LKP_ETL_PROC_WID), 
IIF(DELETE_FLG = 'Y', 'B', 'I'),
IIF(DELETE_FLG = 'Y', 
IIF(LKP_DELETE_FLG = 'Y', 'X', 'D'),
IIF(LKP_CURRENT_FLG = 'N', IIF(SYSTEMS_COLS_DIFF = 'Y', 'U', 'X'), 
IIF(TYPE2_FLG = 'Y', 
IIF(TYPE2_COLS_DIFF = 'Y', 'S', 
IIF(SYSTEMS_COLS_DIFF = 'Y', 'U', 'X')), 
IIF(SYSTEMS_COLS_DIFF = 'Y', 'U', 'X'))))))",,,,
2,1,SIL_APTermsDimension,Expression,Exp_W_AP_TERMS_D_Update_Flg,,ETL_PROC_WID,Filter,Fil_W_AP_TERMS_D,ETL_PROC_WID,INPUT/OUTPUT,DIRECT MAP,,,,
2,1,SIL_APTermsDimension,Expression,Exp_W_AP_TERMS_D_Update_Flg,,CREATED_BY_ID,Filter,Fil_W_AP_TERMS_D,CREATED_BY_ID,INPUT/OUTPUT,DIRECT MAP,,,,
2,1,SIL_APTermsDimension,Expression,Exp_W_AP_TERMS_D_Update_Flg,,CHANGED_BY_ID,Filter,Fil_W_AP_TERMS_D,CHANGED_BY_ID,INPUT/OUTPUT,DIRECT MAP,,,,
2,1,SIL_APTermsDimension,Expression,Exp_W_AP_TERMS_D_Update_Flg,,CREATED_ON_DT,Filter,Fil_W_AP_TERMS_D,CREATED_ON_DT,INPUT/OUTPUT,DIRECT MAP,,,,
2,1,SIL_APTermsDimension,Expression,Exp_W_AP_TERMS_D_Update_Flg,,CHANGED_ON_DT,Filter,Fil_W_AP_TERMS_D,CHANGED_ON_DT,INPUT/OUTPUT,DIRECT MAP,,,,
2,1,SIL_APTermsDimension,Expression,Exp_W_AP_TERMS_D_Update_Flg,,AUX1_CHANGED_ON_DT,Filter,Fil_W_AP_TERMS_D,AUX1_CHANGED_ON_DT,INPUT/OUTPUT,DIRECT MAP,,,,
2,1,SIL_APTermsDimension,Expression,Exp_W_AP_TERMS_D_Update_Flg,,AUX2_CHANGED_ON_DT,Filter,Fil_W_AP_TERMS_D,AUX2_CHANGED_ON_DT,INPUT/OUTPUT,DIRECT MAP,,,,
2,1,SIL_APTermsDimension,Expression,Exp_W_AP_TERMS_D_Update_Flg,,AUX3_CHANGED_ON_DT,Filter,Fil_W_AP_TERMS_D,AUX3_CHANGED_ON_DT,INPUT/OUTPUT,DIRECT MAP,,,,
2,1,SIL_APTermsDimension,Expression,Exp_W_AP_TERMS_D_Update_Flg,,AUX4_CHANGED_ON_DT,Filter,Fil_W_AP_TERMS_D,AUX4_CHANGED_ON_DT,INPUT/OUTPUT,DIRECT MAP,,,,
2,1,SIL_APTermsDimension,Expression,Exp_W_AP_TERMS_D_Update_Flg,,TENANT_ID,Filter,Fil_W_AP_TERMS_D,TENANT_ID,INPUT/OUTPUT,DIRECT MAP,,,,
2,1,SIL_APTermsDimension,Expression,Exp_W_AP_TERMS_D_Update_Flg,,AP_TERM_CODE,Filter,Fil_W_AP_TERMS_D,AP_TERM_CODE,INPUT/OUTPUT,DIRECT MAP,,,,
2,1,SIL_APTermsDimension,Expression,Exp_W_AP_TERMS_D_Update_Flg,,AP_TERM_NAME,Filter,Fil_W_AP_TERMS_D,AP_TERM_NAME,INPUT/OUTPUT,DIRECT MAP,,,,
2,1,SIL_APTermsDimension,Expression,Exp_W_AP_TERMS_D_Update_Flg,,AP_TERM_DESC,Filter,Fil_W_AP_TERMS_D,AP_TERM_DESC,INPUT/OUTPUT,DIRECT MAP,,,,
2,1,SIL_APTermsDimension,Expression,Exp_W_AP_TERMS_D_Update_Flg,,AP_TERM_DURATION,Filter,Fil_W_AP_TERMS_D,AP_TERM_DURATION,INPUT/OUTPUT,DIRECT MAP,,,,
2,1,SIL_APTermsDimension,Expression,Exp_W_AP_TERMS_D_Update_Flg,,DAY_LIMIT,Filter,Fil_W_AP_TERMS_D,DAY_LIMIT,INPUT/OUTPUT,DIRECT MAP,,,,
2,1,SIL_APTermsDimension,Expression,Exp_W_AP_TERMS_D_Update_Flg,,CONDITION_1_TEXT,Filter,Fil_W_AP_TERMS_D,CONDITION_1_TEXT,INPUT/OUTPUT,DIRECT MAP,,,,
2,1,SIL_APTermsDimension,Expression,Exp_W_AP_TERMS_D_Update_Flg,,CONDITION_2_TEXT,Filter,Fil_W_AP_TERMS_D,CONDITION_2_TEXT,INPUT/OUTPUT,DIRECT MAP,,,,
2,1,SIL_APTermsDimension,Expression,Exp_W_AP_TERMS_D_Update_Flg,,CONDITION_3_TEXT,Filter,Fil_W_AP_TERMS_D,CONDITION_3_TEXT,INPUT/OUTPUT,DIRECT MAP,,,,
2,1,SIL_APTermsDimension,Expression,Exp_W_AP_TERMS_D_Update_Flg,,CONDITION_4_TEXT,Filter,Fil_W_AP_TERMS_D,CONDITION_4_TEXT,INPUT/OUTPUT,DIRECT MAP,,,,
2,1,SIL_APTermsDimension,Expression,Exp_W_AP_TERMS_D_Update_Flg,,CONDITION_5_TEXT,Filter,Fil_W_AP_TERMS_D,CONDITION_5_TEXT,INPUT/OUTPUT,DIRECT MAP,,,,
2,1,SIL_APTermsDimension,Expression,Exp_W_AP_TERMS_D_Update_Flg,,CONDITION_6_TEXT,Filter,Fil_W_AP_TERMS_D,CONDITION_6_TEXT,INPUT/OUTPUT,DIRECT MAP,,,,
2,1,SIL_APTermsDimension,Expression,Exp_W_AP_TERMS_D_Update_Flg,,CONDITION_7_TEXT,Filter,Fil_W_AP_TERMS_D,CONDITION_7_TEXT,INPUT/OUTPUT,DIRECT MAP,,,,
2,1,SIL_APTermsDimension,Expression,Exp_W_AP_TERMS_D_Update_Flg,,CONDITION_8_TEXT,Filter,Fil_W_AP_TERMS_D,CONDITION_8_TEXT,INPUT/OUTPUT,DIRECT MAP,,,,
2,1,SIL_APTermsDimension,Expression,Exp_W_AP_TERMS_D_Update_Flg,,CONDITION_9_TEXT,Filter,Fil_W_AP_TERMS_D,CONDITION_9_TEXT,INPUT/OUTPUT,DIRECT MAP,,,,
2,1,SIL_APTermsDimension,Expression,Exp_W_AP_TERMS_D_Update_Flg,,CONDITION_10_TEXT,Filter,Fil_W_AP_TERMS_D,CONDITION_10_TEXT,INPUT/OUTPUT,DIRECT MAP,,,,
2,1,SIL_APTermsDimension,Expression,Exp_W_AP_TERMS_D_Update_Flg,,ACTIVE_FLG,Filter,Fil_W_AP_TERMS_D,ACTIVE_FLG,INPUT/OUTPUT,DIRECT MAP,,,,
2,1,SIL_APTermsDimension,Expression,Exp_W_AP_TERMS_D_Update_Flg,,SET_ID,Filter,Fil_W_AP_TERMS_D,SET_ID,INPUT/OUTPUT,DIRECT MAP,,,,
2,1,SIL_APTermsDimension,Filter,Fil_W_AP_TERMS_D,,LKP_DELETE_FLG,Mapplet,mplt_SIL_APTermsDimension,LKP_DELETE_FLG,,,,,,"IIF(UPDATE_FLG = 'X', FALSE, TRUE)"
2,1,SIL_APTermsDimension,Filter,Fil_W_AP_TERMS_D,,CREATED_ON_DT,Mapplet,mplt_SIL_APTermsDimension,CREATED_ON_DT,,,,,,"IIF(UPDATE_FLG = 'X', FALSE, TRUE)"
2,1,SIL_APTermsDimension,Filter,Fil_W_AP_TERMS_D,,CHANGED_ON_DT,Mapplet,mplt_SIL_APTermsDimension,CHANGED_ON_DT,,,,,,"IIF(UPDATE_FLG = 'X', FALSE, TRUE)"
2,1,SIL_APTermsDimension,Filter,Fil_W_AP_TERMS_D,,AUX1_CHANGED_ON_DT,Mapplet,mplt_SIL_APTermsDimension,AUX1_CHANGED_ON_DT,,,,,,"IIF(UPDATE_FLG = 'X', FALSE, TRUE)"
2,1,SIL_APTermsDimension,Filter,Fil_W_AP_TERMS_D,,TENANT_ID,Mapplet,mplt_SIL_APTermsDimension,TENANT_ID,,,,,,"IIF(UPDATE_FLG = 'X', FALSE, TRUE)"
2,1,SIL_APTermsDimension,Filter,Fil_W_AP_TERMS_D,,AP_TERM_CODE,Mapplet,mplt_SIL_APTermsDimension,AP_TERM_CODE,,,,,,"IIF(UPDATE_FLG = 'X', FALSE, TRUE)"
2,1,SIL_APTermsDimension,Filter,Fil_W_AP_TERMS_D,,AP_TERM_NAME,Mapplet,mplt_SIL_APTermsDimension,AP_TERM_NAME,,,,,,"IIF(UPDATE_FLG = 'X', FALSE, TRUE)"
2,1,SIL_APTermsDimension,Filter,Fil_W_AP_TERMS_D,,AP_TERM_DESC,Mapplet,mplt_SIL_APTermsDimension,AP_TERM_DESC,,,,,,"IIF(UPDATE_FLG = 'X', FALSE, TRUE)"
2,1,SIL_APTermsDimension,Filter,Fil_W_AP_TERMS_D,,AP_TERM_DURATION,Mapplet,mplt_SIL_APTermsDimension,AP_TERM_DURATION,,,,,,"IIF(UPDATE_FLG = 'X', FALSE, TRUE)"
2,1,SIL_APTermsDimension,Filter,Fil_W_AP_TERMS_D,,DAY_LIMIT,Mapplet,mplt_SIL_APTermsDimension,DAY_LIMIT,,,,,,"IIF(UPDATE_FLG = 'X', FALSE, TRUE)"
2,1,SIL_APTermsDimension,Filter,Fil_W_AP_TERMS_D,,CONDITION_1_TEXT,Mapplet,mplt_SIL_APTermsDimension,CONDITION_1_TEXT,,,,,,"IIF(UPDATE_FLG = 'X', FALSE, TRUE)"
2,1,SIL_APTermsDimension,Filter,Fil_W_AP_TERMS_D,,CONDITION_2_TEXT,Mapplet,mplt_SIL_APTermsDimension,CONDITION_2_TEXT,,,,,,"IIF(UPDATE_FLG = 'X', FALSE, TRUE)"
2,1,SIL_APTermsDimension,Filter,Fil_W_AP_TERMS_D,,CONDITION_3_TEXT,Mapplet,mplt_SIL_APTermsDimension,CONDITION_3_TEXT,,,,,,"IIF(UPDATE_FLG = 'X', FALSE, TRUE)"
2,1,SIL_APTermsDimension,Filter,Fil_W_AP_TERMS_D,,CONDITION_4_TEXT,Mapplet,mplt_SIL_APTermsDimension,CONDITION_4_TEXT,,,,,,"IIF(UPDATE_FLG = 'X', FALSE, TRUE)"
2,1,SIL_APTermsDimension,Filter,Fil_W_AP_TERMS_D,,CONDITION_5_TEXT,Mapplet,mplt_SIL_APTermsDimension,CONDITION_5_TEXT,,,,,,"IIF(UPDATE_FLG = 'X', FALSE, TRUE)"
2,1,SIL_APTermsDimension,Filter,Fil_W_AP_TERMS_D,,CONDITION_6_TEXT,Mapplet,mplt_SIL_APTermsDimension,CONDITION_6_TEXT,,,,,,"IIF(UPDATE_FLG = 'X', FALSE, TRUE)"
2,1,SIL_APTermsDimension,Filter,Fil_W_AP_TERMS_D,,CONDITION_7_TEXT,Mapplet,mplt_SIL_APTermsDimension,CONDITION_7_TEXT,,,,,,"IIF(UPDATE_FLG = 'X', FALSE, TRUE)"
2,1,SIL_APTermsDimension,Filter,Fil_W_AP_TERMS_D,,CONDITION_8_TEXT,Mapplet,mplt_SIL_APTermsDimension,CONDITION_8_TEXT,,,,,,"IIF(UPDATE_FLG = 'X', FALSE, TRUE)"
2,1,SIL_APTermsDimension,Filter,Fil_W_AP_TERMS_D,,CONDITION_9_TEXT,Mapplet,mplt_SIL_APTermsDimension,CONDITION_9_TEXT,,,,,,"IIF(UPDATE_FLG = 'X', FALSE, TRUE)"
2,1,SIL_APTermsDimension,Filter,Fil_W_AP_TERMS_D,,CONDITION_10_TEXT,Mapplet,mplt_SIL_APTermsDimension,CONDITION_10_TEXT,,,,,,"IIF(UPDATE_FLG = 'X', FALSE, TRUE)"
2,1,SIL_APTermsDimension,Filter,Fil_W_AP_TERMS_D,,ACTIVE_FLG,Mapplet,mplt_SIL_APTermsDimension,ACTIVE_FLG,,,,,,"IIF(UPDATE_FLG = 'X', FALSE, TRUE)"
2,1,SIL_APTermsDimension,Filter,Fil_W_AP_TERMS_D,,SET_ID,Mapplet,mplt_SIL_APTermsDimension,SET_ID,,,,,,"IIF(UPDATE_FLG = 'X', FALSE, TRUE)"
2,1,SIL_APTermsDimension,Filter,Fil_W_AP_TERMS_D,,AUX2_CHANGED_ON_DT,Mapplet,mplt_SIL_APTermsDimension,AUX2_CHANGED_ON_DT,,,,,,"IIF(UPDATE_FLG = 'X', FALSE, TRUE)"
2,1,SIL_APTermsDimension,Filter,Fil_W_AP_TERMS_D,,AUX3_CHANGED_ON_DT,Mapplet,mplt_SIL_APTermsDimension,AUX3_CHANGED_ON_DT,,,,,,"IIF(UPDATE_FLG = 'X', FALSE, TRUE)"
2,1,SIL_APTermsDimension,Filter,Fil_W_AP_TERMS_D,,AUX4_CHANGED_ON_DT,Mapplet,mplt_SIL_APTermsDimension,AUX4_CHANGED_ON_DT,,,,,,"IIF(UPDATE_FLG = 'X', FALSE, TRUE)"
2,1,SIL_APTermsDimension,Filter,Fil_W_AP_TERMS_D,,DELETE_FLG,Mapplet,mplt_SIL_APTermsDimension,DELETE_FLG,,,,,,"IIF(UPDATE_FLG = 'X', FALSE, TRUE)"
2,1,SIL_APTermsDimension,Filter,Fil_W_AP_TERMS_D,,INTEGRATION_ID,Mapplet,mplt_SIL_APTermsDimension,INTEGRATION_ID,,,,,,"IIF(UPDATE_FLG = 'X', FALSE, TRUE)"
2,1,SIL_APTermsDimension,Filter,Fil_W_AP_TERMS_D,,DATASOURCE_NUM_ID,Mapplet,mplt_SIL_APTermsDimension,DATASOURCE_NUM_ID,,,,,,"IIF(UPDATE_FLG = 'X', FALSE, TRUE)"
2,1,SIL_APTermsDimension,Filter,Fil_W_AP_TERMS_D,,SRC_EFF_FROM_DT,Mapplet,mplt_SIL_APTermsDimension,SRC_EFF_FROM_DT,,,,,,"IIF(UPDATE_FLG = 'X', FALSE, TRUE)"
2,1,SIL_APTermsDimension,Filter,Fil_W_AP_TERMS_D,,SRC_EFF_TO_DT,Mapplet,mplt_SIL_APTermsDimension,SRC_EFF_TO_DT,,,,,,"IIF(UPDATE_FLG = 'X', FALSE, TRUE)"
2,1,SIL_APTermsDimension,Filter,Fil_W_AP_TERMS_D,,LKP_ROW_WID,Mapplet,mplt_SIL_APTermsDimension,LKP_ROW_WID,,,,,,"IIF(UPDATE_FLG = 'X', FALSE, TRUE)"
2,1,SIL_APTermsDimension,Filter,Fil_W_AP_TERMS_D,,LKP_W_INSERT_DT,Mapplet,mplt_SIL_APTermsDimension,LKP_W_INSERT_DT,,,,,,"IIF(UPDATE_FLG = 'X', FALSE, TRUE)"
2,1,SIL_APTermsDimension,Filter,Fil_W_AP_TERMS_D,,LKP_EFFECTIVE_FROM_DT,Mapplet,mplt_SIL_APTermsDimension,LKP_EFFECTIVE_FROM_DT,,,,,,"IIF(UPDATE_FLG = 'X', FALSE, TRUE)"
2,1,SIL_APTermsDimension,Filter,Fil_W_AP_TERMS_D,,LKP_EFFECTIVE_TO_DT,Mapplet,mplt_SIL_APTermsDimension,LKP_EFFECTIVE_TO_DT,,,,,,"IIF(UPDATE_FLG = 'X', FALSE, TRUE)"
2,1,SIL_APTermsDimension,Filter,Fil_W_AP_TERMS_D,,UPDATE_FLG,Mapplet,mplt_SIL_APTermsDimension,UPDATE_FLG,,,,,,"IIF(UPDATE_FLG = 'X', FALSE, TRUE)"
2,1,SIL_APTermsDimension,Filter,Fil_W_AP_TERMS_D,,ETL_PROC_WID,Mapplet,mplt_SIL_APTermsDimension,ETL_PROC_WID,,,,,,"IIF(UPDATE_FLG = 'X', FALSE, TRUE)"
2,1,SIL_APTermsDimension,Filter,Fil_W_AP_TERMS_D,,CREATED_BY_ID,Mapplet,mplt_SIL_APTermsDimension,CREATED_BY_ID,,,,,,"IIF(UPDATE_FLG = 'X', FALSE, TRUE)"
2,1,SIL_APTermsDimension,Filter,Fil_W_AP_TERMS_D,,CHANGED_BY_ID,Mapplet,mplt_SIL_APTermsDimension,CHANGED_BY_ID,,,,,,"IIF(UPDATE_FLG = 'X', FALSE, TRUE)"
2,1,SIL_APTermsDimension,Filter,Fil_W_AP_TERMS_D,,X_CUSTOM,Expression,Exp_Custom,X_CUSTOM,,,,,,"IIF(UPDATE_FLG = 'X', FALSE, TRUE)"
2,1,SIL_APTermsDimension,Mapplet,mplt_SIL_APTermsDimension,,EXT_CREATED_ON_DT,Update Strategy,Upd_W_AP_TERMS_D_Ins_Upd,CREATED_ON_DT,,,,,,
2,1,SIL_APTermsDimension,Mapplet,mplt_SIL_APTermsDimension,,EXT_CHANGED_ON_DT,Update Strategy,Upd_W_AP_TERMS_D_Ins_Upd,CHANGED_ON_DT,,,,,,
2,1,SIL_APTermsDimension,Mapplet,mplt_SIL_APTermsDimension,,EXT_AUX1_CHANGED_ON_DT,Update Strategy,Upd_W_AP_TERMS_D_Ins_Upd,AUX1_CHANGED_ON_DT,,,,,,
2,1,SIL_APTermsDimension,Mapplet,mplt_SIL_APTermsDimension,,EXT_AUX2_CHANGED_ON_DT,Update Strategy,Upd_W_AP_TERMS_D_Ins_Upd,AUX2_CHANGED_ON_DT,,,,,,
2,1,SIL_APTermsDimension,Mapplet,mplt_SIL_APTermsDimension,,EXT_AUX3_CHANGED_ON_DT,Update Strategy,Upd_W_AP_TERMS_D_Ins_Upd,AUX3_CHANGED_ON_DT,,,,,,
2,1,SIL_APTermsDimension,Mapplet,mplt_SIL_APTermsDimension,,EXT_AUX4_CHANGED_ON_DT,Update Strategy,Upd_W_AP_TERMS_D_Ins_Upd,AUX4_CHANGED_ON_DT,,,,,,
2,1,SIL_APTermsDimension,Mapplet,mplt_SIL_APTermsDimension,,EXT_INTEGRATION_ID,Update Strategy,Upd_W_AP_TERMS_D_Ins_Upd,INTEGRATION_ID,,,,,,
2,1,SIL_APTermsDimension,Mapplet,mplt_SIL_APTermsDimension,,EXT_DATASOURCE_NUM_ID,Update Strategy,Upd_W_AP_TERMS_D_Ins_Upd,DATASOURCE_NUM_ID,,,,,,
2,1,SIL_APTermsDimension,Mapplet,mplt_SIL_APTermsDimension,,EXT_UPDATE_FLG,Update Strategy,Upd_W_AP_TERMS_D_Ins_Upd,UPDATE_FLG,,,,,,
2,1,SIL_APTermsDimension,Mapplet,mplt_SIL_APTermsDimension,,EXT_ROW_WID,Update Strategy,Upd_W_AP_TERMS_D_Ins_Upd,ROW_WID,,,,,,
2,1,SIL_APTermsDimension,Mapplet,mplt_SIL_APTermsDimension,,EXT_W_INSERT_DT,Update Strategy,Upd_W_AP_TERMS_D_Ins_Upd,W_INSERT_DT,,,,,,
2,1,SIL_APTermsDimension,Mapplet,mplt_SIL_APTermsDimension,,EXT_W_UPDATE_DT,Update Strategy,Upd_W_AP_TERMS_D_Ins_Upd,W_UPDATE_DT,,,,,,
2,1,SIL_APTermsDimension,Mapplet,mplt_SIL_APTermsDimension,,EXT_EFFECTIVE_FROM_DT,Update Strategy,Upd_W_AP_TERMS_D_Ins_Upd,EFFECTIVE_FROM_DT,,,,,,
2,1,SIL_APTermsDimension,Mapplet,mplt_SIL_APTermsDimension,,EXT_EFFECTIVE_TO_DT,Update Strategy,Upd_W_AP_TERMS_D_Ins_Upd,EFFECTIVE_TO_DT,,,,,,
2,1,SIL_APTermsDimension,Mapplet,mplt_SIL_APTermsDimension,,EXT_CURRENT_FLG,Update Strategy,Upd_W_AP_TERMS_D_Ins_Upd,CURRENT_FLG,,,,,,
2,1,SIL_APTermsDimension,Mapplet,mplt_SIL_APTermsDimension,,EXT_ETL_PROC_WID,Update Strategy,Upd_W_AP_TERMS_D_Ins_Upd,ETL_PROC_WID,,,,,,
2,1,SIL_APTermsDimension,Mapplet,mplt_SIL_APTermsDimension,,EXT_SRC_EFF_FROM_DT,Update Strategy,Upd_W_AP_TERMS_D_Ins_Upd,SRC_EFF_FROM_DT,,,,,,
2,1,SIL_APTermsDimension,Mapplet,mplt_SIL_APTermsDimension,,EXT_SRC_EFF_TO_DT,Update Strategy,Upd_W_AP_TERMS_D_Ins_Upd,SRC_EFF_TO_DT,,,,,,
2,1,SIL_APTermsDimension,Mapplet,mplt_SIL_APTermsDimension,,EXT_CREATED_BY_WID,Update Strategy,Upd_W_AP_TERMS_D_Ins_Upd,CREATED_BY_WID,,,,,,
2,1,SIL_APTermsDimension,Mapplet,mplt_SIL_APTermsDimension,,EXT_CHANGED_BY_WID,Update Strategy,Upd_W_AP_TERMS_D_Ins_Upd,CHANGED_BY_WID,,,,,,
2,1,SIL_APTermsDimension,Mapplet,mplt_SIL_APTermsDimension,,EXT_DELETE_FLG,Update Strategy,Upd_W_AP_TERMS_D_Ins_Upd,DELETE_FLG,,,,,,
2,1,SIL_APTermsDimension,Mapplet,mplt_SIL_APTermsDimension,,EXT_TENANT_ID,Update Strategy,Upd_W_AP_TERMS_D_Ins_Upd,TENANT_ID,,,,,,
2,1,SIL_APTermsDimension,Mapplet,mplt_SIL_APTermsDimension,,EXT_AP_TERM_CODE,Update Strategy,Upd_W_AP_TERMS_D_Ins_Upd,AP_TERM_CODE,,,,,,
2,1,SIL_APTermsDimension,Mapplet,mplt_SIL_APTermsDimension,,EXT_AP_TERM_NAME,Update Strategy,Upd_W_AP_TERMS_D_Ins_Upd,AP_TERM_NAME,,,,,,
2,1,SIL_APTermsDimension,Mapplet,mplt_SIL_APTermsDimension,,EXT_AP_TERM_DESC,Update Strategy,Upd_W_AP_TERMS_D_Ins_Upd,AP_TERM_DESC,,,,,,
2,1,SIL_APTermsDimension,Mapplet,mplt_SIL_APTermsDimension,,EXT_AP_TERM_DURATION,Update Strategy,Upd_W_AP_TERMS_D_Ins_Upd,AP_TERM_DURATION,,,,,,
2,1,SIL_APTermsDimension,Mapplet,mplt_SIL_APTermsDimension,,EXT_DAY_LIMIT,Update Strategy,Upd_W_AP_TERMS_D_Ins_Upd,DAY_LIMIT,,,,,,
2,1,SIL_APTermsDimension,Mapplet,mplt_SIL_APTermsDimension,,EXT_CONDITION_1_TEXT,Update Strategy,Upd_W_AP_TERMS_D_Ins_Upd,CONDITION_1_TEXT,,,,,,
2,1,SIL_APTermsDimension,Mapplet,mplt_SIL_APTermsDimension,,EXT_CONDITION_2_TEXT,Update Strategy,Upd_W_AP_TERMS_D_Ins_Upd,CONDITION_2_TEXT,,,,,,
2,1,SIL_APTermsDimension,Mapplet,mplt_SIL_APTermsDimension,,EXT_CONDITION_3_TEXT,Update Strategy,Upd_W_AP_TERMS_D_Ins_Upd,CONDITION_3_TEXT,,,,,,
2,1,SIL_APTermsDimension,Mapplet,mplt_SIL_APTermsDimension,,EXT_CONDITION_4_TEXT,Update Strategy,Upd_W_AP_TERMS_D_Ins_Upd,CONDITION_4_TEXT,,,,,,
2,1,SIL_APTermsDimension,Mapplet,mplt_SIL_APTermsDimension,,EXT_CONDITION_5_TEXT,Update Strategy,Upd_W_AP_TERMS_D_Ins_Upd,CONDITION_5_TEXT,,,,,,
2,1,SIL_APTermsDimension,Mapplet,mplt_SIL_APTermsDimension,,EXT_CONDITION_6_TEXT,Update Strategy,Upd_W_AP_TERMS_D_Ins_Upd,CONDITION_6_TEXT,,,,,,
2,1,SIL_APTermsDimension,Mapplet,mplt_SIL_APTermsDimension,,EXT_CONDITION_7_TEXT,Update Strategy,Upd_W_AP_TERMS_D_Ins_Upd,CONDITION_7_TEXT,,,,,,
2,1,SIL_APTermsDimension,Mapplet,mplt_SIL_APTermsDimension,,EXT_CONDITION_8_TEXT,Update Strategy,Upd_W_AP_TERMS_D_Ins_Upd,CONDITION_8_TEXT,,,,,,
2,1,SIL_APTermsDimension,Mapplet,mplt_SIL_APTermsDimension,,EXT_CONDITION_9_TEXT,Update Strategy,Upd_W_AP_TERMS_D_Ins_Upd,CONDITION_9_TEXT,,,,,,
2,1,SIL_APTermsDimension,Mapplet,mplt_SIL_APTermsDimension,,EXT_CONDITION_10_TEXT,Update Strategy,Upd_W_AP_TERMS_D_Ins_Upd,CONDITION_10_TEXT,,,,,,
2,1,SIL_APTermsDimension,Mapplet,mplt_SIL_APTermsDimension,,EXT_ACTIVE_FLG,Update Strategy,Upd_W_AP_TERMS_D_Ins_Upd,ACTIVE_FLG,,,,,,
2,1,SIL_APTermsDimension,Mapplet,mplt_SIL_APTermsDimension,,EXT_SET_ID,Update Strategy,Upd_W_AP_TERMS_D_Ins_Upd,SET_ID,,,,,,
2,1,SIL_APTermsDimension,Expression,Exp_Custom,,X_CUSTOM,Update Strategy,Upd_W_AP_TERMS_D_Ins_Upd,X_CUSTOM,INPUT/OUTPUT,DIRECT MAP,,,,
2,1,SIL_APTermsDimension,Update Strategy,Upd_W_AP_TERMS_D_Ins_Upd,,CREATED_ON_DT,Target Definition,W_AP_TERMS_D,CREATED_ON_DT,,,,,,
2,1,SIL_APTermsDimension,Update Strategy,Upd_W_AP_TERMS_D_Ins_Upd,,CHANGED_ON_DT,Target Definition,W_AP_TERMS_D,CHANGED_ON_DT,,,,,,
2,1,SIL_APTermsDimension,Update Strategy,Upd_W_AP_TERMS_D_Ins_Upd,,AUX1_CHANGED_ON_DT,Target Definition,W_AP_TERMS_D,AUX1_CHANGED_ON_DT,,,,,,
2,1,SIL_APTermsDimension,Update Strategy,Upd_W_AP_TERMS_D_Ins_Upd,,AUX2_CHANGED_ON_DT,Target Definition,W_AP_TERMS_D,AUX2_CHANGED_ON_DT,,,,,,
2,1,SIL_APTermsDimension,Update Strategy,Upd_W_AP_TERMS_D_Ins_Upd,,AUX3_CHANGED_ON_DT,Target Definition,W_AP_TERMS_D,AUX3_CHANGED_ON_DT,,,,,,
2,1,SIL_APTermsDimension,Update Strategy,Upd_W_AP_TERMS_D_Ins_Upd,,AUX4_CHANGED_ON_DT,Target Definition,W_AP_TERMS_D,AUX4_CHANGED_ON_DT,,,,,,
2,1,SIL_APTermsDimension,Update Strategy,Upd_W_AP_TERMS_D_Ins_Upd,,DELETE_FLG,Target Definition,W_AP_TERMS_D,DELETE_FLG,,,,,,
2,1,SIL_APTermsDimension,Update Strategy,Upd_W_AP_TERMS_D_Ins_Upd,,INTEGRATION_ID,Target Definition,W_AP_TERMS_D,INTEGRATION_ID,,,,,,
2,1,SIL_APTermsDimension,Update Strategy,Upd_W_AP_TERMS_D_Ins_Upd,,DATASOURCE_NUM_ID,Target Definition,W_AP_TERMS_D,DATASOURCE_NUM_ID,,,,,,
2,1,SIL_APTermsDimension,Update Strategy,Upd_W_AP_TERMS_D_Ins_Upd,,ROW_WID,Target Definition,W_AP_TERMS_D,ROW_WID,,,,,,
2,1,SIL_APTermsDimension,Update Strategy,Upd_W_AP_TERMS_D_Ins_Upd,,EFFECTIVE_FROM_DT,Target Definition,W_AP_TERMS_D,EFFECTIVE_FROM_DT,,,,,,
2,1,SIL_APTermsDimension,Update Strategy,Upd_W_AP_TERMS_D_Ins_Upd,,EFFECTIVE_TO_DT,Target Definition,W_AP_TERMS_D,EFFECTIVE_TO_DT,,,,,,
2,1,SIL_APTermsDimension,Update Strategy,Upd_W_AP_TERMS_D_Ins_Upd,,CURRENT_FLG,Target Definition,W_AP_TERMS_D,CURRENT_FLG,,,,,,
2,1,SIL_APTermsDimension,Update Strategy,Upd_W_AP_TERMS_D_Ins_Upd,,X_CUSTOM,Target Definition,W_AP_TERMS_D,X_CUSTOM,,,,,,
2,1,SIL_APTermsDimension,Update Strategy,Upd_W_AP_TERMS_D_Ins_Upd,,ETL_PROC_WID,Target Definition,W_AP_TERMS_D,ETL_PROC_WID,,,,,,
2,1,SIL_APTermsDimension,Update Strategy,Upd_W_AP_TERMS_D_Ins_Upd,,SRC_EFF_FROM_DT,Target Definition,W_AP_TERMS_D,SRC_EFF_FROM_DT,,,,,,
2,1,SIL_APTermsDimension,Update Strategy,Upd_W_AP_TERMS_D_Ins_Upd,,SRC_EFF_TO_DT,Target Definition,W_AP_TERMS_D,SRC_EFF_TO_DT,,,,,,
2,1,SIL_APTermsDimension,Update Strategy,Upd_W_AP_TERMS_D_Ins_Upd,,CREATED_BY_WID,Target Definition,W_AP_TERMS_D,CREATED_BY_WID,,,,,,
2,1,SIL_APTermsDimension,Update Strategy,Upd_W_AP_TERMS_D_Ins_Upd,,CHANGED_BY_WID,Target Definition,W_AP_TERMS_D,CHANGED_BY_WID,,,,,,
2,1,SIL_APTermsDimension,Update Strategy,Upd_W_AP_TERMS_D_Ins_Upd,,W_INSERT_DT,Target Definition,W_AP_TERMS_D,W_INSERT_DT,,,,,,
2,1,SIL_APTermsDimension,Update Strategy,Upd_W_AP_TERMS_D_Ins_Upd,,W_UPDATE_DT,Target Definition,W_AP_TERMS_D,W_UPDATE_DT,,,,,,
2,1,SIL_APTermsDimension,Update Strategy,Upd_W_AP_TERMS_D_Ins_Upd,,TENANT_ID,Target Definition,W_AP_TERMS_D,TENANT_ID,,,,,,
2,1,SIL_APTermsDimension,Update Strategy,Upd_W_AP_TERMS_D_Ins_Upd,,AP_TERM_CODE,Target Definition,W_AP_TERMS_D,AP_TERM_CODE,,,,,,
2,1,SIL_APTermsDimension,Update Strategy,Upd_W_AP_TERMS_D_Ins_Upd,,AP_TERM_NAME,Target Definition,W_AP_TERMS_D,AP_TERM_NAME,,,,,,
2,1,SIL_APTermsDimension,Update Strategy,Upd_W_AP_TERMS_D_Ins_Upd,,AP_TERM_DESC,Target Definition,W_AP_TERMS_D,AP_TERM_DESC,,,,,,
2,1,SIL_APTermsDimension,Update Strategy,Upd_W_AP_TERMS_D_Ins_Upd,,AP_TERM_DURATION,Target Definition,W_AP_TERMS_D,AP_TERM_DURATION,,,,,,
2,1,SIL_APTermsDimension,Update Strategy,Upd_W_AP_TERMS_D_Ins_Upd,,DAY_LIMIT,Target Definition,W_AP_TERMS_D,DAY_LIMIT,,,,,,
2,1,SIL_APTermsDimension,Update Strategy,Upd_W_AP_TERMS_D_Ins_Upd,,CONDITION_1_TEXT,Target Definition,W_AP_TERMS_D,CONDITION_1_TEXT,,,,,,
2,1,SIL_APTermsDimension,Update Strategy,Upd_W_AP_TERMS_D_Ins_Upd,,CONDITION_2_TEXT,Target Definition,W_AP_TERMS_D,CONDITION_2_TEXT,,,,,,
2,1,SIL_APTermsDimension,Update Strategy,Upd_W_AP_TERMS_D_Ins_Upd,,CONDITION_3_TEXT,Target Definition,W_AP_TERMS_D,CONDITION_3_TEXT,,,,,,
2,1,SIL_APTermsDimension,Update Strategy,Upd_W_AP_TERMS_D_Ins_Upd,,CONDITION_4_TEXT,Target Definition,W_AP_TERMS_D,CONDITION_4_TEXT,,,,,,
2,1,SIL_APTermsDimension,Update Strategy,Upd_W_AP_TERMS_D_Ins_Upd,,CONDITION_5_TEXT,Target Definition,W_AP_TERMS_D,CONDITION_5_TEXT,,,,,,
2,1,SIL_APTermsDimension,Update Strategy,Upd_W_AP_TERMS_D_Ins_Upd,,CONDITION_6_TEXT,Target Definition,W_AP_TERMS_D,CONDITION_6_TEXT,,,,,,
2,1,SIL_APTermsDimension,Update Strategy,Upd_W_AP_TERMS_D_Ins_Upd,,CONDITION_7_TEXT,Target Definition,W_AP_TERMS_D,CONDITION_7_TEXT,,,,,,
2,1,SIL_APTermsDimension,Update Strategy,Upd_W_AP_TERMS_D_Ins_Upd,,CONDITION_8_TEXT,Target Definition,W_AP_TERMS_D,CONDITION_8_TEXT,,,,,,
2,1,SIL_APTermsDimension,Update Strategy,Upd_W_AP_TERMS_D_Ins_Upd,,CONDITION_9_TEXT,Target Definition,W_AP_TERMS_D,CONDITION_9_TEXT,,,,,,
2,1,SIL_APTermsDimension,Update Strategy,Upd_W_AP_TERMS_D_Ins_Upd,,CONDITION_10_TEXT,Target Definition,W_AP_TERMS_D,CONDITION_10_TEXT,,,,,,
2,1,SIL_APTermsDimension,Update Strategy,Upd_W_AP_TERMS_D_Ins_Upd,,ACTIVE_FLG,Target Definition,W_AP_TERMS_D,ACTIVE_FLG,,,,,,
2,1,SIL_APTermsDimension,Update Strategy,Upd_W_AP_TERMS_D_Ins_Upd,,SET_ID,Target Definition,W_AP_TERMS_D,SET_ID,,,,,,
2,1,SIL_APTermsDimension,Expression,Exp_W_AP_TERMS_D_Validate,,CREATED_ON_DT,Lookup Procedure,Lkp_W_USER_D_Created_By_Wid,IN_DATE,INPUT/OUTPUT,DIRECT MAP,,,,
2,1,SIL_APTermsDimension,Expression,Exp_W_AP_TERMS_D_Validate,,CREATED_BY_ID,Lookup Procedure,Lkp_W_USER_D_Created_By_Wid,IN_INTEGRATION_ID,INPUT/OUTPUT,DIRECT MAP,,,,
2,1,SIL_APTermsDimension,Expression,Exp_W_AP_TERMS_D_Validate,,DATASOURCE_NUM_ID,Lookup Procedure,Lkp_W_USER_D_Created_By_Wid,IN_DATASOURCE_NUM_ID,INPUT/OUTPUT,DIRECT MAP,,,,
2,1,SIL_APTermsDimension,Expression,Exp_W_AP_TERMS_D_Validate,,AP_TERM_CODE,Lookup Procedure,Lkp_Codes_AP_TERM,IN_SOURCE_CODE,INPUT/OUTPUT,DIRECT MAP,,,,
2,1,SIL_APTermsDimension,Expression,Exp_W_AP_TERMS_D_Validate,,DATASOURCE_NUM_ID,Lookup Procedure,Lkp_Codes_AP_TERM,IN_DATASOURCE_NUM_ID,INPUT/OUTPUT,DIRECT MAP,,,,
2,1,SIL_APTermsDimension,Input Transformation,Input,,DELETE_FLG,Expression,Exp_W_AP_TERMS_D_Validate,DELETE_FLG,,,,,,
2,1,SIL_APTermsDimension,Input Transformation,Input,,INTEGRATION_ID,Expression,Exp_W_AP_TERMS_D_Validate,INTEGRATION_ID,,,,,,
2,1,SIL_APTermsDimension,Input Transformation,Input,,DATASOURCE_NUM_ID,Expression,Exp_W_AP_TERMS_D_Validate,DATASOURCE_NUM_ID,,,,,,
2,1,SIL_APTermsDimension,Input Transformation,Input,,SRC_EFF_FROM_DT,Expression,Exp_W_AP_TERMS_D_Validate,SRC_EFF_FROM_DT,,,,,,
2,1,SIL_APTermsDimension,Input Transformation,Input,,SRC_EFF_TO_DT,Expression,Exp_W_AP_TERMS_D_Validate,SRC_EFF_TO_DT,,,,,,
2,1,SIL_APTermsDimension,Input Transformation,Input,,LKP_ROW_WID,Expression,Exp_W_AP_TERMS_D_Validate,LKP_ROW_WID,,,,,,
2,1,SIL_APTermsDimension,Input Transformation,Input,,LKP_W_INSERT_DT,Expression,Exp_W_AP_TERMS_D_Validate,LKP_W_INSERT_DT,,,,,,
2,1,SIL_APTermsDimension,Input Transformation,Input,,LKP_EFFECTIVE_FROM_DT,Expression,Exp_W_AP_TERMS_D_Validate,LKP_EFFECTIVE_FROM_DT,,,,,,
2,1,SIL_APTermsDimension,Input Transformation,Input,,LKP_EFFECTIVE_TO_DT,Expression,Exp_W_AP_TERMS_D_Validate,LKP_EFFECTIVE_TO_DT,,,,,,
2,1,SIL_APTermsDimension,Input Transformation,Input,,UPDATE_FLG,Expression,Exp_W_AP_TERMS_D_Validate,UPDATE_FLG,,,,,,
2,1,SIL_APTermsDimension,Input Transformation,Input,,ETL_PROC_WID,Expression,Exp_W_AP_TERMS_D_Validate,ETL_PROC_WID,,,,,,
2,1,SIL_APTermsDimension,Input Transformation,Input,,CREATED_BY_ID,Expression,Exp_W_AP_TERMS_D_Validate,CREATED_BY_ID,,,,,,
2,1,SIL_APTermsDimension,Input Transformation,Input,,CHANGED_BY_ID,Expression,Exp_W_AP_TERMS_D_Validate,CHANGED_BY_ID,,,,,,
2,1,SIL_APTermsDimension,Input Transformation,Input,,LKP_DELETE_FLG,Expression,Exp_W_AP_TERMS_D_Validate,LKP_DELETE_FLG,,,,,,
2,1,SIL_APTermsDimension,Input Transformation,Input,,TENANT_ID,Expression,Exp_W_AP_TERMS_D_Validate,TENANT_ID,,,,,,
2,1,SIL_APTermsDimension,Input Transformation,Input,,CREATED_ON_DT,Expression,Exp_W_AP_TERMS_D_Validate,CREATED_ON_DT,,,,,,
2,1,SIL_APTermsDimension,Input Transformation,Input,,CHANGED_ON_DT,Expression,Exp_W_AP_TERMS_D_Validate,CHANGED_ON_DT,,,,,,
2,1,SIL_APTermsDimension,Input Transformation,Input,,AUX1_CHANGED_ON_DT,Expression,Exp_W_AP_TERMS_D_Validate,AUX1_CHANGED_ON_DT,,,,,,
2,1,SIL_APTermsDimension,Input Transformation,Input,,AUX2_CHANGED_ON_DT,Expression,Exp_W_AP_TERMS_D_Validate,AUX2_CHANGED_ON_DT,,,,,,
2,1,SIL_APTermsDimension,Input Transformation,Input,,AUX3_CHANGED_ON_DT,Expression,Exp_W_AP_TERMS_D_Validate,AUX3_CHANGED_ON_DT,,,,,,
2,1,SIL_APTermsDimension,Input Transformation,Input,,AUX4_CHANGED_ON_DT,Expression,Exp_W_AP_TERMS_D_Validate,AUX4_CHANGED_ON_DT,,,,,,
2,1,SIL_APTermsDimension,Input Transformation,Input,,AP_TERM_CODE,Expression,Exp_W_AP_TERMS_D_Validate,AP_TERM_CODE,,,,,,
2,1,SIL_APTermsDimension,Input Transformation,Input,,AP_TERM_NAME,Expression,Exp_W_AP_TERMS_D_Validate,AP_TERM_NAME,,,,,,
2,1,SIL_APTermsDimension,Input Transformation,Input,,AP_TERM_DESC,Expression,Exp_W_AP_TERMS_D_Validate,AP_TERM_DESC,,,,,,
2,1,SIL_APTermsDimension,Input Transformation,Input,,AP_TERM_DURATION,Expression,Exp_W_AP_TERMS_D_Validate,AP_TERM_DURATION,,,,,,
2,1,SIL_APTermsDimension,Input Transformation,Input,,DAY_LIMIT,Expression,Exp_W_AP_TERMS_D_Validate,DAY_LIMIT,,,,,,
2,1,SIL_APTermsDimension,Input Transformation,Input,,CONDITION_1_TEXT,Expression,Exp_W_AP_TERMS_D_Validate,CONDITION_1_TEXT,,,,,,
2,1,SIL_APTermsDimension,Input Transformation,Input,,CONDITION_2_TEXT,Expression,Exp_W_AP_TERMS_D_Validate,CONDITION_2_TEXT,,,,,,
2,1,SIL_APTermsDimension,Input Transformation,Input,,CONDITION_3_TEXT,Expression,Exp_W_AP_TERMS_D_Validate,CONDITION_3_TEXT,,,,,,
2,1,SIL_APTermsDimension,Input Transformation,Input,,CONDITION_4_TEXT,Expression,Exp_W_AP_TERMS_D_Validate,CONDITION_4_TEXT,,,,,,
2,1,SIL_APTermsDimension,Input Transformation,Input,,CONDITION_5_TEXT,Expression,Exp_W_AP_TERMS_D_Validate,CONDITION_5_TEXT,,,,,,
2,1,SIL_APTermsDimension,Input Transformation,Input,,CONDITION_6_TEXT,Expression,Exp_W_AP_TERMS_D_Validate,CONDITION_6_TEXT,,,,,,
2,1,SIL_APTermsDimension,Input Transformation,Input,,CONDITION_7_TEXT,Expression,Exp_W_AP_TERMS_D_Validate,CONDITION_7_TEXT,,,,,,
2,1,SIL_APTermsDimension,Input Transformation,Input,,CONDITION_8_TEXT,Expression,Exp_W_AP_TERMS_D_Validate,CONDITION_8_TEXT,,,,,,
2,1,SIL_APTermsDimension,Input Transformation,Input,,CONDITION_9_TEXT,Expression,Exp_W_AP_TERMS_D_Validate,CONDITION_9_TEXT,,,,,,
2,1,SIL_APTermsDimension,Input Transformation,Input,,CONDITION_10_TEXT,Expression,Exp_W_AP_TERMS_D_Validate,CONDITION_10_TEXT,,,,,,
2,1,SIL_APTermsDimension,Input Transformation,Input,,ACTIVE_FLG,Expression,Exp_W_AP_TERMS_D_Validate,ACTIVE_FLG,,,,,,
2,1,SIL_APTermsDimension,Input Transformation,Input,,SET_ID,Expression,Exp_W_AP_TERMS_D_Validate,SET_ID,,,,,,
2,1,SIL_APTermsDimension,Expression,Exp_W_AP_TERMS_D_Validate,,AUX4_CHANGED_ON_DT,Expression,Exp_Scd2_Dates,INP_AUX4_CHANGED_ON_DT,INPUT/OUTPUT,DIRECT MAP,,,,
2,1,SIL_APTermsDimension,Expression,Exp_W_AP_TERMS_D_Validate,,AUX3_CHANGED_ON_DT,Expression,Exp_Scd2_Dates,INP_AUX3_CHANGED_ON_DT,INPUT/OUTPUT,DIRECT MAP,,,,
2,1,SIL_APTermsDimension,Expression,Exp_W_AP_TERMS_D_Validate,,AUX2_CHANGED_ON_DT,Expression,Exp_Scd2_Dates,INP_AUX2_CHANGED_ON_DT,INPUT/OUTPUT,DIRECT MAP,,,,
2,1,SIL_APTermsDimension,Expression,Exp_W_AP_TERMS_D_Validate,,AUX1_CHANGED_ON_DT,Expression,Exp_Scd2_Dates,INP_AUX1_CHANGED_ON_DT,INPUT/OUTPUT,DIRECT MAP,,,,
2,1,SIL_APTermsDimension,Expression,Exp_W_AP_TERMS_D_Validate,,LKP_DELETE_FLG,Expression,Exp_Scd2_Dates,INP_OLD_DELETE_FLG,INPUT/OUTPUT,DIRECT MAP,,,,
2,1,SIL_APTermsDimension,Expression,Exp_W_AP_TERMS_D_Validate,,LKP_EFFECTIVE_TO_DT,Expression,Exp_Scd2_Dates,INP_OLD_EFFECTIVE_TO_DT,INPUT/OUTPUT,DIRECT MAP,,,,
2,1,SIL_APTermsDimension,Expression,Exp_W_AP_TERMS_D_Validate,,LKP_EFFECTIVE_FROM_DT,Expression,Exp_Scd2_Dates,INP_OLD_EFFECTIVE_FROM_DT,INPUT/OUTPUT,DIRECT MAP,,,,
2,1,SIL_APTermsDimension,Expression,Exp_W_AP_TERMS_D_Validate,,LKP_W_INSERT_DT,Expression,Exp_Scd2_Dates,INP_OLD_W_INSERT_DT,INPUT/OUTPUT,DIRECT MAP,,,,
2,1,SIL_APTermsDimension,Expression,Exp_W_AP_TERMS_D_Validate,,LKP_ROW_WID,Expression,Exp_Scd2_Dates,INP_OLD_ROW_WID,INPUT/OUTPUT,DIRECT MAP,,,,
2,1,SIL_APTermsDimension,Expression,Exp_W_AP_TERMS_D_Validate,,DELETE_FLG,Expression,Exp_Scd2_Dates,INP_DELETE_FLG,INPUT/OUTPUT,DIRECT MAP,,,,
2,1,SIL_APTermsDimension,Expression,Exp_W_AP_TERMS_D_Validate,,CHANGED_ON_DT,Expression,Exp_Scd2_Dates,INP_CHANGED_ON_DT,INPUT/OUTPUT,DIRECT MAP,,,,
2,1,SIL_APTermsDimension,Expression,Exp_W_AP_TERMS_D_Validate,,SRC_EFF_TO_DT,Expression,Exp_Scd2_Dates,INP_SRC_EFF_TO_DT,INPUT/OUTPUT,DIRECT MAP,,,,
2,1,SIL_APTermsDimension,Expression,Exp_W_AP_TERMS_D_Validate,,SRC_EFF_FROM_DT,Expression,Exp_Scd2_Dates,INP_SRC_EFF_FROM_DT,INPUT/OUTPUT,DIRECT MAP,,,,
2,1,SIL_APTermsDimension,Sequence,Seq_W_AP_TERMS_D_Wid,,NEXTVAL,Expression,Exp_Scd2_Dates,INP_SEQ_NEXTVAL,,,,,,
2,1,SIL_APTermsDimension,Expression,Exp_W_AP_TERMS_D_Validate,,UPDATE_FLG,Expression,Exp_Scd2_Dates,INP_UPDATE_FLG,INPUT/OUTPUT,DIRECT MAP,,,,
2,1,SIL_APTermsDimension,Expression,Exp_W_AP_TERMS_D_Validate,,CHANGED_BY_ID,Lookup Procedure,Lkp_W_USER_D_Changed_By_Wid,IN_INTEGRATION_ID,INPUT/OUTPUT,DIRECT MAP,,,,
2,1,SIL_APTermsDimension,Expression,Exp_W_AP_TERMS_D_Validate,,DATASOURCE_NUM_ID,Lookup Procedure,Lkp_W_USER_D_Changed_By_Wid,IN_DATASOURCE_NUM_ID,INPUT/OUTPUT,DIRECT MAP,,,,
2,1,SIL_APTermsDimension,Expression,Exp_W_AP_TERMS_D_Validate,,CHANGED_ON_DT,Lookup Procedure,Lkp_W_USER_D_Changed_By_Wid,IN_DATE,INPUT/OUTPUT,DIRECT MAP,,,,
